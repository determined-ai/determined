/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1SearcherEvent } from './V1SearcherEvent';
import {
    V1SearcherEventFromJSON,
    V1SearcherEventFromJSONTyped,
    V1SearcherEventToJSON,
} from './V1SearcherEvent';
import type { V1SearcherOperation } from './V1SearcherOperation';
import {
    V1SearcherOperationFromJSON,
    V1SearcherOperationFromJSONTyped,
    V1SearcherOperationToJSON,
} from './V1SearcherOperation';

/**
 * Request for sending operations from a custom search method.
 * @export
 * @interface V1PostSearcherOperationsRequest
 */
export interface V1PostSearcherOperationsRequest {
    /**
     * The experiment ID.
     * @type {number}
     * @memberof V1PostSearcherOperationsRequest
     */
    experimentId?: number;
    /**
     * List of operations to submit.
     * @type {Array<V1SearcherOperation>}
     * @memberof V1PostSearcherOperationsRequest
     */
    searcherOperations?: Array<V1SearcherOperation>;
    /**
     * 
     * @type {V1SearcherEvent}
     * @memberof V1PostSearcherOperationsRequest
     */
    triggeredByEvent?: V1SearcherEvent;
}

/**
 * Check if a given object implements the V1PostSearcherOperationsRequest interface.
 */
export function instanceOfV1PostSearcherOperationsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1PostSearcherOperationsRequestFromJSON(json: any): V1PostSearcherOperationsRequest {
    return V1PostSearcherOperationsRequestFromJSONTyped(json, false);
}

export function V1PostSearcherOperationsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PostSearcherOperationsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'experimentId': !exists(json, 'experimentId') ? undefined : json['experimentId'],
        'searcherOperations': !exists(json, 'searcherOperations') ? undefined : ((json['searcherOperations'] as Array<any>).map(V1SearcherOperationFromJSON)),
        'triggeredByEvent': !exists(json, 'triggeredByEvent') ? undefined : V1SearcherEventFromJSON(json['triggeredByEvent']),
    };
}

export function V1PostSearcherOperationsRequestToJSON(value?: V1PostSearcherOperationsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'experimentId': value.experimentId,
        'searcherOperations': value.searcherOperations === undefined ? undefined : ((value.searcherOperations as Array<any>).map(V1SearcherOperationToJSON)),
        'triggeredByEvent': V1SearcherEventToJSON(value.triggeredByEvent),
    };
}

