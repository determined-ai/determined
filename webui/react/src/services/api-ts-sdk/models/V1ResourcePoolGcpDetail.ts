/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1ResourcePoolGcpDetail
 */
export interface V1ResourcePoolGcpDetail {
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    project: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    zone: string;
    /**
     * 
     * @type {number}
     * @memberof V1ResourcePoolGcpDetail
     */
    bootDiskSize: number;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    bootDiskSourceImage: string;
    /**
     * Key for labeling the Determined agent instances.
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    labelKey: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    labelValue: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    namePrefix: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    network: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    subnetwork?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V1ResourcePoolGcpDetail
     */
    externalIp: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1ResourcePoolGcpDetail
     */
    networkTags?: Array<string>;
    /**
     * Email of the service account for the Determined agent instances.
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    serviceAccountEmail: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1ResourcePoolGcpDetail
     */
    serviceAccountScopes: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    machineType: string;
    /**
     * 
     * @type {string}
     * @memberof V1ResourcePoolGcpDetail
     */
    gpuType: string;
    /**
     * 
     * @type {number}
     * @memberof V1ResourcePoolGcpDetail
     */
    gpuNum: number;
    /**
     * 
     * @type {boolean}
     * @memberof V1ResourcePoolGcpDetail
     */
    preemptible: boolean;
    /**
     * 
     * @type {number}
     * @memberof V1ResourcePoolGcpDetail
     */
    operationTimeoutPeriod: number;
}

/**
 * Check if a given object implements the V1ResourcePoolGcpDetail interface.
 */
export function instanceOfV1ResourcePoolGcpDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "zone" in value;
    isInstance = isInstance && "bootDiskSize" in value;
    isInstance = isInstance && "bootDiskSourceImage" in value;
    isInstance = isInstance && "labelKey" in value;
    isInstance = isInstance && "labelValue" in value;
    isInstance = isInstance && "namePrefix" in value;
    isInstance = isInstance && "network" in value;
    isInstance = isInstance && "externalIp" in value;
    isInstance = isInstance && "serviceAccountEmail" in value;
    isInstance = isInstance && "serviceAccountScopes" in value;
    isInstance = isInstance && "machineType" in value;
    isInstance = isInstance && "gpuType" in value;
    isInstance = isInstance && "gpuNum" in value;
    isInstance = isInstance && "preemptible" in value;
    isInstance = isInstance && "operationTimeoutPeriod" in value;

    return isInstance;
}

export function V1ResourcePoolGcpDetailFromJSON(json: any): V1ResourcePoolGcpDetail {
    return V1ResourcePoolGcpDetailFromJSONTyped(json, false);
}

export function V1ResourcePoolGcpDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ResourcePoolGcpDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'project': json['project'],
        'zone': json['zone'],
        'bootDiskSize': json['bootDiskSize'],
        'bootDiskSourceImage': json['bootDiskSourceImage'],
        'labelKey': json['labelKey'],
        'labelValue': json['labelValue'],
        'namePrefix': json['namePrefix'],
        'network': json['network'],
        'subnetwork': !exists(json, 'subnetwork') ? undefined : json['subnetwork'],
        'externalIp': json['externalIp'],
        'networkTags': !exists(json, 'networkTags') ? undefined : json['networkTags'],
        'serviceAccountEmail': json['serviceAccountEmail'],
        'serviceAccountScopes': json['serviceAccountScopes'],
        'machineType': json['machineType'],
        'gpuType': json['gpuType'],
        'gpuNum': json['gpuNum'],
        'preemptible': json['preemptible'],
        'operationTimeoutPeriod': json['operationTimeoutPeriod'],
    };
}

export function V1ResourcePoolGcpDetailToJSON(value?: V1ResourcePoolGcpDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'project': value.project,
        'zone': value.zone,
        'bootDiskSize': value.bootDiskSize,
        'bootDiskSourceImage': value.bootDiskSourceImage,
        'labelKey': value.labelKey,
        'labelValue': value.labelValue,
        'namePrefix': value.namePrefix,
        'network': value.network,
        'subnetwork': value.subnetwork,
        'externalIp': value.externalIp,
        'networkTags': value.networkTags,
        'serviceAccountEmail': value.serviceAccountEmail,
        'serviceAccountScopes': value.serviceAccountScopes,
        'machineType': value.machineType,
        'gpuType': value.gpuType,
        'gpuNum': value.gpuNum,
        'preemptible': value.preemptible,
        'operationTimeoutPeriod': value.operationTimeoutPeriod,
    };
}

