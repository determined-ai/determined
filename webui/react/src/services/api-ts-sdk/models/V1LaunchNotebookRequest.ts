/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1File } from './V1File';
import {
    V1FileFromJSON,
    V1FileFromJSONTyped,
    V1FileToJSON,
} from './V1File';

/**
 * Request to launch a notebook.
 * @export
 * @interface V1LaunchNotebookRequest
 */
export interface V1LaunchNotebookRequest {
    /**
     * Notebook config (JSON).
     * @type {object}
     * @memberof V1LaunchNotebookRequest
     */
    config?: object;
    /**
     * Template name.
     * @type {string}
     * @memberof V1LaunchNotebookRequest
     */
    templateName?: string;
    /**
     * The files to run with the command.
     * @type {Array<V1File>}
     * @memberof V1LaunchNotebookRequest
     */
    files?: Array<V1File>;
    /**
     * Preview a launching request without actually creating a Notebook.
     * @type {boolean}
     * @memberof V1LaunchNotebookRequest
     */
    preview?: boolean;
}

/**
 * Check if a given object implements the V1LaunchNotebookRequest interface.
 */
export function instanceOfV1LaunchNotebookRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1LaunchNotebookRequestFromJSON(json: any): V1LaunchNotebookRequest {
    return V1LaunchNotebookRequestFromJSONTyped(json, false);
}

export function V1LaunchNotebookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1LaunchNotebookRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'config': !exists(json, 'config') ? undefined : json['config'],
        'templateName': !exists(json, 'templateName') ? undefined : json['templateName'],
        'files': !exists(json, 'files') ? undefined : ((json['files'] as Array<any>).map(V1FileFromJSON)),
        'preview': !exists(json, 'preview') ? undefined : json['preview'],
    };
}

export function V1LaunchNotebookRequestToJSON(value?: V1LaunchNotebookRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'config': value.config,
        'templateName': value.templateName,
        'files': value.files === undefined ? undefined : ((value.files as Array<any>).map(V1FileToJSON)),
        'preview': value.preview,
    };
}

