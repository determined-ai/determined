/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuntimeStreamError } from './RuntimeStreamError';
import {
    RuntimeStreamErrorFromJSON,
    RuntimeStreamErrorFromJSONTyped,
    RuntimeStreamErrorToJSON,
} from './RuntimeStreamError';
import type { V1GetTrialProfilerAvailableSeriesResponse } from './V1GetTrialProfilerAvailableSeriesResponse';
import {
    V1GetTrialProfilerAvailableSeriesResponseFromJSON,
    V1GetTrialProfilerAvailableSeriesResponseFromJSONTyped,
    V1GetTrialProfilerAvailableSeriesResponseToJSON,
} from './V1GetTrialProfilerAvailableSeriesResponse';

/**
 * 
 * @export
 * @interface StreamResultOfV1GetTrialProfilerAvailableSeriesResponse
 */
export interface StreamResultOfV1GetTrialProfilerAvailableSeriesResponse {
    /**
     * 
     * @type {V1GetTrialProfilerAvailableSeriesResponse}
     * @memberof StreamResultOfV1GetTrialProfilerAvailableSeriesResponse
     */
    result?: V1GetTrialProfilerAvailableSeriesResponse;
    /**
     * 
     * @type {RuntimeStreamError}
     * @memberof StreamResultOfV1GetTrialProfilerAvailableSeriesResponse
     */
    error?: RuntimeStreamError;
}

/**
 * Check if a given object implements the StreamResultOfV1GetTrialProfilerAvailableSeriesResponse interface.
 */
export function instanceOfStreamResultOfV1GetTrialProfilerAvailableSeriesResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StreamResultOfV1GetTrialProfilerAvailableSeriesResponseFromJSON(json: any): StreamResultOfV1GetTrialProfilerAvailableSeriesResponse {
    return StreamResultOfV1GetTrialProfilerAvailableSeriesResponseFromJSONTyped(json, false);
}

export function StreamResultOfV1GetTrialProfilerAvailableSeriesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamResultOfV1GetTrialProfilerAvailableSeriesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': !exists(json, 'result') ? undefined : V1GetTrialProfilerAvailableSeriesResponseFromJSON(json['result']),
        'error': !exists(json, 'error') ? undefined : RuntimeStreamErrorFromJSON(json['error']),
    };
}

export function StreamResultOfV1GetTrialProfilerAvailableSeriesResponseToJSON(value?: StreamResultOfV1GetTrialProfilerAvailableSeriesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': V1GetTrialProfilerAvailableSeriesResponseToJSON(value.result),
        'error': RuntimeStreamErrorToJSON(value.error),
    };
}

