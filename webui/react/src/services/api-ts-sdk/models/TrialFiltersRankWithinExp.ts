/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1TrialSorter } from './V1TrialSorter';
import {
    V1TrialSorterFromJSON,
    V1TrialSorterFromJSONTyped,
    V1TrialSorterToJSON,
} from './V1TrialSorter';

/**
 * Specifies a ranking for trials within their experiment.
 * @export
 * @interface TrialFiltersRankWithinExp
 */
export interface TrialFiltersRankWithinExp {
    /**
     * 
     * @type {V1TrialSorter}
     * @memberof TrialFiltersRankWithinExp
     */
    sorter?: V1TrialSorter;
    /**
     * 
     * @type {number}
     * @memberof TrialFiltersRankWithinExp
     */
    rank?: number;
}

/**
 * Check if a given object implements the TrialFiltersRankWithinExp interface.
 */
export function instanceOfTrialFiltersRankWithinExp(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrialFiltersRankWithinExpFromJSON(json: any): TrialFiltersRankWithinExp {
    return TrialFiltersRankWithinExpFromJSONTyped(json, false);
}

export function TrialFiltersRankWithinExpFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrialFiltersRankWithinExp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sorter': !exists(json, 'sorter') ? undefined : V1TrialSorterFromJSON(json['sorter']),
        'rank': !exists(json, 'rank') ? undefined : json['rank'],
    };
}

export function TrialFiltersRankWithinExpToJSON(value?: TrialFiltersRankWithinExp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sorter': V1TrialSorterToJSON(value.sorter),
        'rank': value.rank,
    };
}

