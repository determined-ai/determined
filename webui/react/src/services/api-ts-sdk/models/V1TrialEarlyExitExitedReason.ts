/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * The reason for an early exit.
 * 
 *  - EXITED_REASON_UNSPECIFIED: Zero-value (not allowed).
 *  - EXITED_REASON_INVALID_HP: Indicates the trial exited due to an invalid hyperparameter.
 *  - EXITED_REASON_INIT_INVALID_HP: Indicates the trial exited due to an invalid hyperparameter
 * in the trial init.
 * @export
 */
export const V1TrialEarlyExitExitedReason = {
    UNSPECIFIED: 'EXITED_REASON_UNSPECIFIED',
    INVALID_HP: 'EXITED_REASON_INVALID_HP',
    INIT_INVALID_HP: 'EXITED_REASON_INIT_INVALID_HP'
} as const;
export type V1TrialEarlyExitExitedReason = typeof V1TrialEarlyExitExitedReason[keyof typeof V1TrialEarlyExitExitedReason];


export function V1TrialEarlyExitExitedReasonFromJSON(json: any): V1TrialEarlyExitExitedReason {
    return V1TrialEarlyExitExitedReasonFromJSONTyped(json, false);
}

export function V1TrialEarlyExitExitedReasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TrialEarlyExitExitedReason {
    return json as V1TrialEarlyExitExitedReason;
}

export function V1TrialEarlyExitExitedReasonToJSON(value?: V1TrialEarlyExitExitedReason | null): any {
    return value as any;
}

