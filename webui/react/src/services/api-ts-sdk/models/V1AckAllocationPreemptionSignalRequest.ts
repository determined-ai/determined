/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Acknowledge the receipt of some stop signal.
 * @export
 * @interface V1AckAllocationPreemptionSignalRequest
 */
export interface V1AckAllocationPreemptionSignalRequest {
    /**
     * The allocation that is acknowledging the request.
     * @type {string}
     * @memberof V1AckAllocationPreemptionSignalRequest
     */
    allocationId: string;
}

/**
 * Check if a given object implements the V1AckAllocationPreemptionSignalRequest interface.
 */
export function instanceOfV1AckAllocationPreemptionSignalRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "allocationId" in value;

    return isInstance;
}

export function V1AckAllocationPreemptionSignalRequestFromJSON(json: any): V1AckAllocationPreemptionSignalRequest {
    return V1AckAllocationPreemptionSignalRequestFromJSONTyped(json, false);
}

export function V1AckAllocationPreemptionSignalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AckAllocationPreemptionSignalRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allocationId': json['allocationId'],
    };
}

export function V1AckAllocationPreemptionSignalRequestToJSON(value?: V1AckAllocationPreemptionSignalRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allocationId': value.allocationId,
    };
}

