/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1RoleAssignment } from './V1RoleAssignment';
import {
    V1RoleAssignmentFromJSON,
    V1RoleAssignmentFromJSONTyped,
    V1RoleAssignmentToJSON,
} from './V1RoleAssignment';

/**
 * GroupRoleAssignment contains information about the groups
 * belonging to a role.
 * @export
 * @interface V1GroupRoleAssignment
 */
export interface V1GroupRoleAssignment {
    /**
     * 
     * @type {number}
     * @memberof V1GroupRoleAssignment
     */
    groupId: number;
    /**
     * 
     * @type {V1RoleAssignment}
     * @memberof V1GroupRoleAssignment
     */
    roleAssignment: V1RoleAssignment;
}

/**
 * Check if a given object implements the V1GroupRoleAssignment interface.
 */
export function instanceOfV1GroupRoleAssignment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "groupId" in value;
    isInstance = isInstance && "roleAssignment" in value;

    return isInstance;
}

export function V1GroupRoleAssignmentFromJSON(json: any): V1GroupRoleAssignment {
    return V1GroupRoleAssignmentFromJSONTyped(json, false);
}

export function V1GroupRoleAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GroupRoleAssignment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groupId': json['groupId'],
        'roleAssignment': V1RoleAssignmentFromJSON(json['roleAssignment']),
    };
}

export function V1GroupRoleAssignmentToJSON(value?: V1GroupRoleAssignment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groupId': value.groupId,
        'roleAssignment': V1RoleAssignmentToJSON(value.roleAssignment),
    };
}

