/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1GroupRoleAssignment } from './V1GroupRoleAssignment';
import {
    V1GroupRoleAssignmentFromJSON,
    V1GroupRoleAssignmentFromJSONTyped,
    V1GroupRoleAssignmentToJSON,
} from './V1GroupRoleAssignment';
import type { V1UserRoleAssignment } from './V1UserRoleAssignment';
import {
    V1UserRoleAssignmentFromJSON,
    V1UserRoleAssignmentFromJSONTyped,
    V1UserRoleAssignmentToJSON,
} from './V1UserRoleAssignment';

/**
 * AssignRolesRequest is the body of the request for the call to
 * grant a user or group a role. It requires group_id, role_id,
 * and either scope_workspace_id or scope_project_id.
 * @export
 * @interface V1AssignRolesRequest
 */
export interface V1AssignRolesRequest {
    /**
     * the set of groups being assigned to a role.
     * @type {Array<V1GroupRoleAssignment>}
     * @memberof V1AssignRolesRequest
     */
    groupRoleAssignments?: Array<V1GroupRoleAssignment>;
    /**
     * the set of users being assigned to a role.
     * @type {Array<V1UserRoleAssignment>}
     * @memberof V1AssignRolesRequest
     */
    userRoleAssignments?: Array<V1UserRoleAssignment>;
}

/**
 * Check if a given object implements the V1AssignRolesRequest interface.
 */
export function instanceOfV1AssignRolesRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1AssignRolesRequestFromJSON(json: any): V1AssignRolesRequest {
    return V1AssignRolesRequestFromJSONTyped(json, false);
}

export function V1AssignRolesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AssignRolesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groupRoleAssignments': !exists(json, 'groupRoleAssignments') ? undefined : ((json['groupRoleAssignments'] as Array<any>).map(V1GroupRoleAssignmentFromJSON)),
        'userRoleAssignments': !exists(json, 'userRoleAssignments') ? undefined : ((json['userRoleAssignments'] as Array<any>).map(V1UserRoleAssignmentFromJSON)),
    };
}

export function V1AssignRolesRequestToJSON(value?: V1AssignRolesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groupRoleAssignments': value.groupRoleAssignments === undefined ? undefined : ((value.groupRoleAssignments as Array<any>).map(V1GroupRoleAssignmentToJSON)),
        'userRoleAssignments': value.userRoleAssignments === undefined ? undefined : ((value.userRoleAssignments as Array<any>).map(V1UserRoleAssignmentToJSON)),
    };
}

