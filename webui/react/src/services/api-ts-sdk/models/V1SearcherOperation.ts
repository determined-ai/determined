/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1CloseTrialOperation } from './V1CloseTrialOperation';
import {
    V1CloseTrialOperationFromJSON,
    V1CloseTrialOperationFromJSONTyped,
    V1CloseTrialOperationToJSON,
} from './V1CloseTrialOperation';
import type { V1CreateTrialOperation } from './V1CreateTrialOperation';
import {
    V1CreateTrialOperationFromJSON,
    V1CreateTrialOperationFromJSONTyped,
    V1CreateTrialOperationToJSON,
} from './V1CreateTrialOperation';
import type { V1SetSearcherProgressOperation } from './V1SetSearcherProgressOperation';
import {
    V1SetSearcherProgressOperationFromJSON,
    V1SetSearcherProgressOperationFromJSONTyped,
    V1SetSearcherProgressOperationToJSON,
} from './V1SetSearcherProgressOperation';
import type { V1ShutDownOperation } from './V1ShutDownOperation';
import {
    V1ShutDownOperationFromJSON,
    V1ShutDownOperationFromJSONTyped,
    V1ShutDownOperationToJSON,
} from './V1ShutDownOperation';
import type { V1TrialOperation } from './V1TrialOperation';
import {
    V1TrialOperationFromJSON,
    V1TrialOperationFromJSONTyped,
    V1TrialOperationToJSON,
} from './V1TrialOperation';

/**
 * SearcherOperation is an operation issued by the custom searcher.
 * @export
 * @interface V1SearcherOperation
 */
export interface V1SearcherOperation {
    /**
     * 
     * @type {V1TrialOperation}
     * @memberof V1SearcherOperation
     */
    trialOperation?: V1TrialOperation;
    /**
     * 
     * @type {V1CreateTrialOperation}
     * @memberof V1SearcherOperation
     */
    createTrial?: V1CreateTrialOperation;
    /**
     * 
     * @type {V1CloseTrialOperation}
     * @memberof V1SearcherOperation
     */
    closeTrial?: V1CloseTrialOperation;
    /**
     * 
     * @type {V1ShutDownOperation}
     * @memberof V1SearcherOperation
     */
    shutDown?: V1ShutDownOperation;
    /**
     * 
     * @type {V1SetSearcherProgressOperation}
     * @memberof V1SearcherOperation
     */
    setSearcherProgress?: V1SetSearcherProgressOperation;
}

/**
 * Check if a given object implements the V1SearcherOperation interface.
 */
export function instanceOfV1SearcherOperation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1SearcherOperationFromJSON(json: any): V1SearcherOperation {
    return V1SearcherOperationFromJSONTyped(json, false);
}

export function V1SearcherOperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SearcherOperation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'trialOperation': !exists(json, 'trialOperation') ? undefined : V1TrialOperationFromJSON(json['trialOperation']),
        'createTrial': !exists(json, 'createTrial') ? undefined : V1CreateTrialOperationFromJSON(json['createTrial']),
        'closeTrial': !exists(json, 'closeTrial') ? undefined : V1CloseTrialOperationFromJSON(json['closeTrial']),
        'shutDown': !exists(json, 'shutDown') ? undefined : V1ShutDownOperationFromJSON(json['shutDown']),
        'setSearcherProgress': !exists(json, 'setSearcherProgress') ? undefined : V1SetSearcherProgressOperationFromJSON(json['setSearcherProgress']),
    };
}

export function V1SearcherOperationToJSON(value?: V1SearcherOperation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'trialOperation': V1TrialOperationToJSON(value.trialOperation),
        'createTrial': V1CreateTrialOperationToJSON(value.createTrial),
        'closeTrial': V1CloseTrialOperationToJSON(value.closeTrial),
        'shutDown': V1ShutDownOperationToJSON(value.shutDown),
        'setSearcherProgress': V1SetSearcherProgressOperationToJSON(value.setSearcherProgress),
    };
}

