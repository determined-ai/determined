/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Pagination } from './V1Pagination';
import {
    V1PaginationFromJSON,
    V1PaginationFromJSONTyped,
    V1PaginationToJSON,
} from './V1Pagination';
import type { V1Project } from './V1Project';
import {
    V1ProjectFromJSON,
    V1ProjectFromJSONTyped,
    V1ProjectToJSON,
} from './V1Project';

/**
 * Response to GetWorkspaceProjectsRequest.
 * @export
 * @interface V1GetWorkspaceProjectsResponse
 */
export interface V1GetWorkspaceProjectsResponse {
    /**
     * The projects associated with the workspace.
     * @type {Array<V1Project>}
     * @memberof V1GetWorkspaceProjectsResponse
     */
    projects: Array<V1Project>;
    /**
     * 
     * @type {V1Pagination}
     * @memberof V1GetWorkspaceProjectsResponse
     */
    pagination: V1Pagination;
}

/**
 * Check if a given object implements the V1GetWorkspaceProjectsResponse interface.
 */
export function instanceOfV1GetWorkspaceProjectsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projects" in value;
    isInstance = isInstance && "pagination" in value;

    return isInstance;
}

export function V1GetWorkspaceProjectsResponseFromJSON(json: any): V1GetWorkspaceProjectsResponse {
    return V1GetWorkspaceProjectsResponseFromJSONTyped(json, false);
}

export function V1GetWorkspaceProjectsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetWorkspaceProjectsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projects': ((json['projects'] as Array<any>).map(V1ProjectFromJSON)),
        'pagination': V1PaginationFromJSON(json['pagination']),
    };
}

export function V1GetWorkspaceProjectsResponseToJSON(value?: V1GetWorkspaceProjectsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projects': ((value.projects as Array<any>).map(V1ProjectToJSON)),
        'pagination': V1PaginationToJSON(value.pagination),
    };
}

