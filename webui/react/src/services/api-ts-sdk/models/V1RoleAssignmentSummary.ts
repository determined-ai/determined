/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * RoleAssignmentSummary is used to describe permissions a user has.
 * @export
 * @interface V1RoleAssignmentSummary
 */
export interface V1RoleAssignmentSummary {
    /**
     * 
     * @type {number}
     * @memberof V1RoleAssignmentSummary
     */
    roleId: number;
    /**
     * List of workspace IDs to apply the role.
     * @type {Array<number>}
     * @memberof V1RoleAssignmentSummary
     */
    scopeWorkspaceIds?: Array<number>;
    /**
     * Whether the role is assigned cluster-wide.
     * @type {boolean}
     * @memberof V1RoleAssignmentSummary
     */
    scopeCluster?: boolean;
}

/**
 * Check if a given object implements the V1RoleAssignmentSummary interface.
 */
export function instanceOfV1RoleAssignmentSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "roleId" in value;

    return isInstance;
}

export function V1RoleAssignmentSummaryFromJSON(json: any): V1RoleAssignmentSummary {
    return V1RoleAssignmentSummaryFromJSONTyped(json, false);
}

export function V1RoleAssignmentSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RoleAssignmentSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roleId': json['roleId'],
        'scopeWorkspaceIds': !exists(json, 'scopeWorkspaceIds') ? undefined : json['scopeWorkspaceIds'],
        'scopeCluster': !exists(json, 'scopeCluster') ? undefined : json['scopeCluster'],
    };
}

export function V1RoleAssignmentSummaryToJSON(value?: V1RoleAssignmentSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roleId': value.roleId,
        'scopeWorkspaceIds': value.scopeWorkspaceIds,
        'scopeCluster': value.scopeCluster,
    };
}

