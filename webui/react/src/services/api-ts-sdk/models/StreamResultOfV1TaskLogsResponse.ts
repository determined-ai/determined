/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuntimeStreamError } from './RuntimeStreamError';
import {
    RuntimeStreamErrorFromJSON,
    RuntimeStreamErrorFromJSONTyped,
    RuntimeStreamErrorToJSON,
} from './RuntimeStreamError';
import type { V1TaskLogsResponse } from './V1TaskLogsResponse';
import {
    V1TaskLogsResponseFromJSON,
    V1TaskLogsResponseFromJSONTyped,
    V1TaskLogsResponseToJSON,
} from './V1TaskLogsResponse';

/**
 * 
 * @export
 * @interface StreamResultOfV1TaskLogsResponse
 */
export interface StreamResultOfV1TaskLogsResponse {
    /**
     * 
     * @type {V1TaskLogsResponse}
     * @memberof StreamResultOfV1TaskLogsResponse
     */
    result?: V1TaskLogsResponse;
    /**
     * 
     * @type {RuntimeStreamError}
     * @memberof StreamResultOfV1TaskLogsResponse
     */
    error?: RuntimeStreamError;
}

/**
 * Check if a given object implements the StreamResultOfV1TaskLogsResponse interface.
 */
export function instanceOfStreamResultOfV1TaskLogsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StreamResultOfV1TaskLogsResponseFromJSON(json: any): StreamResultOfV1TaskLogsResponse {
    return StreamResultOfV1TaskLogsResponseFromJSONTyped(json, false);
}

export function StreamResultOfV1TaskLogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamResultOfV1TaskLogsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': !exists(json, 'result') ? undefined : V1TaskLogsResponseFromJSON(json['result']),
        'error': !exists(json, 'error') ? undefined : RuntimeStreamErrorFromJSON(json['error']),
    };
}

export function StreamResultOfV1TaskLogsResponseToJSON(value?: StreamResultOfV1TaskLogsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': V1TaskLogsResponseToJSON(value.result),
        'error': RuntimeStreamErrorToJSON(value.error),
    };
}

