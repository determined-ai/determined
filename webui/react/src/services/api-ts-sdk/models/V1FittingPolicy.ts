/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The fitting policy of the scheduler.
 * 
 *  - FITTING_POLICY_UNSPECIFIED: Unspecified. This value will never actually be returned by the API, it is
 * just an artifact of using protobuf.
 *  - FITTING_POLICY_BEST: Best fit. Tasks are preferentially “packed” together on the smallest number
 * of agents
 *  - FITTING_POLICY_WORST: Worst fit. Tasks are placed on under-utilized agents, spreading out the
 * tasks.
 *  - FITTING_POLICY_KUBERNETES: A kubernetes placeholder. In k8s, the task placement is delegated to the
 * k8s scheduler so the fitting policy is not relevant.
 *  - FITTING_POLICY_SLURM: A slurm placeholder. When running on slurm, task placement is delegated.
 *  - FITTING_POLICY_PBS: A PBS placeholder. When running on PBS, task placement is delegated.
 * @export
 * @enum {string}
 */
export enum V1FittingPolicy {
    Unspecified = 'FITTING_POLICY_UNSPECIFIED',
    Best = 'FITTING_POLICY_BEST',
    Worst = 'FITTING_POLICY_WORST',
    Kubernetes = 'FITTING_POLICY_KUBERNETES',
    Slurm = 'FITTING_POLICY_SLURM',
    Pbs = 'FITTING_POLICY_PBS'
}


export function V1FittingPolicyFromJSON(json: any): V1FittingPolicy {
    return V1FittingPolicyFromJSONTyped(json, false);
}

export function V1FittingPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1FittingPolicy {
    return json as V1FittingPolicy;
}

export function V1FittingPolicyToJSON(value?: V1FittingPolicy | null): any {
    return value as any;
}

