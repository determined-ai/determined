/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1File } from './V1File';
import {
    V1FileFromJSON,
    V1FileFromJSONTyped,
    V1FileToJSON,
} from './V1File';

/**
 * Request to launch a tensorboard.
 * @export
 * @interface V1LaunchTensorboardRequest
 */
export interface V1LaunchTensorboardRequest {
    /**
     * List of source experiment ids.
     * @type {Array<number>}
     * @memberof V1LaunchTensorboardRequest
     */
    experimentIds?: Array<number>;
    /**
     * List of source trial ids.
     * @type {Array<number>}
     * @memberof V1LaunchTensorboardRequest
     */
    trialIds?: Array<number>;
    /**
     * Tensorboard config (JSON).
     * @type {object}
     * @memberof V1LaunchTensorboardRequest
     */
    config?: object;
    /**
     * Tensorboard template name.
     * @type {string}
     * @memberof V1LaunchTensorboardRequest
     */
    templateName?: string;
    /**
     * The files to run with the command.
     * @type {Array<V1File>}
     * @memberof V1LaunchTensorboardRequest
     */
    files?: Array<V1File>;
}

/**
 * Check if a given object implements the V1LaunchTensorboardRequest interface.
 */
export function instanceOfV1LaunchTensorboardRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1LaunchTensorboardRequestFromJSON(json: any): V1LaunchTensorboardRequest {
    return V1LaunchTensorboardRequestFromJSONTyped(json, false);
}

export function V1LaunchTensorboardRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1LaunchTensorboardRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'experimentIds': !exists(json, 'experimentIds') ? undefined : json['experimentIds'],
        'trialIds': !exists(json, 'trialIds') ? undefined : json['trialIds'],
        'config': !exists(json, 'config') ? undefined : json['config'],
        'templateName': !exists(json, 'templateName') ? undefined : json['templateName'],
        'files': !exists(json, 'files') ? undefined : ((json['files'] as Array<any>).map(V1FileFromJSON)),
    };
}

export function V1LaunchTensorboardRequestToJSON(value?: V1LaunchTensorboardRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'experimentIds': value.experimentIds,
        'trialIds': value.trialIds,
        'config': value.config,
        'templateName': value.templateName,
        'files': value.files === undefined ? undefined : ((value.files as Array<any>).map(V1FileToJSON)),
    };
}

