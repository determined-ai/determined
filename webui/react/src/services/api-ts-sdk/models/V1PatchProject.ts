/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * PatchProject is a partial update to a project with all optional fields.
 * @export
 * @interface V1PatchProject
 */
export interface V1PatchProject {
    /**
     * The new name for the project.
     * @type {string}
     * @memberof V1PatchProject
     */
    name?: string;
    /**
     * The new description for the project.
     * @type {string}
     * @memberof V1PatchProject
     */
    description?: string;
}

/**
 * Check if a given object implements the V1PatchProject interface.
 */
export function instanceOfV1PatchProject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1PatchProjectFromJSON(json: any): V1PatchProject {
    return V1PatchProjectFromJSONTyped(json, false);
}

export function V1PatchProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PatchProject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function V1PatchProjectToJSON(value?: V1PatchProject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
    };
}

