/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Checkpoint } from './V1Checkpoint';
import {
    V1CheckpointFromJSON,
    V1CheckpointFromJSONTyped,
    V1CheckpointToJSON,
} from './V1Checkpoint';
import type { V1Pagination } from './V1Pagination';
import {
    V1PaginationFromJSON,
    V1PaginationFromJSONTyped,
    V1PaginationToJSON,
} from './V1Pagination';

/**
 * Response to GetExperimentCheckpointsRequest.
 * @export
 * @interface V1GetExperimentCheckpointsResponse
 */
export interface V1GetExperimentCheckpointsResponse {
    /**
     * The list of returned checkpoints.
     * @type {Array<V1Checkpoint>}
     * @memberof V1GetExperimentCheckpointsResponse
     */
    checkpoints: Array<V1Checkpoint>;
    /**
     * 
     * @type {V1Pagination}
     * @memberof V1GetExperimentCheckpointsResponse
     */
    pagination: V1Pagination;
}

/**
 * Check if a given object implements the V1GetExperimentCheckpointsResponse interface.
 */
export function instanceOfV1GetExperimentCheckpointsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "checkpoints" in value;
    isInstance = isInstance && "pagination" in value;

    return isInstance;
}

export function V1GetExperimentCheckpointsResponseFromJSON(json: any): V1GetExperimentCheckpointsResponse {
    return V1GetExperimentCheckpointsResponseFromJSONTyped(json, false);
}

export function V1GetExperimentCheckpointsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetExperimentCheckpointsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checkpoints': ((json['checkpoints'] as Array<any>).map(V1CheckpointFromJSON)),
        'pagination': V1PaginationFromJSON(json['pagination']),
    };
}

export function V1GetExperimentCheckpointsResponseToJSON(value?: V1GetExperimentCheckpointsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checkpoints': ((value.checkpoints as Array<any>).map(V1CheckpointToJSON)),
        'pagination': V1PaginationToJSON(value.pagination),
    };
}

