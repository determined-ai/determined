/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1UserWebSetting } from './V1UserWebSetting';
import {
    V1UserWebSettingFromJSON,
    V1UserWebSettingFromJSONTyped,
    V1UserWebSettingToJSON,
} from './V1UserWebSetting';

/**
 * Response to GetUserSettingRequest.
 * @export
 * @interface V1GetUserSettingResponse
 */
export interface V1GetUserSettingResponse {
    /**
     * List of user settings.
     * @type {Array<V1UserWebSetting>}
     * @memberof V1GetUserSettingResponse
     */
    settings: Array<V1UserWebSetting>;
}

/**
 * Check if a given object implements the V1GetUserSettingResponse interface.
 */
export function instanceOfV1GetUserSettingResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "settings" in value;

    return isInstance;
}

export function V1GetUserSettingResponseFromJSON(json: any): V1GetUserSettingResponse {
    return V1GetUserSettingResponseFromJSONTyped(json, false);
}

export function V1GetUserSettingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetUserSettingResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'settings': ((json['settings'] as Array<any>).map(V1UserWebSettingFromJSON)),
    };
}

export function V1GetUserSettingResponseToJSON(value?: V1GetUserSettingResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'settings': ((value.settings as Array<any>).map(V1UserWebSettingToJSON)),
    };
}

