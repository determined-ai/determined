/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Double filters.
 * @export
 * @interface V1DoubleFieldFilter
 */
export interface V1DoubleFieldFilter {
    /**
     * Less than.
     * @type {number}
     * @memberof V1DoubleFieldFilter
     */
    lt?: number;
    /**
     * Less than or equal.
     * @type {number}
     * @memberof V1DoubleFieldFilter
     */
    lte?: number;
    /**
     * Greater than.
     * @type {number}
     * @memberof V1DoubleFieldFilter
     */
    gt?: number;
    /**
     * Greater than or equal.
     * @type {number}
     * @memberof V1DoubleFieldFilter
     */
    gte?: number;
}

/**
 * Check if a given object implements the V1DoubleFieldFilter interface.
 */
export function instanceOfV1DoubleFieldFilter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1DoubleFieldFilterFromJSON(json: any): V1DoubleFieldFilter {
    return V1DoubleFieldFilterFromJSONTyped(json, false);
}

export function V1DoubleFieldFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1DoubleFieldFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lt': !exists(json, 'lt') ? undefined : json['lt'],
        'lte': !exists(json, 'lte') ? undefined : json['lte'],
        'gt': !exists(json, 'gt') ? undefined : json['gt'],
        'gte': !exists(json, 'gte') ? undefined : json['gte'],
    };
}

export function V1DoubleFieldFilterToJSON(value?: V1DoubleFieldFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lt': value.lt,
        'lte': value.lte,
        'gt': value.gt,
        'gte': value.gte,
    };
}

