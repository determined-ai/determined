/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1K8PriorityClass } from './V1K8PriorityClass';
import {
    V1K8PriorityClassFromJSON,
    V1K8PriorityClassFromJSONTyped,
    V1K8PriorityClassToJSON,
} from './V1K8PriorityClass';

/**
 * 
 * @export
 * @interface V1ResourcePoolPrioritySchedulerDetail
 */
export interface V1ResourcePoolPrioritySchedulerDetail {
    /**
     * 
     * @type {boolean}
     * @memberof V1ResourcePoolPrioritySchedulerDetail
     */
    preemption: boolean;
    /**
     * The priority that is assigned to tasks that do not explicitly specify a
     * priority.
     * @type {number}
     * @memberof V1ResourcePoolPrioritySchedulerDetail
     */
    defaultPriority: number;
    /**
     * List of available priorities for K8 (if applicable).
     * @type {Array<V1K8PriorityClass>}
     * @memberof V1ResourcePoolPrioritySchedulerDetail
     */
    k8Priorities?: Array<V1K8PriorityClass>;
}

/**
 * Check if a given object implements the V1ResourcePoolPrioritySchedulerDetail interface.
 */
export function instanceOfV1ResourcePoolPrioritySchedulerDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "preemption" in value;
    isInstance = isInstance && "defaultPriority" in value;

    return isInstance;
}

export function V1ResourcePoolPrioritySchedulerDetailFromJSON(json: any): V1ResourcePoolPrioritySchedulerDetail {
    return V1ResourcePoolPrioritySchedulerDetailFromJSONTyped(json, false);
}

export function V1ResourcePoolPrioritySchedulerDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ResourcePoolPrioritySchedulerDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'preemption': json['preemption'],
        'defaultPriority': json['defaultPriority'],
        'k8Priorities': !exists(json, 'k8Priorities') ? undefined : ((json['k8Priorities'] as Array<any>).map(V1K8PriorityClassFromJSON)),
    };
}

export function V1ResourcePoolPrioritySchedulerDetailToJSON(value?: V1ResourcePoolPrioritySchedulerDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'preemption': value.preemption,
        'defaultPriority': value.defaultPriority,
        'k8Priorities': value.k8Priorities === undefined ? undefined : ((value.k8Priorities as Array<any>).map(V1K8PriorityClassToJSON)),
    };
}

