/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Command } from './V1Command';
import {
    V1CommandFromJSON,
    V1CommandFromJSONTyped,
    V1CommandToJSON,
} from './V1Command';

/**
 * Response to SetCommandPriorityRequest.
 * @export
 * @interface V1SetCommandPriorityResponse
 */
export interface V1SetCommandPriorityResponse {
    /**
     * 
     * @type {V1Command}
     * @memberof V1SetCommandPriorityResponse
     */
    command?: V1Command;
}

/**
 * Check if a given object implements the V1SetCommandPriorityResponse interface.
 */
export function instanceOfV1SetCommandPriorityResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1SetCommandPriorityResponseFromJSON(json: any): V1SetCommandPriorityResponse {
    return V1SetCommandPriorityResponseFromJSONTyped(json, false);
}

export function V1SetCommandPriorityResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SetCommandPriorityResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'command': !exists(json, 'command') ? undefined : V1CommandFromJSON(json['command']),
    };
}

export function V1SetCommandPriorityResponseToJSON(value?: V1SetCommandPriorityResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'command': V1CommandToJSON(value.command),
    };
}

