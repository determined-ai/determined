/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * The type of the Scheduler.
 * 
 *  - SCHEDULER_TYPE_UNSPECIFIED: Unspecified. This value will never actually be returned by the API, it is
 * just an artifact of using protobuf.
 *  - SCHEDULER_TYPE_PRIORITY: The priority scheduler.
 *  - SCHEDULER_TYPE_FAIR_SHARE: The fair share scheduler.
 *  - SCHEDULER_TYPE_ROUND_ROBIN: The round robin scheduler
 *  - SCHEDULER_TYPE_KUBERNETES: The kubernetes scheduler.
 *  - SCHEDULER_TYPE_SLURM: A slurm placeholder. When running on slurm, all scheduling behavior is
 * delegated.
 *  - SCHEDULER_TYPE_PBS: A PBS placeholder. When running on PBS, all scheduling behavior is
 * delegated.
 * @export
 */
export const V1SchedulerType = {
    UNSPECIFIED: 'SCHEDULER_TYPE_UNSPECIFIED',
    PRIORITY: 'SCHEDULER_TYPE_PRIORITY',
    FAIR_SHARE: 'SCHEDULER_TYPE_FAIR_SHARE',
    ROUND_ROBIN: 'SCHEDULER_TYPE_ROUND_ROBIN',
    KUBERNETES: 'SCHEDULER_TYPE_KUBERNETES',
    SLURM: 'SCHEDULER_TYPE_SLURM',
    PBS: 'SCHEDULER_TYPE_PBS'
} as const;
export type V1SchedulerType = typeof V1SchedulerType[keyof typeof V1SchedulerType];


export function V1SchedulerTypeFromJSON(json: any): V1SchedulerType {
    return V1SchedulerTypeFromJSONTyped(json, false);
}

export function V1SchedulerTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SchedulerType {
    return json as V1SchedulerType;
}

export function V1SchedulerTypeToJSON(value?: V1SchedulerType | null): any {
    return value as any;
}

