/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1ValidationHistoryEntry } from './V1ValidationHistoryEntry';
import {
    V1ValidationHistoryEntryFromJSON,
    V1ValidationHistoryEntryFromJSONTyped,
    V1ValidationHistoryEntryToJSON,
} from './V1ValidationHistoryEntry';

/**
 * Response to GetExperimentValidationHistoryRequest.
 * @export
 * @interface V1GetExperimentValidationHistoryResponse
 */
export interface V1GetExperimentValidationHistoryResponse {
    /**
     * validation_history is a collection of zero or more validation metrics for
     * an experiment, describing the best metrics as they were reported through
     * the lifetime of an experiment. The historical list of best validations.
     * @type {Array<V1ValidationHistoryEntry>}
     * @memberof V1GetExperimentValidationHistoryResponse
     */
    validationHistory?: Array<V1ValidationHistoryEntry>;
}

/**
 * Check if a given object implements the V1GetExperimentValidationHistoryResponse interface.
 */
export function instanceOfV1GetExperimentValidationHistoryResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1GetExperimentValidationHistoryResponseFromJSON(json: any): V1GetExperimentValidationHistoryResponse {
    return V1GetExperimentValidationHistoryResponseFromJSONTyped(json, false);
}

export function V1GetExperimentValidationHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetExperimentValidationHistoryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'validationHistory': !exists(json, 'validationHistory') ? undefined : ((json['validationHistory'] as Array<any>).map(V1ValidationHistoryEntryFromJSON)),
    };
}

export function V1GetExperimentValidationHistoryResponseToJSON(value?: V1GetExperimentValidationHistoryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'validationHistory': value.validationHistory === undefined ? undefined : ((value.validationHistory as Array<any>).map(V1ValidationHistoryEntryToJSON)),
    };
}

