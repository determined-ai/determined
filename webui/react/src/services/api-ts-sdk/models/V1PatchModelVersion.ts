/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Checkpoint } from './V1Checkpoint';
import {
    V1CheckpointFromJSON,
    V1CheckpointFromJSONTyped,
    V1CheckpointToJSON,
} from './V1Checkpoint';

/**
 * 
 * @export
 * @interface V1PatchModelVersion
 */
export interface V1PatchModelVersion {
    /**
     * 
     * @type {V1Checkpoint}
     * @memberof V1PatchModelVersion
     */
    checkpoint?: V1Checkpoint;
    /**
     * An updated name for the model version.
     * @type {string}
     * @memberof V1PatchModelVersion
     */
    name?: string;
    /**
     * An updated metadata object for the model version.
     * @type {object}
     * @memberof V1PatchModelVersion
     */
    metadata?: object;
    /**
     * An updated comment for the model version.
     * @type {string}
     * @memberof V1PatchModelVersion
     */
    comment?: string;
    /**
     * An updated label list for the model version.
     * @type {Array<string>}
     * @memberof V1PatchModelVersion
     */
    labels?: Array<string>;
    /**
     * Updated text notes for the model version.
     * @type {string}
     * @memberof V1PatchModelVersion
     */
    notes?: string;
}

/**
 * Check if a given object implements the V1PatchModelVersion interface.
 */
export function instanceOfV1PatchModelVersion(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1PatchModelVersionFromJSON(json: any): V1PatchModelVersion {
    return V1PatchModelVersionFromJSONTyped(json, false);
}

export function V1PatchModelVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PatchModelVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checkpoint': !exists(json, 'checkpoint') ? undefined : V1CheckpointFromJSON(json['checkpoint']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
    };
}

export function V1PatchModelVersionToJSON(value?: V1PatchModelVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checkpoint': V1CheckpointToJSON(value.checkpoint),
        'name': value.name,
        'metadata': value.metadata,
        'comment': value.comment,
        'labels': value.labels,
        'notes': value.notes,
    };
}

