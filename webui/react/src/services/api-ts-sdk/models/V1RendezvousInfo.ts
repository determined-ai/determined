/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The rendezvous info for the trial to rendezvous with sibling containers.
 * @export
 * @interface V1RendezvousInfo
 */
export interface V1RendezvousInfo {
    /**
     * The rendezvous addresses of the other containers.
     * @type {Array<string>}
     * @memberof V1RendezvousInfo
     */
    addresses: Array<string>;
    /**
     * The container rank.
     * @type {number}
     * @memberof V1RendezvousInfo
     */
    rank: number;
}

/**
 * Check if a given object implements the V1RendezvousInfo interface.
 */
export function instanceOfV1RendezvousInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "addresses" in value;
    isInstance = isInstance && "rank" in value;

    return isInstance;
}

export function V1RendezvousInfoFromJSON(json: any): V1RendezvousInfo {
    return V1RendezvousInfoFromJSONTyped(json, false);
}

export function V1RendezvousInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RendezvousInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addresses': json['addresses'],
        'rank': json['rank'],
    };
}

export function V1RendezvousInfoToJSON(value?: V1RendezvousInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addresses': value.addresses,
        'rank': value.rank,
    };
}

