/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Set the proxy address for some allocation.
 * @export
 * @interface V1PostAllocationProxyAddressRequest
 */
export interface V1PostAllocationProxyAddressRequest {
    /**
     * The id of the allocation.
     * @type {string}
     * @memberof V1PostAllocationProxyAddressRequest
     */
    allocationId?: string;
    /**
     * The address of the host where the service is, w.r.t. the master.
     * @type {string}
     * @memberof V1PostAllocationProxyAddressRequest
     */
    proxyAddress?: string;
}

/**
 * Check if a given object implements the V1PostAllocationProxyAddressRequest interface.
 */
export function instanceOfV1PostAllocationProxyAddressRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1PostAllocationProxyAddressRequestFromJSON(json: any): V1PostAllocationProxyAddressRequest {
    return V1PostAllocationProxyAddressRequestFromJSONTyped(json, false);
}

export function V1PostAllocationProxyAddressRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PostAllocationProxyAddressRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allocationId': !exists(json, 'allocationId') ? undefined : json['allocationId'],
        'proxyAddress': !exists(json, 'proxyAddress') ? undefined : json['proxyAddress'],
    };
}

export function V1PostAllocationProxyAddressRequestToJSON(value?: V1PostAllocationProxyAddressRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allocationId': value.allocationId,
        'proxyAddress': value.proxyAddress,
    };
}

