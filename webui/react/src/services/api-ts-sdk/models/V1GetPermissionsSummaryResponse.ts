/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Role } from './V1Role';
import {
    V1RoleFromJSON,
    V1RoleFromJSONTyped,
    V1RoleToJSON,
} from './V1Role';
import type { V1RoleAssignmentSummary } from './V1RoleAssignmentSummary';
import {
    V1RoleAssignmentSummaryFromJSON,
    V1RoleAssignmentSummaryFromJSONTyped,
    V1RoleAssignmentSummaryToJSON,
} from './V1RoleAssignmentSummary';

/**
 * Response to GetPermissionsSummaryRequest.
 * @export
 * @interface V1GetPermissionsSummaryResponse
 */
export interface V1GetPermissionsSummaryResponse {
    /**
     * A group of roles in cluster and other scopes.
     * @type {Array<V1Role>}
     * @memberof V1GetPermissionsSummaryResponse
     */
    roles: Array<V1Role>;
    /**
     * Lists of assignments for the cluster and other scopes.
     * @type {Array<V1RoleAssignmentSummary>}
     * @memberof V1GetPermissionsSummaryResponse
     */
    assignments: Array<V1RoleAssignmentSummary>;
}

/**
 * Check if a given object implements the V1GetPermissionsSummaryResponse interface.
 */
export function instanceOfV1GetPermissionsSummaryResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "roles" in value;
    isInstance = isInstance && "assignments" in value;

    return isInstance;
}

export function V1GetPermissionsSummaryResponseFromJSON(json: any): V1GetPermissionsSummaryResponse {
    return V1GetPermissionsSummaryResponseFromJSONTyped(json, false);
}

export function V1GetPermissionsSummaryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetPermissionsSummaryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roles': ((json['roles'] as Array<any>).map(V1RoleFromJSON)),
        'assignments': ((json['assignments'] as Array<any>).map(V1RoleAssignmentSummaryFromJSON)),
    };
}

export function V1GetPermissionsSummaryResponseToJSON(value?: V1GetPermissionsSummaryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roles': ((value.roles as Array<any>).map(V1RoleToJSON)),
        'assignments': ((value.assignments as Array<any>).map(V1RoleAssignmentSummaryToJSON)),
    };
}

