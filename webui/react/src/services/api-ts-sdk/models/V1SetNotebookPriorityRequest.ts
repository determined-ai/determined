/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Set the priority of the requested notebook.
 * @export
 * @interface V1SetNotebookPriorityRequest
 */
export interface V1SetNotebookPriorityRequest {
    /**
     * The id of the notebook.
     * @type {string}
     * @memberof V1SetNotebookPriorityRequest
     */
    notebookId?: string;
    /**
     * The new priority.
     * @type {number}
     * @memberof V1SetNotebookPriorityRequest
     */
    priority?: number;
}

/**
 * Check if a given object implements the V1SetNotebookPriorityRequest interface.
 */
export function instanceOfV1SetNotebookPriorityRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1SetNotebookPriorityRequestFromJSON(json: any): V1SetNotebookPriorityRequest {
    return V1SetNotebookPriorityRequestFromJSONTyped(json, false);
}

export function V1SetNotebookPriorityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SetNotebookPriorityRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notebookId': !exists(json, 'notebookId') ? undefined : json['notebookId'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
    };
}

export function V1SetNotebookPriorityRequestToJSON(value?: V1SetNotebookPriorityRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notebookId': value.notebookId,
        'priority': value.priority,
    };
}

