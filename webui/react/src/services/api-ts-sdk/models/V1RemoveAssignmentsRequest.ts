/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1GroupRoleAssignment } from './V1GroupRoleAssignment';
import {
    V1GroupRoleAssignmentFromJSON,
    V1GroupRoleAssignmentFromJSONTyped,
    V1GroupRoleAssignmentToJSON,
} from './V1GroupRoleAssignment';
import type { V1UserRoleAssignment } from './V1UserRoleAssignment';
import {
    V1UserRoleAssignmentFromJSON,
    V1UserRoleAssignmentFromJSONTyped,
    V1UserRoleAssignmentToJSON,
} from './V1UserRoleAssignment';

/**
 * RemoveAssignmentsRequest is the body of the request for the call
 * to remove a user or group from a role.
 * @export
 * @interface V1RemoveAssignmentsRequest
 */
export interface V1RemoveAssignmentsRequest {
    /**
     * the set of groups being removed from a role.
     * @type {Array<V1GroupRoleAssignment>}
     * @memberof V1RemoveAssignmentsRequest
     */
    groupRoleAssignments?: Array<V1GroupRoleAssignment>;
    /**
     * the set of users being removed from a role.
     * @type {Array<V1UserRoleAssignment>}
     * @memberof V1RemoveAssignmentsRequest
     */
    userRoleAssignments?: Array<V1UserRoleAssignment>;
}

/**
 * Check if a given object implements the V1RemoveAssignmentsRequest interface.
 */
export function instanceOfV1RemoveAssignmentsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1RemoveAssignmentsRequestFromJSON(json: any): V1RemoveAssignmentsRequest {
    return V1RemoveAssignmentsRequestFromJSONTyped(json, false);
}

export function V1RemoveAssignmentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RemoveAssignmentsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groupRoleAssignments': !exists(json, 'groupRoleAssignments') ? undefined : ((json['groupRoleAssignments'] as Array<any>).map(V1GroupRoleAssignmentFromJSON)),
        'userRoleAssignments': !exists(json, 'userRoleAssignments') ? undefined : ((json['userRoleAssignments'] as Array<any>).map(V1UserRoleAssignmentFromJSON)),
    };
}

export function V1RemoveAssignmentsRequestToJSON(value?: V1RemoveAssignmentsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groupRoleAssignments': value.groupRoleAssignments === undefined ? undefined : ((value.groupRoleAssignments as Array<any>).map(V1GroupRoleAssignmentToJSON)),
        'userRoleAssignments': value.userRoleAssignments === undefined ? undefined : ((value.userRoleAssignments as Array<any>).map(V1UserRoleAssignmentToJSON)),
    };
}

