/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1AgentUserGroup } from './V1AgentUserGroup';
import {
    V1AgentUserGroupFromJSON,
    V1AgentUserGroupFromJSONTyped,
    V1AgentUserGroupToJSON,
} from './V1AgentUserGroup';

/**
 * PatchWorkspace is a partial update to a workspace with all optional fields.
 * @export
 * @interface V1PatchWorkspace
 */
export interface V1PatchWorkspace {
    /**
     * The new name for the workspace.
     * @type {string}
     * @memberof V1PatchWorkspace
     */
    name?: string;
    /**
     * 
     * @type {V1AgentUserGroup}
     * @memberof V1PatchWorkspace
     */
    agentUserGroup?: V1AgentUserGroup;
    /**
     * Optional checkpoint storage config.
     * Expects same format as experiment config's checkpoint storage.
     * @type {object}
     * @memberof V1PatchWorkspace
     */
    checkpointStorageConfig?: object;
}

/**
 * Check if a given object implements the V1PatchWorkspace interface.
 */
export function instanceOfV1PatchWorkspace(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1PatchWorkspaceFromJSON(json: any): V1PatchWorkspace {
    return V1PatchWorkspaceFromJSONTyped(json, false);
}

export function V1PatchWorkspaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PatchWorkspace {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'agentUserGroup': !exists(json, 'agentUserGroup') ? undefined : V1AgentUserGroupFromJSON(json['agentUserGroup']),
        'checkpointStorageConfig': !exists(json, 'checkpointStorageConfig') ? undefined : json['checkpointStorageConfig'],
    };
}

export function V1PatchWorkspaceToJSON(value?: V1PatchWorkspace | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'agentUserGroup': V1AgentUserGroupToJSON(value.agentUserGroup),
        'checkpointStorageConfig': value.checkpointStorageConfig,
    };
}

