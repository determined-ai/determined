/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Response to GetModelLabelsRequest.
 * @export
 * @interface V1GetModelLabelsResponse
 */
export interface V1GetModelLabelsResponse {
    /**
     * List of labels used across all models.
     * @type {Array<string>}
     * @memberof V1GetModelLabelsResponse
     */
    labels: Array<string>;
}

/**
 * Check if a given object implements the V1GetModelLabelsResponse interface.
 */
export function instanceOfV1GetModelLabelsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "labels" in value;

    return isInstance;
}

export function V1GetModelLabelsResponseFromJSON(json: any): V1GetModelLabelsResponse {
    return V1GetModelLabelsResponseFromJSONTyped(json, false);
}

export function V1GetModelLabelsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1GetModelLabelsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'labels': json['labels'],
    };
}

export function V1GetModelLabelsResponseToJSON(value?: V1GetModelLabelsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'labels': value.labels,
    };
}

