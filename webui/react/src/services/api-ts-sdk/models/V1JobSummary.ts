/* tslint:disable */
/* eslint-disable */
/**
 * Determined API (Beta)
 * Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate. Determined allows deep learning engineers to focus on building and training models at scale, without needing to worry about DevOps or writing custom code for common tasks like fault tolerance or experiment tracking.  You can think of Determined as a platform that bridges the gap between tools like TensorFlow and PyTorch --- which work great for a single researcher with a single GPU --- to the challenges that arise when doing deep learning at scale, as teams, clusters, and data sets all increase in size.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@determined.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Determinedjobv1State } from './Determinedjobv1State';
import {
    Determinedjobv1StateFromJSON,
    Determinedjobv1StateFromJSONTyped,
    Determinedjobv1StateToJSON,
} from './Determinedjobv1State';

/**
 * Job summary.
 * @export
 * @interface V1JobSummary
 */
export interface V1JobSummary {
    /**
     * 
     * @type {Determinedjobv1State}
     * @memberof V1JobSummary
     */
    state: Determinedjobv1State;
    /**
     * The number of jobs ahead of this one in the queue.
     * @type {number}
     * @memberof V1JobSummary
     */
    jobsAhead: number;
}

/**
 * Check if a given object implements the V1JobSummary interface.
 */
export function instanceOfV1JobSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "jobsAhead" in value;

    return isInstance;
}

export function V1JobSummaryFromJSON(json: any): V1JobSummary {
    return V1JobSummaryFromJSONTyped(json, false);
}

export function V1JobSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1JobSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state': Determinedjobv1StateFromJSON(json['state']),
        'jobsAhead': json['jobsAhead'],
    };
}

export function V1JobSummaryToJSON(value?: V1JobSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state': Determinedjobv1StateToJSON(value.state),
        'jobsAhead': value.jobsAhead,
    };
}

