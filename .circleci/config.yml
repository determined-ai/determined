# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  win: circleci/windows@2.3.0

executors:
  python-35:
    docker:
      - image: python:3.5.9
  python-36:
    docker:
      - image: python:3.6.9
  python-37:
    docker:
      - image: python:3.7.7

parameters:
  det-version:
    type: string
    default: 0.12.3.dev0


commands:
  install-node:
    description: Install Node 12.x
    steps:
      - run: apt-get update && apt-get install -y apt-transport-https
      - run: curl -fsSL https://deb.nodesource.com/setup_12.x | bash -
      - run: apt-get update && apt-get install -y nodejs
  install-go:
    description: Install Go 1.13.1
    steps:
      - run: curl -fsSL https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz | tar -C /usr/local -xzf -
  restore-python-cache:
    description: Restore Python dependency cache
    steps:
      - restore_cache:
          keys:
            - det-py-deps-v1dev-{{ checksum  "combined-reqs.txt" }}
  restore-go-cache:
    description: Restore Go dependency cache
    steps:
      - restore_cache:
          keys:
            - det-go-deps-v1dev-{{ checksum  "master/go.sum" }}-{{ checksum  "agent/go.sum" }}
  restore-elm-cache:
    description: Restore Elm dependency cache
    steps:
      - restore_cache:
          keys:
            - det-elm-deps-v1dev-{{ checksum  "webui/elm/package-lock.json" }}
  restore-react-cache:
    description: Restore React dependency cache
    steps:
      - restore_cache:
          keys:
            - det-react-deps-v1dev-{{ checksum  "webui/react/package-lock.json" }}
  save-python-cache:
    description: Save Python dependency cache
    steps:
      - save_cache:
          key: det-py-deps-v1dev-{{ checksum  "combined-reqs.txt" }}
          paths:
            - "/tmp/venv"
  save-go-cache:
    description: Save Go dependency cache
    steps:
      - save_cache:
          key: det-go-deps-v1dev-{{ checksum  "master/go.sum" }}-{{ checksum  "agent/go.sum" }}
          paths:
            - "/go/pkg/mod/"
  save-elm-cache:
    description: Save Elm dependency cache
    steps:
      - save_cache:
          key: det-elm-deps-v1dev-{{ checksum  "webui/elm/package-lock.json" }}
          paths:
            - "webui/elm/node_modules"
  save-react-cache:
    description: Save React dependency cache
    steps:
      - save_cache:
          key: det-react-deps-v1dev-{{ checksum  "webui/react/package-lock.json" }}
          paths:
            - "webui/react/node_modules"
  python-venv-setup:
    description: Create Python venv and install combined dependencies.
    steps:
      - run: python3.6 -m venv /tmp/venv --system-site-packages
      - run: pip install --upgrade pip\<20
      - restore-python-cache
      - run: pip install -r combined-reqs.txt
      - save-python-cache


jobs:
  build:
    docker:
      - image: python:3.6.9-stretch
        environment:
          GO111MODULE: "on"
          PATH: /tmp/venv/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin
    steps:
      - run: python3.6 -m venv /tmp/venv
      - install-node
      - install-go

      - checkout

      - restore-python-cache
      - restore-go-cache
      - restore-elm-cache
      - restore-react-cache
      - run: make get-deps
      - save-python-cache
      - save-go-cache
      - save-elm-cache
      - save-react-cache

      - run: make -C webui/elm build
      - run: make -C webui/react build
      - run: make debs



  lint-elm:
    docker:
      - image: node:12
    steps:
      - checkout
      - restore-elm-cache
      - run: make -C webui/elm get-deps
      - save-elm-cache
      - run: make -C webui/elm check

  test-unit-elm:
    docker:
      - image: node:12
    steps:
      - checkout
      - restore-elm-cache
      - run: make -C webui/elm get-deps
      - save-elm-cache
      - run: make -C webui/elm test



  lint-react:
    docker:
      - image: node:12
    steps:
      - checkout
      - restore-react-cache
      - run: make -C webui/react get-deps
      - save-react-cache
      - run: make -C webui/react check

  test-unit-react:
    docker:
      - image: node:12
    steps:
      - checkout
      - restore-react-cache
      - run: make -C webui/react get-deps
      - save-react-cache
      - run: make -C webui/react test



  lint-go:
    docker:
      - image: golang:1.13-stretch
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - restore-go-cache
      - run: make go-get-deps
      - save-go-cache
      - run: make -C master check
      - run: make -C agent check
      - run: make check-commit-messages

  test-unit-go:
    docker:
      - image: golang:1.13-stretch
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - restore-go-cache
      - run: make go-get-deps
      - save-go-cache
      - run: make -C master test
      - run: make -C agent test




  lint-python:
    docker:
      - image: python:3.6.9
    environment:
      PATH: /tmp/venv/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    steps:
      - checkout
      - python-venv-setup
      - run: make check-python

  test-unit-harness:
    docker:
      - image: python:3.6.9
    environment:
      PATH: /tmp/venv/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    steps:
      - checkout
      - python-venv-setup
      - run: make test-harness

  test-unit-harness-tf2:
    docker:
      - image: python:3.6.9
    environment:
      PATH: /tmp/venv/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    steps:
      - checkout
      - run: python3.6 -m venv /tmp/venv
      - restore_cache:
          keys:
            - det-harness-deps-tf21-v1dev1-{{ checksum  "harness/setup.py" }}--{{ checksum  "common/setup.py" }}
      - run: pip install --upgrade pip\<20
      - run: pip install wheel
      - run: cd common; python setup.py bdist_wheel -d ../build
      - run: cd harness; python setup.py bdist_wheel -d ../build
      - run: pip install --find-links build determined==<< pipeline.parameters.det-version >> tensorflow==2.1.0 mypy==0.740 pytest
      - save_cache:
          key: det-harness-deps-tf21-v1dev1-{{ checksum  "harness/setup.py" }}--{{ checksum  "common/setup.py" }}
          paths:
            - "/tmp/venv"
      - run: make test-tf2

  test-cli:
    parameters:
      executor-name:
        type: string
    executor: << parameters.executor-name >>
    steps:
      - checkout
      - run: cd common; python setup.py bdist_wheel -d ../build
      - run: cd cli; python setup.py bdist_wheel -d ../build
      - run: pip install --find-links build determined-cli==<< pipeline.parameters.det-version >>
      # Ensure Determined cli can run without installing cli test requirements
      - run: det --help
      - run: pip install -r tests/cli/requirements.txt
      - run: pytest tests/cli



workflows:
  test-cli:
    jobs:
      - test-cli:
          matrix:
            parameters:
              executor-name: ["python-35", "python-36", "python-37", "win/default"]
  build:
    jobs:
      - build
  test-unit:
    jobs:
      - test-unit-go
      - test-unit-elm
      - test-unit-react
      - test-unit-harness
      - test-unit-harness-tf2
  lint:
    jobs:
      - lint-python
      - lint-go
      - lint-elm
      - lint-react
