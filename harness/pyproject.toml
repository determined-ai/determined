[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "determined"
description = "Determined AI: The fastest and easiest way to build deep learning models."
requires-python = ">=3.8"

authors = [
  { name = "Determined AI", email = "ai-open-source@hpe.com" },
]

dependencies = [
  "matplotlib",
  "packaging",
  "numpy>=1.16.2",
  "psutil",
  "pyzmq>=18.1.0",
  # Common:
  "certifi",
  "filelock",
  "requests<2.32.0",  # TODO(MD-415) remove this pin.
  "google-cloud-storage",
  "lomond>=0.3.3",
  "pathspec>=0.6.0",
  "azure-core",
  "azure-storage-blob",
  "termcolor>=1.1.0",
  "boto3",
  "oschmod;platform_system=='Windows'",
  # CLI:
  "argcomplete>=1.9.4",
  "gitpython>=3.1.3",
  "pyOpenSSL>= 19.1.0",
  "python-dateutil",
  "pytz",
  "tabulate>=0.8.3",
  "ruamel.yaml",
  # Deploy
  "docker[ssh]>=3.7.3",
  "google-api-python-client>=1.12.1",
  "paramiko>=2.4.2",  # explicitly pull in paramiko to prevent DistributionNotFound error
  "tqdm",
  "appdirs",
  # Telemetry
  "analytics-python",
]

classifiers = [
  "License :: OSI Approved :: Apache Software License",
]

# We can't seem to use pyproject.toml to include the Determined README
# relative to pyproject.toml, so it has to be dynamic here.
dynamic = ["version", "readme"]

[project.scripts]
# Replaces entry_points console_scripts in setup.py.
det = "determined.cli.__main__:main"

[project.urls]
Homepage = "https://determined.ai/"
Documentation = "https://docs.determined.ai/"

[tool.black]
line-length = 100
exclude = '(_gen.py|determined/_swagger/client/*)'

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
# Use find_namespace_packages because it will include data-only packages (that
# is, directories containing only non-python files, like our gcp terraform
# directory).
include = ["determined*"]
namespaces = true
