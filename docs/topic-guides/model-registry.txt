.. _organizing-models:

Organizing Models in the Model Registry
=======================================

In this topic guide, we focus on organization of checkpoints via the Determined
Model Registry. Before reading this guide, we recommend that users first read
the :ref:`exporting-checkpoints` how to guide which describes how to interact
with checkpoints.

A model is a named set of checkpoints. Each model in Determined must have a
unique name. You can also store a description for each model which provides
extra context. Finally, models can contain JSON metadata. This is useful for
storing additional attributes related a model. The following is an example JSON
representation of a model for illustration.


.. code:: json

  {
    "name": "mnist_cnn",
    "description": "a character recognition model",
    "metadata": {
      "dataset_url": "http://yann.lecun.com/exdb/mnist/",
      "git_url": "http://github.com/user/repo",
    }
  }

Once the model exists in determined, you can register a checkpoint as a version
of the model. A checkpoint registered as a version of a model is known as a
model version in Determined. A model version can be thought of as a pointer to
a checkpoint. For each model in the system, the version number will start at 1
and increment each time a model version is registered. Model versions are
retrieved via the model (see :class:`~determined.experimental.Model`) and can
be used to download and load the checkpoints they refer to. The following is an
example JSON representation of a model version for illustration.

.. code:: json

  {
    "model_version": {
      "model": {
        "name": "mnist_cnn",
        "description": "a character recognition model",
        "metadata": {
          "dataset_url": "http://yann.lecun.com/exdb/mnist/",
          "git_url": "http://github.com/user/repo"
        },
      },
      "checkpoint": {
        "uuid": "6a24d772-f1f7-4655-9061-22d582afd96c",
        "experiment_config": { "...": "..." },
        "experimentId": 1,
        "trialId": 1,
        "hparams": { "...": "..." },
        "batchNumber": 100,
        "resources": {
          "code/": "0",
          "code/const.yaml": "391",
          "code/model_def.py": "4067",
          "determined-keras-model.h5": "25224"
        },
        "metadata": {},
        "framework": "tensorflow-1.14.0",
        "format": "h5",
        "metrics": { "...": "..." }
      },
      "version": 1,
    }
  }
