.. _topic-guides_training-units:

################
 Training Units
################

When training a single model or performing a hyperparameter search, we need to specify
how much data a model should be trained on before certain actions are taken (e.g., 
before training is terminated or before a checkpoint of the state of the model is taken).
Determined supports a flexible system of *training units* to specify this. Specifically,
Determined supports configuring the following settings in the :ref:`experiment-configuration`:

-  :ref:`searcher.max_length<experiment-configuration_single-searcher-max-length>` in most searchers

-  :ref:`searcher.length_per_round<experiment-configuration_length-per-round>` in PBT

-  :ref:`min_validation_period<experiment-config-min-validation-period>`

-  :ref:`min_checkpoint_period<experiment-config-min-checkpoint-period>`

-  :ref:`searcher.budget<experiment-configuration_adaptive-advanced-budget>` when using ``adaptive_simple``

in terms of the following units:

-  ``records``: A *record* is a single labeled example (sometimes called a sample).

-  ``batches``: A *batch* is a group of records (the number of records in a batch is configured via the ``global_batch_size`` hyperparameter).

-  ``epochs``: An *epoch* is typically single copy of the entire training data set.

All these configuration settings and all units only accept whole number values.

The sections below present different configurations that result in the same effective training
length and behavior but use different training units. In general, configurations in terms of
one training unit can be converted to another and will result in identical behavior except in the
following cases:

-  When a quantity is too granular to be converted to a less granular unit. For example, because
   training units can only be configured with whole number values, moving from 50 ``records`` and
   to ``epochs`` with 100 records per epoch isn't possible since 0.5 epochs is not allowed.

-  When using a variable hyperparameter ``global_batch_size``. These configurations cannot be
   expressed correctly in terms of batches, since expressing the training length in terms of batches
   will result in a variable number of records.

-  When using our adaptive searchers, such as
   :ref:`adaptive_asha<experiment-configuration-searcher-adaptive>`, training unit is treated as
   atomic (unable to be divided into fractional parts) when dividing the
   ``max_length`` into rungs, which may result in unexpected behavior when configuring
   ``max_length`` in terms of small number of large epochs or a small number of large batches.

To verify your search is working as intended before committing to a full run, you can use the
preview search feature with the CLI command shown below.

.. code::

  det preview-search <configuration.yaml>

********
 Epochs
********

If you know your model usually takes a set number of epochs to converge, in Determined you can
specify the ``max_length`` in terms of epochs. When using epochs,
:ref:`records_per_epoch <config-records-per-epoch>` must also be specified. The snippet below
describes a searcher that trains a single trial on five epochs.

.. code:: yaml

  records_per_epoch: 10000
  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      epochs: 5
    smaller_is_better: true

To direct Determined to validate at least every 2 epochs and checkpoint at least every
epoch, the snippet below also sets ``min_validation_period`` and ``min_checkpoint_period``.

.. code:: yaml

  records_per_epoch: 10000
  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      epochs: 5
    smaller_is_better: true
  min_validation_period:
    epochs: 2
  min_checkpoint_period:
    epochs: 1

*********
 Records
*********

If you know your model usually takes a set number of records (or synonymous units,
such as inputs or samples) to converge, in Determined you can specify the
``max_length`` in terms of records. The snippet below describes a searcher
that trains a single trial on 50,000 records.

.. code:: yaml

  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      records: 50000
    smaller_is_better: true

To direct Determined to validate at least every 20000 records and checkpoint at least every
10000 records, the snippet below also sets ``min_validation_period`` and ``min_checkpoint_period``.

.. code:: yaml

  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      records: 50000
    smaller_is_better: true
  min_validation_period:
    records: 20000
  min_checkpoint_period:
    records: 10000

*********
 Batches
*********

If you know your model usually takes a set number of batches to converge, in Determined you can
specify the ``max_length`` in terms of batches. The snippet below describes a searcher that
trains a single trial on 500 batches.

.. code:: yaml

  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      batches: 500
    smaller_is_better: true

To direct Determined to validate at least every 200 batches and checkpoint at least every
100 batches, the snippet below also sets ``min_validation_period`` and ``min_checkpoint_period``.

.. code:: yaml

  hyperparameters:
    global_batch_size: 100
  searcher:
    name: single
    metric: validation_error
    max_length:
      batches: 500
    smaller_is_better: true
  min_validation_period:
    batches: 100
  min_checkpoint_period:
    batches: 50

.. note::

  Determined will drop any partial batches requested as a result of a configuration in records
  or epochs. If the global batch size does not even divide the max length, the remaining units will
  be dropped. For example, a single trial configured to run 10 records with a global batch size of 3
  records will only run 9 records. In the corner case that the max length is less than a single
  global batch size, a single batch will be run.
