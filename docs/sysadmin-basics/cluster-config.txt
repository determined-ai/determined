.. _cluster-configuration:

###################
 Configure Cluster
###################

The behavior of the master and agent can be controlled by setting configuration variables; this can
be done using a configuration file, environment variables, or command-line options. Although values
from different sources will be merged, we generally recommend sticking to a single source for each
service to keep things simple.

The master and the agent both accept an optional ``--config-file`` command-line option, which
specifies the path of the configuration file to use. Note that when running the master or agent
inside a container, you will need to make the configuration file accessible inside the container
(e.g., via a bind mount). For example, this command starts the agent using a configuration file:

.. code::

   docker run \
     -v `pwd`/agent-config.yaml:/etc/determined/agent-config.yaml \
     determinedai/determined-agent
     --config-file /etc/determined/agent-config.yaml

The ``agent-config.yaml`` file might contain

.. code:: yaml

   master_host: 127.0.0.1
   master_port: 8080

to configure the address of the Determined master that the agent will attempt to connect to.

Each option in the master or agent configuration file can also be specified as an environment
variable or a command-line option. To configure the behavior of the master or agent using
environment variables, specify an environment variable starting with ``DET_`` followed by the name
of the configuration variable. Underscores (``_``) should be used to indicate nested options: for
example, the ``logging.type`` master configuration option can be specified via an environment
variable named ``DET_LOGGING_TYPE``.

The equivalent of the agent configuration file shown above can be specified by setting two
environment variables, ``DET_MASTER_HOST`` and ``DET_MASTER_PORT``. When starting the agent as a
container, environment variables can be specified as part of ``docker run``:

.. code::

   docker run \
     -e DET_MASTER_HOST=127.0.0.1 \
     -e DET_MASTER_PORT=8080 \
     determinedai/determined-agent

The equivalent behavior can be achieved using command-line options:

.. code::

   determined-agent run --master-host=127.0.0.1 --master-port=8080

The same behavior applies to master configuration settings as well. For example, configuring the
host where the Postgres database is running can be done via a configuration file containing:

.. code:: yaml

   db:
     host: the-db-host

Equivalent behavior can be achieved by setting the ``DET_DB_HOST=the-db-host`` environment variable
or ``--db-host the-db-host`` command-line option.

In the rest of this document, we will refer to options using their names in the configuration file.
Periods (``.``) will be used to indicate nested options; for example, the option above would be
indicated by ``db.host``.

****************
 Common Options
****************

Master Port
===========

By default, the master listens on TCP port 8080. This can be configured via the ``port`` option.

.. _security:

Security
========

The master can secure all incoming connections using `TLS
<https://en.wikipedia.org/wiki/Transport_Layer_Security>`__. That ability requires a TLS private key
and certificate to be provided; set the options ``security.tls.cert`` and ``security.tls.key`` to
paths to a PEM-encoded TLS certificate and private key, respectively, to do so. If TLS is enabled,
the default port becomes 8443 rather than 8080. See :ref:`tls` for more information.

.. _agent-network-proxy:

Configuring Trial Runner Networking
===================================

The master is capable of selecting the network interface that trial runners will use to communicate
when performing distributed (multi-machine) training. The network interface can be configured by
editing ``task_container_defaults.dtrain_network_interface``. If left unspecified, which is the
default setting, Determined will auto-discover a common network interface shared by the trial
runners.

.. note::

   For :ref:`multi-gpu-training`, Determined automatically detects a common network interface shared
   by the agent machines. If your cluster has multiple common network interfaces, please specify the
   fastest one.

Additionally, the ports used by the GLOO and NCCL libraries, which are used during distributed
(multi-machine) training can be configured to fall within user-defined ranges. If left unspecified,
ports will be chosen randomly from the unprivileged port range (1024-65535).

Default Checkpoint Storage
==========================

See :ref:`checkpoint-storage` for details.

.. _telemetry:

Telemetry
=========

By default, the master and WebUI collect anonymous information about how Determined is being used.
This usage information is collected so that we can improve the design of the product. Determined
does not report information that can be used to identify individual users of the product, nor does
it include model source code, model architecture/checkpoints, training datasets, training and
validation metrics, logs, or hyperparameter values.

The information we collect from the master periodically includes:

-  a unique, randomly generated ID for the current database and for the current instance of the
   master
-  the version of Determined
-  the version of Go that was used to compile the master
-  the number of registered :ref:`users <users>`
-  the number of experiments that have been created
-  the total number of trials across all experiments
-  the number of active, paused, completed, and canceled experiments

We also record when the following events happen:

-  an experiment is created
-  an experiment's state changes
-  an agent connects or disconnects
-  a user is created (the username is not transmitted)

When an experiment is created, we report:

-  the ``searcher`` and ``resources`` sections of the experiment config
-  the name of the container image used
-  the total number of hyperparameters
-  the value of the ``scheduling_unit`` configuration setting

When an experiment terminates, we report:

-  the number of trials in the experiment
-  the total number of training workloads across all trials in the experiment
-  the total elapsed time for all workloads across all trials in the experiment

The information we collect from the WebUI includes:

-  pages that are visited
-  errors that occur (both network errors and uncaught exceptions)
-  user-triggered actions

To disable telemetry reporting in both the master and the WebUI, start the master with the
``--telemetry-enabled=false`` flag (this can also be done by editing the master config file or
setting an environment variable, as with any other configuration option). Disabling telemetry
reporting will not affect the functionality of Determined in any way.
