.. _core-responsive-pause-and-resume:

#############################
 Responsive Pause and Resume
#############################

To implement pause and resume, periodically call ``context.should_preempt()`` and shut down when it
returns ``true``.

When you check every epoch using the WebUI and after clicking the **Pause** button, you have to wait
for up to a full epoch to finish before the training job shuts down.

You can have a more responsive experience by checking every batch, as shown in this example, which
implements the simple, per-epoch check:

.. code::

       while epochs_trained < op.length:
   +       if context.should_preempt():
   +           break

           # train model
           ...

For this case, set ``context.should_preempt(block=False)``. When the call returns ``true``, you can
choose to save a checkpoint in a partially-complete epoch or exit immediately.

Saving a checkpoint minimizes lost progress, but maintaining reproducibility when checkpoints occur
mid-epoch can be difficult to manage, depending on your dataset and training loop complexity.
