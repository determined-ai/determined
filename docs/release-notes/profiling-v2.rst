:orphan:

**New Features**

-  Core API: the Determined profiler is now accessible from the Core API. It collects system
   metrics, which can be viewed in the Web UI under the experiment's "Profiler" tab. See the
   :ref:`Core API guide <core-profiler>` for details.

**Removed Features**

-  Profiler: support for timing metrics and related configurations have been removed. The Determined
   profiler will only collect system metrics, and we defer to our native profiler integrations for
   training-specific profiling. Users are encouraged to configure profilers native to their
   :ref:`training API <apis-howto-overview>` for this functionality.

   -  Historical data for timing metrics is retained in the ``trial_profiler_metrics`` database
      table, but they are no longer being collected or rendered in the Web UI.

   -  Historical data for system metrics generated by trials before this release are not
      automatically migrated due to time cost. For users wanting to view historical system metrics
      in the Web UI, we provide an `optional migration script
      <https://github.com/determined-ai/determined/blob/main/master/static/optional_migrations/20240325144732_trial-profiler-metrics-migration.tx.up.sql>`__
      that can be run manually.

   -  Configuration: the `timings_enabled`, `begin_on_batch`, and `end_after_batch` options in the
      `profiling` section of experiment configurations are no longer supported.

**Breaking Changes**

-  API: :class:`~determined.pytorch.Trainer` no longer supports the ``Trainer.configure_profiler``
   option. Profiling is now enabled through the ``Trainer.fit(profiling_enabled=True)`` call.

-  Database: system metrics collected by the Determined profiler are now stored in the generic
   ``metrics`` table. This requires a few schema changes to the ``metrics`` table that will be run
   during migrations. **Note**: This migration will be more time-consuming for deployments with a
   large amount of metrics stored.
