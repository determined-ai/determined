/*
Launcher API

The Launcher API is the execution layer for the Capsules framework.  It handles all the details of launching and monitoring runtime environments.

API version: 3.3.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package launcher

import (
	"encoding/json"
)

// EnvironmentLogSource struct for EnvironmentLogSource
type EnvironmentLogSource struct {
	Name *string `json:"name,omitempty"`
	King *string `json:"king,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Length *int64 `json:"length,omitempty"`
	AdditionalPropertiesField *map[string]interface{} `json:"additionalProperties,omitempty"`
}

// NewEnvironmentLogSource instantiates a new EnvironmentLogSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentLogSource() *EnvironmentLogSource {
	this := EnvironmentLogSource{}
	return &this
}

// NewEnvironmentLogSourceWithDefaults instantiates a new EnvironmentLogSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentLogSourceWithDefaults() *EnvironmentLogSource {
	this := EnvironmentLogSource{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentLogSource) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogSource) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentLogSource) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentLogSource) SetName(v string) {
	o.Name = &v
}

// GetKing returns the King field value if set, zero value otherwise.
func (o *EnvironmentLogSource) GetKing() string {
	if o == nil || o.King == nil {
		var ret string
		return ret
	}
	return *o.King
}

// GetKingOk returns a tuple with the King field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogSource) GetKingOk() (*string, bool) {
	if o == nil || o.King == nil {
		return nil, false
	}
	return o.King, true
}

// HasKing returns a boolean if a field has been set.
func (o *EnvironmentLogSource) HasKing() bool {
	if o != nil && o.King != nil {
		return true
	}

	return false
}

// SetKing gets a reference to the given string and assigns it to the King field.
func (o *EnvironmentLogSource) SetKing(v string) {
	o.King = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *EnvironmentLogSource) GetLastModified() string {
	if o == nil || o.LastModified == nil {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogSource) GetLastModifiedOk() (*string, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *EnvironmentLogSource) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *EnvironmentLogSource) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *EnvironmentLogSource) GetLength() int64 {
	if o == nil || o.Length == nil {
		var ret int64
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogSource) GetLengthOk() (*int64, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *EnvironmentLogSource) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int64 and assigns it to the Length field.
func (o *EnvironmentLogSource) SetLength(v int64) {
	o.Length = &v
}

// GetAdditionalPropertiesField returns the AdditionalPropertiesField field value if set, zero value otherwise.
func (o *EnvironmentLogSource) GetAdditionalPropertiesField() map[string]interface{} {
	if o == nil || o.AdditionalPropertiesField == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.AdditionalPropertiesField
}

// GetAdditionalPropertiesFieldOk returns a tuple with the AdditionalPropertiesField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLogSource) GetAdditionalPropertiesFieldOk() (*map[string]interface{}, bool) {
	if o == nil || o.AdditionalPropertiesField == nil {
		return nil, false
	}
	return o.AdditionalPropertiesField, true
}

// HasAdditionalPropertiesField returns a boolean if a field has been set.
func (o *EnvironmentLogSource) HasAdditionalPropertiesField() bool {
	if o != nil && o.AdditionalPropertiesField != nil {
		return true
	}

	return false
}

// SetAdditionalPropertiesField gets a reference to the given map[string]interface{} and assigns it to the AdditionalPropertiesField field.
func (o *EnvironmentLogSource) SetAdditionalPropertiesField(v map[string]interface{}) {
	o.AdditionalPropertiesField = &v
}

func (o EnvironmentLogSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.King != nil {
		toSerialize["king"] = o.King
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.AdditionalPropertiesField != nil {
		toSerialize["additionalProperties"] = o.AdditionalPropertiesField
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentLogSource struct {
	value *EnvironmentLogSource
	isSet bool
}

func (v NullableEnvironmentLogSource) Get() *EnvironmentLogSource {
	return v.value
}

func (v *NullableEnvironmentLogSource) Set(val *EnvironmentLogSource) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentLogSource) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentLogSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentLogSource(val *EnvironmentLogSource) *NullableEnvironmentLogSource {
	return &NullableEnvironmentLogSource{value: val, isSet: true}
}

func (v NullableEnvironmentLogSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentLogSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


