name: detsd_generate
entrypoint: python3 -m determined.launch.torch_distributed python3 generate.py
searcher:
  name: grid
  metric: none
  max_length: 100 # Number of times the generation pipeline is called, per-worker.
resources:
  slots_per_trial: 2
max_restarts: 0
environment:
    environment_variables:
        - HF_AUTH_TOKEN=YOUR_HF_AUTH_TOKEN_HERE
hyperparameters:
    pipeline: # The `device` arg is handled by the generate_on_cluster method; do not specify.
        learned_embeddings_filename: learned_embeddings_dict.pt
        scheduler_name: pndm
        beta_start: 0.00085
        beta_end: 0.012
        beta_schedule: scaled_linear
        other_scheduler_kwargs: {}
        pretrained_model_name_or_path: CompVis/stable-diffusion-v1-4
        use_autocast: False
        use_fp16: False
    uuids: []
    call:
      prompt:
        type: categorical
        vals:
          - a Van Gogh painting of a <det-logo>
          - a <det-logo> riding a horse
      rows: 2
      cols: 2
      num_inference_steps: 50
      guidance_scale: 7.5
      seed: 2147483647 # Various seeds are scanned during generation; don't scan over seed in an HP search.
      parallelize_factor: 2
      other_hf_pipeline_call_kwargs: {}
      max_nsfw_retries: 10
    tb_write_freq: 10

