description: NAS_Search
hyperparameters:
  clip_gradients_l2_norm: .25
  global_batch_size: 64
  bptt: 35
  learning_rate: 20
  dropout: 0.75
  dropouth: 0.25
  dropoutx: 0.75
  dropouti: 0.2
  nonmono: 5
  log_interval: 50
  alpha: 0
  beta: .001
  max_seq_length_delta: 20
  unrolled: True
  emsize: 850
  nhid: 850
  nhidlast: 850
  dropoute: 0
  wdecay: 8e-07
  seq_len: 35
  init_op: 'tanh'
  eval_batch_size: 10
  depth: 1 # you can also search across architectures for the number of cells concatenated
  step_every_epoch: False # set to True if you would like Determined to handle the LR scheduler
  step_every_batch: False # If step_every_batch and step_every_epoch are set to false, the scheudler will mimic the original repo
  arch_to_use: None
  eval_same_arch: True
  num_archs_to_eval: 0 # only used when eval_same_arch is False
min_validation_period: 4
entrypoint: model_def:NASModel
searcher:
  name: random
  metric: loss
  max_steps:  1242
  smaller_is_better: true
  max_trials: 15 # number of architectures you would like to independently search
data:
  out_file: 'data/architecture_'
# Uncomment if using predownloaded data
# bind_mounts:
#   - host_path: "/path/to/ptb/data"
#     container_path: 'data' # Mounts the host_path to data/
