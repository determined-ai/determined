// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// source: determined/api/v1/task.proto

package apiv1

import (
	checkpointv1 "github.com/determined-ai/determined/proto/pkg/checkpointv1"
	logv1 "github.com/determined-ai/determined/proto/pkg/logv1"
	taskv1 "github.com/determined-ai/determined/proto/pkg/taskv1"
	utilv1 "github.com/determined-ai/determined/proto/pkg/utilv1"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create a new generic task.
type CreateGenericTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generic task context.
	ContextDirectory []*utilv1.File `protobuf:"bytes,1,rep,name=context_directory,json=contextDirectory,proto3" json:"context_directory,omitempty"`
	// Generic task config (YAML).
	Config string `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Project id to contain the experiment.
	ProjectId *int32 `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	// Parent ID of new task
	ParentId *string `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	// If True inherits the context directory from the paren task (requires
	// parent_id)
	InheritContext *bool `protobuf:"varint,5,opt,name=inherit_context,json=inheritContext,proto3,oneof" json:"inherit_context,omitempty"`
	// Id of the task that this task is forked from
	ForkedFrom *string `protobuf:"bytes,6,opt,name=forked_from,json=forkedFrom,proto3,oneof" json:"forked_from,omitempty"`
	// Flag for whether task can be paused or not.
	NoPause *bool `protobuf:"varint,7,opt,name=no_pause,json=noPause,proto3,oneof" json:"no_pause,omitempty"`
}

func (x *CreateGenericTaskRequest) Reset() {
	*x = CreateGenericTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenericTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenericTaskRequest) ProtoMessage() {}

func (x *CreateGenericTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenericTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateGenericTaskRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGenericTaskRequest) GetContextDirectory() []*utilv1.File {
	if x != nil {
		return x.ContextDirectory
	}
	return nil
}

func (x *CreateGenericTaskRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *CreateGenericTaskRequest) GetProjectId() int32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CreateGenericTaskRequest) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *CreateGenericTaskRequest) GetInheritContext() bool {
	if x != nil && x.InheritContext != nil {
		return *x.InheritContext
	}
	return false
}

func (x *CreateGenericTaskRequest) GetForkedFrom() string {
	if x != nil && x.ForkedFrom != nil {
		return *x.ForkedFrom
	}
	return ""
}

func (x *CreateGenericTaskRequest) GetNoPause() bool {
	if x != nil && x.NoPause != nil {
		return *x.NoPause
	}
	return false
}

// Response to CreateExperimentRequest.
type CreateGenericTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created generic taskID.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// List of any related warnings.
	Warnings []LaunchWarning `protobuf:"varint,2,rep,packed,name=warnings,proto3,enum=determined.api.v1.LaunchWarning" json:"warnings,omitempty"`
}

func (x *CreateGenericTaskResponse) Reset() {
	*x = CreateGenericTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenericTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenericTaskResponse) ProtoMessage() {}

func (x *CreateGenericTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenericTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateGenericTaskResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGenericTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateGenericTaskResponse) GetWarnings() []LaunchWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Get the requested task.
type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested task id.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{2}
}

func (x *GetTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to GetTaskRequest.
type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested task.
	Task *taskv1.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetTaskResponse) GetTask() *taskv1.Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Request for an task's context directory.
type GetTaskContextDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the experiment.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskContextDirectoryRequest) Reset() {
	*x = GetTaskContextDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskContextDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskContextDirectoryRequest) ProtoMessage() {}

func (x *GetTaskContextDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskContextDirectoryRequest.ProtoReflect.Descriptor instead.
func (*GetTaskContextDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskContextDirectoryRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to GetTaskContextDirectoryRequest.
type GetTaskContextDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The base64-encoded, gzipped, tarball.
	B64Tgz string `protobuf:"bytes,1,opt,name=b64_tgz,json=b64Tgz,proto3" json:"b64_tgz,omitempty"`
}

func (x *GetTaskContextDirectoryResponse) Reset() {
	*x = GetTaskContextDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskContextDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskContextDirectoryResponse) ProtoMessage() {}

func (x *GetTaskContextDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskContextDirectoryResponse.ProtoReflect.Descriptor instead.
func (*GetTaskContextDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskContextDirectoryResponse) GetB64Tgz() string {
	if x != nil {
		return x.B64Tgz
	}
	return ""
}

// Request to PostTaskLogs.
type PostTaskLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The logs to persist.
	Logs []*taskv1.TaskLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *PostTaskLogsRequest) Reset() {
	*x = PostTaskLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTaskLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTaskLogsRequest) ProtoMessage() {}

func (x *PostTaskLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTaskLogsRequest.ProtoReflect.Descriptor instead.
func (*PostTaskLogsRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{6}
}

func (x *PostTaskLogsRequest) GetLogs() []*taskv1.TaskLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

// Response to PostTaskLogs.
type PostTaskLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostTaskLogsResponse) Reset() {
	*x = PostTaskLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTaskLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTaskLogsResponse) ProtoMessage() {}

func (x *PostTaskLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTaskLogsResponse.ProtoReflect.Descriptor instead.
func (*PostTaskLogsResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{7}
}

// Request a count of active tasks by type.
type GetActiveTasksCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveTasksCountRequest) Reset() {
	*x = GetActiveTasksCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTasksCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTasksCountRequest) ProtoMessage() {}

func (x *GetActiveTasksCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTasksCountRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTasksCountRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{8}
}

// Response to GetActiveTasksCountRequest.
type GetActiveTasksCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The count of commands.
	Commands int32 `protobuf:"varint,1,opt,name=commands,proto3" json:"commands,omitempty"`
	// The count of notebooks.
	Notebooks int32 `protobuf:"varint,2,opt,name=notebooks,proto3" json:"notebooks,omitempty"`
	// The count of shells.
	Shells int32 `protobuf:"varint,3,opt,name=shells,proto3" json:"shells,omitempty"`
	// The count of TensorBoards.
	Tensorboards int32 `protobuf:"varint,4,opt,name=tensorboards,proto3" json:"tensorboards,omitempty"`
}

func (x *GetActiveTasksCountResponse) Reset() {
	*x = GetActiveTasksCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveTasksCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTasksCountResponse) ProtoMessage() {}

func (x *GetActiveTasksCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTasksCountResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTasksCountResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{9}
}

func (x *GetActiveTasksCountResponse) GetCommands() int32 {
	if x != nil {
		return x.Commands
	}
	return 0
}

func (x *GetActiveTasksCountResponse) GetNotebooks() int32 {
	if x != nil {
		return x.Notebooks
	}
	return 0
}

func (x *GetActiveTasksCountResponse) GetShells() int32 {
	if x != nil {
		return x.Shells
	}
	return 0
}

func (x *GetActiveTasksCountResponse) GetTensorboards() int32 {
	if x != nil {
		return x.Tensorboards
	}
	return 0
}

// Mark the given task as ready.
type AllocationReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the allocation.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *AllocationReadyRequest) Reset() {
	*x = AllocationReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationReadyRequest) ProtoMessage() {}

func (x *AllocationReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationReadyRequest.ProtoReflect.Descriptor instead.
func (*AllocationReadyRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{10}
}

func (x *AllocationReadyRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Response to AllocationReadyRequest.
type AllocationReadyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllocationReadyResponse) Reset() {
	*x = AllocationReadyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationReadyResponse) ProtoMessage() {}

func (x *AllocationReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationReadyResponse.ProtoReflect.Descriptor instead.
func (*AllocationReadyResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{11}
}

// Mark the given task as waiting.
type AllocationWaitingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the allocation.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *AllocationWaitingRequest) Reset() {
	*x = AllocationWaitingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationWaitingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationWaitingRequest) ProtoMessage() {}

func (x *AllocationWaitingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationWaitingRequest.ProtoReflect.Descriptor instead.
func (*AllocationWaitingRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{12}
}

func (x *AllocationWaitingRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Response to AllocationWaitingRequest.
type AllocationWaitingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllocationWaitingResponse) Reset() {
	*x = AllocationWaitingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationWaitingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationWaitingResponse) ProtoMessage() {}

func (x *AllocationWaitingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationWaitingResponse.ProtoReflect.Descriptor instead.
func (*AllocationWaitingResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{13}
}

// Stream task logs.
type TaskLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Limit the number of trial logs. A value of 0 denotes no limit.
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Continue following logs until the trial stops.
	Follow bool `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
	// Limit the task logs to particular allocations.
	AllocationIds []string `protobuf:"bytes,6,rep,name=allocation_ids,json=allocationIds,proto3" json:"allocation_ids,omitempty"`
	// Limit the trial logs to a subset of agents.
	AgentIds []string `protobuf:"bytes,7,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	// Limit the trial logs to a subset of containers.
	ContainerIds []string `protobuf:"bytes,8,rep,name=container_ids,json=containerIds,proto3" json:"container_ids,omitempty"`
	// Limit the trial logs to a subset of ranks.
	RankIds []int32 `protobuf:"varint,9,rep,packed,name=rank_ids,json=rankIds,proto3" json:"rank_ids,omitempty"`
	// Limit the trial logs to a subset of agents.
	Levels []logv1.LogLevel `protobuf:"varint,10,rep,packed,name=levels,proto3,enum=determined.log.v1.LogLevel" json:"levels,omitempty"`
	// Limit the trial logs to a subset of output streams.
	Stdtypes []string `protobuf:"bytes,11,rep,name=stdtypes,proto3" json:"stdtypes,omitempty"`
	// Limit the trial logs to a subset of sources.
	Sources []string `protobuf:"bytes,12,rep,name=sources,proto3" json:"sources,omitempty"`
	// Limit the trial logs to ones with a timestamp before a given time.
	TimestampBefore *timestamp.Timestamp `protobuf:"bytes,13,opt,name=timestamp_before,json=timestampBefore,proto3" json:"timestamp_before,omitempty"`
	// Limit the trial logs to ones with a timestamp after a given time.
	TimestampAfter *timestamp.Timestamp `protobuf:"bytes,14,opt,name=timestamp_after,json=timestampAfter,proto3" json:"timestamp_after,omitempty"`
	// Order logs in either ascending or descending order by timestamp.
	OrderBy OrderBy `protobuf:"varint,15,opt,name=order_by,json=orderBy,proto3,enum=determined.api.v1.OrderBy" json:"order_by,omitempty"`
	// Search the logs by whether the text contains a substring.
	SearchText string `protobuf:"bytes,16,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"`
	// Search text is regex. Default to false.
	EnableRegex bool `protobuf:"varint,17,opt,name=enable_regex,json=enableRegex,proto3" json:"enable_regex,omitempty"`
}

func (x *TaskLogsRequest) Reset() {
	*x = TaskLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogsRequest) ProtoMessage() {}

func (x *TaskLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogsRequest.ProtoReflect.Descriptor instead.
func (*TaskLogsRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{14}
}

func (x *TaskLogsRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TaskLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *TaskLogsRequest) GetAllocationIds() []string {
	if x != nil {
		return x.AllocationIds
	}
	return nil
}

func (x *TaskLogsRequest) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *TaskLogsRequest) GetContainerIds() []string {
	if x != nil {
		return x.ContainerIds
	}
	return nil
}

func (x *TaskLogsRequest) GetRankIds() []int32 {
	if x != nil {
		return x.RankIds
	}
	return nil
}

func (x *TaskLogsRequest) GetLevels() []logv1.LogLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *TaskLogsRequest) GetStdtypes() []string {
	if x != nil {
		return x.Stdtypes
	}
	return nil
}

func (x *TaskLogsRequest) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *TaskLogsRequest) GetTimestampBefore() *timestamp.Timestamp {
	if x != nil {
		return x.TimestampBefore
	}
	return nil
}

func (x *TaskLogsRequest) GetTimestampAfter() *timestamp.Timestamp {
	if x != nil {
		return x.TimestampAfter
	}
	return nil
}

func (x *TaskLogsRequest) GetOrderBy() OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return OrderBy_ORDER_BY_UNSPECIFIED
}

func (x *TaskLogsRequest) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *TaskLogsRequest) GetEnableRegex() bool {
	if x != nil {
		return x.EnableRegex
	}
	return false
}

// Response to TaskLogsRequest.
type TaskLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the log.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp of the log.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The flat version of the log that UIs have shown historically.
	//
	// Deprecated: Do not use.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// The level of the log.
	Level logv1.LogLevel `protobuf:"varint,4,opt,name=level,proto3,enum=determined.log.v1.LogLevel" json:"level,omitempty"`
	// The ID of the task.
	TaskId string `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// The ID of the allocation.
	AllocationId *string `protobuf:"bytes,6,opt,name=allocation_id,json=allocationId,proto3,oneof" json:"allocation_id,omitempty"`
	// The agent the logs came from.
	AgentId *string `protobuf:"bytes,7,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	// The ID of the container or, in the case of k8s, the pod name.
	ContainerId *string `protobuf:"bytes,8,opt,name=container_id,json=containerId,proto3,oneof" json:"container_id,omitempty"`
	// The rank ID.
	RankId *int32 `protobuf:"varint,9,opt,name=rank_id,json=rankId,proto3,oneof" json:"rank_id,omitempty"`
	// The text of the log entry.
	Log string `protobuf:"bytes,10,opt,name=log,proto3" json:"log,omitempty"`
	// The source of the log entry.
	Source *string `protobuf:"bytes,11,opt,name=source,proto3,oneof" json:"source,omitempty"`
	// The output stream (e.g. stdout, stderr).
	Stdtype *string `protobuf:"bytes,12,opt,name=stdtype,proto3,oneof" json:"stdtype,omitempty"`
}

func (x *TaskLogsResponse) Reset() {
	*x = TaskLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogsResponse) ProtoMessage() {}

func (x *TaskLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogsResponse.ProtoReflect.Descriptor instead.
func (*TaskLogsResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{15}
}

func (x *TaskLogsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskLogsResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Deprecated: Do not use.
func (x *TaskLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskLogsResponse) GetLevel() logv1.LogLevel {
	if x != nil {
		return x.Level
	}
	return logv1.LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *TaskLogsResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskLogsResponse) GetAllocationId() string {
	if x != nil && x.AllocationId != nil {
		return *x.AllocationId
	}
	return ""
}

func (x *TaskLogsResponse) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *TaskLogsResponse) GetContainerId() string {
	if x != nil && x.ContainerId != nil {
		return *x.ContainerId
	}
	return ""
}

func (x *TaskLogsResponse) GetRankId() int32 {
	if x != nil && x.RankId != nil {
		return *x.RankId
	}
	return 0
}

func (x *TaskLogsResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *TaskLogsResponse) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *TaskLogsResponse) GetStdtype() string {
	if x != nil && x.Stdtype != nil {
		return *x.Stdtype
	}
	return ""
}

// Stream distinct task log fields.
type TaskLogsFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Continue following fields until the task stops.
	Follow bool `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *TaskLogsFieldsRequest) Reset() {
	*x = TaskLogsFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogsFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogsFieldsRequest) ProtoMessage() {}

func (x *TaskLogsFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogsFieldsRequest.ProtoReflect.Descriptor instead.
func (*TaskLogsFieldsRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{16}
}

func (x *TaskLogsFieldsRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskLogsFieldsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

// Response to TaskLogsFieldsRequest.
type TaskLogsFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The distint allocation IDs present in the logs.
	AllocationIds []string `protobuf:"bytes,1,rep,name=allocation_ids,json=allocationIds,proto3" json:"allocation_ids,omitempty"`
	// The distinct agent IDs present in the logs.
	AgentIds []string `protobuf:"bytes,2,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	// The distinct container IDs present in the logs.
	ContainerIds []string `protobuf:"bytes,3,rep,name=container_ids,json=containerIds,proto3" json:"container_ids,omitempty"`
	// The distinct rank IDs present in the logs.
	RankIds []int32 `protobuf:"varint,4,rep,packed,name=rank_ids,json=rankIds,proto3" json:"rank_ids,omitempty"`
	// The distinct stdtypes present in the logs.
	Stdtypes []string `protobuf:"bytes,5,rep,name=stdtypes,proto3" json:"stdtypes,omitempty"`
	// The distinct sources present in the logs.
	Sources []string `protobuf:"bytes,6,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *TaskLogsFieldsResponse) Reset() {
	*x = TaskLogsFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogsFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogsFieldsResponse) ProtoMessage() {}

func (x *TaskLogsFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogsFieldsResponse.ProtoReflect.Descriptor instead.
func (*TaskLogsFieldsResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{17}
}

func (x *TaskLogsFieldsResponse) GetAllocationIds() []string {
	if x != nil {
		return x.AllocationIds
	}
	return nil
}

func (x *TaskLogsFieldsResponse) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *TaskLogsFieldsResponse) GetContainerIds() []string {
	if x != nil {
		return x.ContainerIds
	}
	return nil
}

func (x *TaskLogsFieldsResponse) GetRankIds() []int32 {
	if x != nil {
		return x.RankIds
	}
	return nil
}

func (x *TaskLogsFieldsResponse) GetStdtypes() []string {
	if x != nil {
		return x.Stdtypes
	}
	return nil
}

func (x *TaskLogsFieldsResponse) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

// Report the given checkpoint for the task.
type ReportCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The training metrics to persist.
	Checkpoint *checkpointv1.Checkpoint `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
}

func (x *ReportCheckpointRequest) Reset() {
	*x = ReportCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCheckpointRequest) ProtoMessage() {}

func (x *ReportCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCheckpointRequest.ProtoReflect.Descriptor instead.
func (*ReportCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{18}
}

func (x *ReportCheckpointRequest) GetCheckpoint() *checkpointv1.Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

// Response to ReportCheckpointRequest.
type ReportCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportCheckpointResponse) Reset() {
	*x = ReportCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCheckpointResponse) ProtoMessage() {}

func (x *ReportCheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCheckpointResponse.ProtoReflect.Descriptor instead.
func (*ReportCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{19}
}

// Request the information of all tasks.
type GetTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTasksRequest) Reset() {
	*x = GetTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRequest) ProtoMessage() {}

func (x *GetTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{20}
}

// Response to GetTasksRequest.
type GetTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about a task for external display.
	AllocationIdToSummary map[string]*taskv1.AllocationSummary `protobuf:"bytes,1,rep,name=allocation_id_to_summary,json=allocationIdToSummary,proto3" json:"allocation_id_to_summary,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetTasksResponse) Reset() {
	*x = GetTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResponse) ProtoMessage() {}

func (x *GetTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTasksResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{21}
}

func (x *GetTasksResponse) GetAllocationIdToSummary() map[string]*taskv1.AllocationSummary {
	if x != nil {
		return x.AllocationIdToSummary
	}
	return nil
}

// Get the accelerator data for each allocation associated with a task.
type GetTaskAcceleratorDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskAcceleratorDataRequest) Reset() {
	*x = GetTaskAcceleratorDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskAcceleratorDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskAcceleratorDataRequest) ProtoMessage() {}

func (x *GetTaskAcceleratorDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskAcceleratorDataRequest.ProtoReflect.Descriptor instead.
func (*GetTaskAcceleratorDataRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{22}
}

func (x *GetTaskAcceleratorDataRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to GetTaskAcceleratorDataResponse
type GetTaskAcceleratorDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The accelerator data for each allocation associated with the task.
	AcceleratorData []*AcceleratorData `protobuf:"bytes,1,rep,name=accelerator_data,json=acceleratorData,proto3" json:"accelerator_data,omitempty"`
}

func (x *GetTaskAcceleratorDataResponse) Reset() {
	*x = GetTaskAcceleratorDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskAcceleratorDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskAcceleratorDataResponse) ProtoMessage() {}

func (x *GetTaskAcceleratorDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskAcceleratorDataResponse.ProtoReflect.Descriptor instead.
func (*GetTaskAcceleratorDataResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{23}
}

func (x *GetTaskAcceleratorDataResponse) GetAcceleratorData() []*AcceleratorData {
	if x != nil {
		return x.AcceleratorData
	}
	return nil
}

// Gets some allocation.
type GetAllocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the allocation.
	AllocationId string `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
}

func (x *GetAllocationRequest) Reset() {
	*x = GetAllocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocationRequest) ProtoMessage() {}

func (x *GetAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocationRequest.ProtoReflect.Descriptor instead.
func (*GetAllocationRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{24}
}

func (x *GetAllocationRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

// Response to GetAllocationRequest
type GetAllocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the allocation.
	Allocation *taskv1.Allocation `protobuf:"bytes,1,opt,name=allocation,proto3" json:"allocation,omitempty"`
}

func (x *GetAllocationResponse) Reset() {
	*x = GetAllocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocationResponse) ProtoMessage() {}

func (x *GetAllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocationResponse.ProtoReflect.Descriptor instead.
func (*GetAllocationResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{25}
}

func (x *GetAllocationResponse) GetAllocation() *taskv1.Allocation {
	if x != nil {
		return x.Allocation
	}
	return nil
}

// Gets task configuration JSON
type GetGenericTaskConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetGenericTaskConfigRequest) Reset() {
	*x = GetGenericTaskConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenericTaskConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenericTaskConfigRequest) ProtoMessage() {}

func (x *GetGenericTaskConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenericTaskConfigRequest.ProtoReflect.Descriptor instead.
func (*GetGenericTaskConfigRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{26}
}

func (x *GetGenericTaskConfigRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to GetTaskConfigRequest
type GetGenericTaskConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The config of the task
	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetGenericTaskConfigResponse) Reset() {
	*x = GetGenericTaskConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenericTaskConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenericTaskConfigResponse) ProtoMessage() {}

func (x *GetGenericTaskConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenericTaskConfigResponse.ProtoReflect.Descriptor instead.
func (*GetGenericTaskConfigResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{27}
}

func (x *GetGenericTaskConfigResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

// Kills generic task
type KillGenericTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Kill entire task tree
	KillFromRoot bool `protobuf:"varint,2,opt,name=kill_from_root,json=killFromRoot,proto3" json:"kill_from_root,omitempty"`
}

func (x *KillGenericTaskRequest) Reset() {
	*x = KillGenericTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillGenericTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillGenericTaskRequest) ProtoMessage() {}

func (x *KillGenericTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillGenericTaskRequest.ProtoReflect.Descriptor instead.
func (*KillGenericTaskRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{28}
}

func (x *KillGenericTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *KillGenericTaskRequest) GetKillFromRoot() bool {
	if x != nil {
		return x.KillFromRoot
	}
	return false
}

// Response to KillGenericTaskRequest
type KillGenericTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KillGenericTaskResponse) Reset() {
	*x = KillGenericTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillGenericTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillGenericTaskResponse) ProtoMessage() {}

func (x *KillGenericTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillGenericTaskResponse.ProtoReflect.Descriptor instead.
func (*KillGenericTaskResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{29}
}

// Pauses generic task
type PauseGenericTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *PauseGenericTaskRequest) Reset() {
	*x = PauseGenericTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseGenericTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseGenericTaskRequest) ProtoMessage() {}

func (x *PauseGenericTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseGenericTaskRequest.ProtoReflect.Descriptor instead.
func (*PauseGenericTaskRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{30}
}

func (x *PauseGenericTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to PauseGenericTaskRequest
type PauseGenericTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseGenericTaskResponse) Reset() {
	*x = PauseGenericTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseGenericTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseGenericTaskResponse) ProtoMessage() {}

func (x *PauseGenericTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseGenericTaskResponse.ProtoReflect.Descriptor instead.
func (*PauseGenericTaskResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{31}
}

// Unpause generic task
type UnpauseGenericTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the task.
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *UnpauseGenericTaskRequest) Reset() {
	*x = UnpauseGenericTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpauseGenericTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseGenericTaskRequest) ProtoMessage() {}

func (x *UnpauseGenericTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseGenericTaskRequest.ProtoReflect.Descriptor instead.
func (*UnpauseGenericTaskRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{32}
}

func (x *UnpauseGenericTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Response to UnpauseGenericTaskRequest
type UnpauseGenericTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpauseGenericTaskResponse) Reset() {
	*x = UnpauseGenericTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_task_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpauseGenericTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseGenericTaskResponse) ProtoMessage() {}

func (x *UnpauseGenericTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_task_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseGenericTaskResponse.ProtoReflect.Descriptor instead.
func (*UnpauseGenericTaskResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_task_proto_rawDescGZIP(), []int{33}
}

var File_determined_api_v1_task_proto protoreflect.FileDescriptor

var file_determined_api_v1_task_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64,
	0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x6c, 0x6f, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64,
	0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x03, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0e, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x6b, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x04, 0x52, 0x07, 0x6e, 0x6f, 0x50, 0x61, 0x75, 0x73, 0x65, 0x88, 0x01, 0x01,
	0x3a, 0x22, 0x92, 0x41, 0x1f, 0x0a, 0x1d, 0xd2, 0x01, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0xd2, 0x01, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x65, 0x64,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x0c, 0x92, 0x41, 0x09, 0x0a, 0x07, 0xd2, 0x01, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x22, 0x39, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x36, 0x34, 0x5f, 0x74, 0x67, 0x7a, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x36, 0x34, 0x54, 0x67, 0x7a, 0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x0a,
	0x0a, 0xd2, 0x01, 0x07, 0x62, 0x36, 0x34, 0x5f, 0x74, 0x67, 0x7a, 0x22, 0x54, 0x0a, 0x13, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x3a, 0x0c, 0x92, 0x41, 0x09, 0x0a, 0x07, 0xd2, 0x01, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x34, 0x92,
	0x41, 0x31, 0x0a, 0x2f, 0xd2, 0x01, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0xd2,
	0x01, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0xd2, 0x01, 0x06, 0x73, 0x68,
	0x65, 0x6c, 0x6c, 0x73, 0xd2, 0x01, 0x0c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a,
	0x18, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x04, 0x0a, 0x0f,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x64, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x64, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x3a, 0x0f, 0x92, 0x41,
	0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0xb1, 0x04,
	0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x72, 0x61, 0x6e,
	0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x74, 0x64, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x73, 0x74, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x3a, 0x38, 0x92, 0x41, 0x35, 0x0a, 0x33, 0xd2, 0x01, 0x02, 0x69, 0x64,
	0xd2, 0x01, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0xd2, 0x01, 0x03, 0x6c, 0x6f, 0x67, 0xd2, 0x01,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0xd2, 0x01, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x59, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3a, 0x0f, 0x92, 0x41, 0x0c,
	0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0xd9, 0x01, 0x0a,
	0x16, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x64, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x64, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x3a, 0x05, 0x92, 0x41, 0x02, 0x0a, 0x00, 0x22, 0x73, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x3a, 0x12, 0x92, 0x41, 0x0f, 0x0a, 0x0d,
	0xd2, 0x01, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfc, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x77, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x54, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x6f, 0x0a, 0x1a, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x18, 0x92, 0x41, 0x15, 0x0a, 0x13, 0xd2,
	0x01, 0x10, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a,
	0x15, 0x92, 0x41, 0x12, 0x0a, 0x10, 0xd2, 0x01, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x12, 0x92, 0x41, 0x0f, 0x0a, 0x0d, 0xd2, 0x01, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x3a, 0x0f, 0x92, 0x41, 0x0c,
	0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x3a, 0x0e, 0x92, 0x41, 0x0b, 0x0a, 0x09, 0xd2, 0x01, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x68, 0x0a, 0x16, 0x4b, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x6b, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x74, 0x3a, 0x0f, 0x92,
	0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x4b, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x17, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x3a, 0x0f, 0x92,
	0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x50, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x19, 0x55, 0x6e,
	0x70, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x0a, 0x0a, 0xd2, 0x01, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_determined_api_v1_task_proto_rawDescOnce sync.Once
	file_determined_api_v1_task_proto_rawDescData = file_determined_api_v1_task_proto_rawDesc
)

func file_determined_api_v1_task_proto_rawDescGZIP() []byte {
	file_determined_api_v1_task_proto_rawDescOnce.Do(func() {
		file_determined_api_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_determined_api_v1_task_proto_rawDescData)
	})
	return file_determined_api_v1_task_proto_rawDescData
}

var file_determined_api_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_determined_api_v1_task_proto_goTypes = []interface{}{
	(*CreateGenericTaskRequest)(nil),        // 0: determined.api.v1.CreateGenericTaskRequest
	(*CreateGenericTaskResponse)(nil),       // 1: determined.api.v1.CreateGenericTaskResponse
	(*GetTaskRequest)(nil),                  // 2: determined.api.v1.GetTaskRequest
	(*GetTaskResponse)(nil),                 // 3: determined.api.v1.GetTaskResponse
	(*GetTaskContextDirectoryRequest)(nil),  // 4: determined.api.v1.GetTaskContextDirectoryRequest
	(*GetTaskContextDirectoryResponse)(nil), // 5: determined.api.v1.GetTaskContextDirectoryResponse
	(*PostTaskLogsRequest)(nil),             // 6: determined.api.v1.PostTaskLogsRequest
	(*PostTaskLogsResponse)(nil),            // 7: determined.api.v1.PostTaskLogsResponse
	(*GetActiveTasksCountRequest)(nil),      // 8: determined.api.v1.GetActiveTasksCountRequest
	(*GetActiveTasksCountResponse)(nil),     // 9: determined.api.v1.GetActiveTasksCountResponse
	(*AllocationReadyRequest)(nil),          // 10: determined.api.v1.AllocationReadyRequest
	(*AllocationReadyResponse)(nil),         // 11: determined.api.v1.AllocationReadyResponse
	(*AllocationWaitingRequest)(nil),        // 12: determined.api.v1.AllocationWaitingRequest
	(*AllocationWaitingResponse)(nil),       // 13: determined.api.v1.AllocationWaitingResponse
	(*TaskLogsRequest)(nil),                 // 14: determined.api.v1.TaskLogsRequest
	(*TaskLogsResponse)(nil),                // 15: determined.api.v1.TaskLogsResponse
	(*TaskLogsFieldsRequest)(nil),           // 16: determined.api.v1.TaskLogsFieldsRequest
	(*TaskLogsFieldsResponse)(nil),          // 17: determined.api.v1.TaskLogsFieldsResponse
	(*ReportCheckpointRequest)(nil),         // 18: determined.api.v1.ReportCheckpointRequest
	(*ReportCheckpointResponse)(nil),        // 19: determined.api.v1.ReportCheckpointResponse
	(*GetTasksRequest)(nil),                 // 20: determined.api.v1.GetTasksRequest
	(*GetTasksResponse)(nil),                // 21: determined.api.v1.GetTasksResponse
	(*GetTaskAcceleratorDataRequest)(nil),   // 22: determined.api.v1.GetTaskAcceleratorDataRequest
	(*GetTaskAcceleratorDataResponse)(nil),  // 23: determined.api.v1.GetTaskAcceleratorDataResponse
	(*GetAllocationRequest)(nil),            // 24: determined.api.v1.GetAllocationRequest
	(*GetAllocationResponse)(nil),           // 25: determined.api.v1.GetAllocationResponse
	(*GetGenericTaskConfigRequest)(nil),     // 26: determined.api.v1.GetGenericTaskConfigRequest
	(*GetGenericTaskConfigResponse)(nil),    // 27: determined.api.v1.GetGenericTaskConfigResponse
	(*KillGenericTaskRequest)(nil),          // 28: determined.api.v1.KillGenericTaskRequest
	(*KillGenericTaskResponse)(nil),         // 29: determined.api.v1.KillGenericTaskResponse
	(*PauseGenericTaskRequest)(nil),         // 30: determined.api.v1.PauseGenericTaskRequest
	(*PauseGenericTaskResponse)(nil),        // 31: determined.api.v1.PauseGenericTaskResponse
	(*UnpauseGenericTaskRequest)(nil),       // 32: determined.api.v1.UnpauseGenericTaskRequest
	(*UnpauseGenericTaskResponse)(nil),      // 33: determined.api.v1.UnpauseGenericTaskResponse
	nil,                                     // 34: determined.api.v1.GetTasksResponse.AllocationIdToSummaryEntry
	(*utilv1.File)(nil),                     // 35: determined.util.v1.File
	(LaunchWarning)(0),                      // 36: determined.api.v1.LaunchWarning
	(*taskv1.Task)(nil),                     // 37: determined.task.v1.Task
	(*taskv1.TaskLog)(nil),                  // 38: determined.task.v1.TaskLog
	(logv1.LogLevel)(0),                     // 39: determined.log.v1.LogLevel
	(*timestamp.Timestamp)(nil),             // 40: google.protobuf.Timestamp
	(OrderBy)(0),                            // 41: determined.api.v1.OrderBy
	(*checkpointv1.Checkpoint)(nil),         // 42: determined.checkpoint.v1.Checkpoint
	(*AcceleratorData)(nil),                 // 43: determined.api.v1.AcceleratorData
	(*taskv1.Allocation)(nil),               // 44: determined.task.v1.Allocation
	(*taskv1.AllocationSummary)(nil),        // 45: determined.task.v1.AllocationSummary
}
var file_determined_api_v1_task_proto_depIdxs = []int32{
	35, // 0: determined.api.v1.CreateGenericTaskRequest.context_directory:type_name -> determined.util.v1.File
	36, // 1: determined.api.v1.CreateGenericTaskResponse.warnings:type_name -> determined.api.v1.LaunchWarning
	37, // 2: determined.api.v1.GetTaskResponse.task:type_name -> determined.task.v1.Task
	38, // 3: determined.api.v1.PostTaskLogsRequest.logs:type_name -> determined.task.v1.TaskLog
	39, // 4: determined.api.v1.TaskLogsRequest.levels:type_name -> determined.log.v1.LogLevel
	40, // 5: determined.api.v1.TaskLogsRequest.timestamp_before:type_name -> google.protobuf.Timestamp
	40, // 6: determined.api.v1.TaskLogsRequest.timestamp_after:type_name -> google.protobuf.Timestamp
	41, // 7: determined.api.v1.TaskLogsRequest.order_by:type_name -> determined.api.v1.OrderBy
	40, // 8: determined.api.v1.TaskLogsResponse.timestamp:type_name -> google.protobuf.Timestamp
	39, // 9: determined.api.v1.TaskLogsResponse.level:type_name -> determined.log.v1.LogLevel
	42, // 10: determined.api.v1.ReportCheckpointRequest.checkpoint:type_name -> determined.checkpoint.v1.Checkpoint
	34, // 11: determined.api.v1.GetTasksResponse.allocation_id_to_summary:type_name -> determined.api.v1.GetTasksResponse.AllocationIdToSummaryEntry
	43, // 12: determined.api.v1.GetTaskAcceleratorDataResponse.accelerator_data:type_name -> determined.api.v1.AcceleratorData
	44, // 13: determined.api.v1.GetAllocationResponse.allocation:type_name -> determined.task.v1.Allocation
	45, // 14: determined.api.v1.GetTasksResponse.AllocationIdToSummaryEntry.value:type_name -> determined.task.v1.AllocationSummary
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_determined_api_v1_task_proto_init() }
func file_determined_api_v1_task_proto_init() {
	if File_determined_api_v1_task_proto != nil {
		return
	}
	file_determined_api_v1_command_proto_init()
	file_determined_api_v1_pagination_proto_init()
	file_determined_api_v1_trial_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_determined_api_v1_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenericTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenericTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskContextDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskContextDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTaskLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTaskLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTasksCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveTasksCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationReadyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationWaitingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationWaitingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskLogsFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskLogsFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskAcceleratorDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskAcceleratorDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenericTaskConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenericTaskConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillGenericTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillGenericTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseGenericTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseGenericTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpauseGenericTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_task_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpauseGenericTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_determined_api_v1_task_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_determined_api_v1_task_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_determined_api_v1_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_determined_api_v1_task_proto_goTypes,
		DependencyIndexes: file_determined_api_v1_task_proto_depIdxs,
		MessageInfos:      file_determined_api_v1_task_proto_msgTypes,
	}.Build()
	File_determined_api_v1_task_proto = out.File
	file_determined_api_v1_task_proto_rawDesc = nil
	file_determined_api_v1_task_proto_goTypes = nil
	file_determined_api_v1_task_proto_depIdxs = nil
}
