// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// source: determined/api/v1/tensorboard.proto

package apiv1

import (
	tensorboardv1 "github.com/determined-ai/determined/proto/pkg/tensorboardv1"
	utilv1 "github.com/determined-ai/determined/proto/pkg/utilv1"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sorts tensorboards by the given field.
type GetTensorboardsRequest_SortBy int32

const (
	// Returns tensorboards in an unsorted list.
	GetTensorboardsRequest_SORT_BY_UNSPECIFIED GetTensorboardsRequest_SortBy = 0
	// Returns tensorboards sorted by id.
	GetTensorboardsRequest_SORT_BY_ID GetTensorboardsRequest_SortBy = 1
	// Returns tensorboards sorted by description.
	GetTensorboardsRequest_SORT_BY_DESCRIPTION GetTensorboardsRequest_SortBy = 2
	// Return tensorboards sorted by start time.
	GetTensorboardsRequest_SORT_BY_START_TIME GetTensorboardsRequest_SortBy = 4
	// Return tensorboards sorted by workspace_id.
	GetTensorboardsRequest_SORT_BY_WORKSPACE_ID GetTensorboardsRequest_SortBy = 5
)

// Enum value maps for GetTensorboardsRequest_SortBy.
var (
	GetTensorboardsRequest_SortBy_name = map[int32]string{
		0: "SORT_BY_UNSPECIFIED",
		1: "SORT_BY_ID",
		2: "SORT_BY_DESCRIPTION",
		4: "SORT_BY_START_TIME",
		5: "SORT_BY_WORKSPACE_ID",
	}
	GetTensorboardsRequest_SortBy_value = map[string]int32{
		"SORT_BY_UNSPECIFIED":  0,
		"SORT_BY_ID":           1,
		"SORT_BY_DESCRIPTION":  2,
		"SORT_BY_START_TIME":   4,
		"SORT_BY_WORKSPACE_ID": 5,
	}
)

func (x GetTensorboardsRequest_SortBy) Enum() *GetTensorboardsRequest_SortBy {
	p := new(GetTensorboardsRequest_SortBy)
	*p = x
	return p
}

func (x GetTensorboardsRequest_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTensorboardsRequest_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_determined_api_v1_tensorboard_proto_enumTypes[0].Descriptor()
}

func (GetTensorboardsRequest_SortBy) Type() protoreflect.EnumType {
	return &file_determined_api_v1_tensorboard_proto_enumTypes[0]
}

func (x GetTensorboardsRequest_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTensorboardsRequest_SortBy.Descriptor instead.
func (GetTensorboardsRequest_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{0, 0}
}

// Get a list of tensorboards.
type GetTensorboardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sort tensorboards by the given field.
	SortBy GetTensorboardsRequest_SortBy `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3,enum=determined.api.v1.GetTensorboardsRequest_SortBy" json:"sort_by,omitempty"`
	// Order tensorboards in either ascending or descending order.
	OrderBy OrderBy `protobuf:"varint,2,opt,name=order_by,json=orderBy,proto3,enum=determined.api.v1.OrderBy" json:"order_by,omitempty"`
	// Skip the number of tensorboards before returning results. Negative values
	// denote number of tensorboards to skip from the end before returning
	// results.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// Limit the number of tensorboards. A value of 0 denotes no limit.
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// Limit tensorboards to those that are owned by users with the specified
	// usernames.
	Users []string `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	// Limit tensorboards to those that are owned by users with the specified
	// userIds.
	UserIds []int32 `protobuf:"varint,6,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// Limit tensorboards to those that are in a specific workspace, or 0 for
	// all accessible workspaces.
	WorkspaceId int32 `protobuf:"varint,7,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetTensorboardsRequest) Reset() {
	*x = GetTensorboardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTensorboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTensorboardsRequest) ProtoMessage() {}

func (x *GetTensorboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTensorboardsRequest.ProtoReflect.Descriptor instead.
func (*GetTensorboardsRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{0}
}

func (x *GetTensorboardsRequest) GetSortBy() GetTensorboardsRequest_SortBy {
	if x != nil {
		return x.SortBy
	}
	return GetTensorboardsRequest_SORT_BY_UNSPECIFIED
}

func (x *GetTensorboardsRequest) GetOrderBy() OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return OrderBy_ORDER_BY_UNSPECIFIED
}

func (x *GetTensorboardsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTensorboardsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTensorboardsRequest) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetTensorboardsRequest) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *GetTensorboardsRequest) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

// Response to GetTensorboardsRequest.
type GetTensorboardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of returned tensorboards.
	Tensorboards []*tensorboardv1.Tensorboard `protobuf:"bytes,1,rep,name=tensorboards,proto3" json:"tensorboards,omitempty"`
	// Pagination information of the full dataset.
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetTensorboardsResponse) Reset() {
	*x = GetTensorboardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTensorboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTensorboardsResponse) ProtoMessage() {}

func (x *GetTensorboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTensorboardsResponse.ProtoReflect.Descriptor instead.
func (*GetTensorboardsResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{1}
}

func (x *GetTensorboardsResponse) GetTensorboards() []*tensorboardv1.Tensorboard {
	if x != nil {
		return x.Tensorboards
	}
	return nil
}

func (x *GetTensorboardsResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Get the requested tensorboard.
type GetTensorboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the tensorboard.
	TensorboardId string `protobuf:"bytes,1,opt,name=tensorboard_id,json=tensorboardId,proto3" json:"tensorboard_id,omitempty"`
}

func (x *GetTensorboardRequest) Reset() {
	*x = GetTensorboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTensorboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTensorboardRequest) ProtoMessage() {}

func (x *GetTensorboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTensorboardRequest.ProtoReflect.Descriptor instead.
func (*GetTensorboardRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{2}
}

func (x *GetTensorboardRequest) GetTensorboardId() string {
	if x != nil {
		return x.TensorboardId
	}
	return ""
}

// Response to GetTensorboardRequest.
type GetTensorboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested tensorboard.
	Tensorboard *tensorboardv1.Tensorboard `protobuf:"bytes,1,opt,name=tensorboard,proto3" json:"tensorboard,omitempty"`
	// The config;
	Config *_struct.Struct `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetTensorboardResponse) Reset() {
	*x = GetTensorboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTensorboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTensorboardResponse) ProtoMessage() {}

func (x *GetTensorboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTensorboardResponse.ProtoReflect.Descriptor instead.
func (*GetTensorboardResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{3}
}

func (x *GetTensorboardResponse) GetTensorboard() *tensorboardv1.Tensorboard {
	if x != nil {
		return x.Tensorboard
	}
	return nil
}

func (x *GetTensorboardResponse) GetConfig() *_struct.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

// Kill the requested tensorboard.
type KillTensorboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the tensorboard.
	TensorboardId string `protobuf:"bytes,1,opt,name=tensorboard_id,json=tensorboardId,proto3" json:"tensorboard_id,omitempty"`
}

func (x *KillTensorboardRequest) Reset() {
	*x = KillTensorboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillTensorboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillTensorboardRequest) ProtoMessage() {}

func (x *KillTensorboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillTensorboardRequest.ProtoReflect.Descriptor instead.
func (*KillTensorboardRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{4}
}

func (x *KillTensorboardRequest) GetTensorboardId() string {
	if x != nil {
		return x.TensorboardId
	}
	return ""
}

// Response to KillTensorboardRequest.
type KillTensorboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested tensorboard.
	Tensorboard *tensorboardv1.Tensorboard `protobuf:"bytes,1,opt,name=tensorboard,proto3" json:"tensorboard,omitempty"`
}

func (x *KillTensorboardResponse) Reset() {
	*x = KillTensorboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillTensorboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillTensorboardResponse) ProtoMessage() {}

func (x *KillTensorboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillTensorboardResponse.ProtoReflect.Descriptor instead.
func (*KillTensorboardResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{5}
}

func (x *KillTensorboardResponse) GetTensorboard() *tensorboardv1.Tensorboard {
	if x != nil {
		return x.Tensorboard
	}
	return nil
}

// Set the priority of the requested TensorBoard.
type SetTensorboardPriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the TensorBoard.
	TensorboardId string `protobuf:"bytes,1,opt,name=tensorboard_id,json=tensorboardId,proto3" json:"tensorboard_id,omitempty"`
	// The new priority.
	Priority int32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *SetTensorboardPriorityRequest) Reset() {
	*x = SetTensorboardPriorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTensorboardPriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTensorboardPriorityRequest) ProtoMessage() {}

func (x *SetTensorboardPriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTensorboardPriorityRequest.ProtoReflect.Descriptor instead.
func (*SetTensorboardPriorityRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{6}
}

func (x *SetTensorboardPriorityRequest) GetTensorboardId() string {
	if x != nil {
		return x.TensorboardId
	}
	return ""
}

func (x *SetTensorboardPriorityRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// Response to SetTensorboardPriorityRequest.
type SetTensorboardPriorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested Tensorboard.
	Tensorboard *tensorboardv1.Tensorboard `protobuf:"bytes,1,opt,name=tensorboard,proto3" json:"tensorboard,omitempty"`
}

func (x *SetTensorboardPriorityResponse) Reset() {
	*x = SetTensorboardPriorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTensorboardPriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTensorboardPriorityResponse) ProtoMessage() {}

func (x *SetTensorboardPriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTensorboardPriorityResponse.ProtoReflect.Descriptor instead.
func (*SetTensorboardPriorityResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{7}
}

func (x *SetTensorboardPriorityResponse) GetTensorboard() *tensorboardv1.Tensorboard {
	if x != nil {
		return x.Tensorboard
	}
	return nil
}

// Request to launch a tensorboard.
type LaunchTensorboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of source experiment ids.
	ExperimentIds []int32 `protobuf:"varint,1,rep,packed,name=experiment_ids,json=experimentIds,proto3" json:"experiment_ids,omitempty"`
	// List of source trial ids.
	TrialIds []int32 `protobuf:"varint,2,rep,packed,name=trial_ids,json=trialIds,proto3" json:"trial_ids,omitempty"`
	// Tensorboard config (JSON).
	Config *_struct.Struct `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// Tensorboard template name.
	TemplateName string `protobuf:"bytes,4,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	// The files to run with the command.
	Files []*utilv1.File `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	// Workspace in which to launch tensorboard. Defaults to 'Uncategorized'.
	WorkspaceId int32 `protobuf:"varint,6,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Targets all experiments matching filters.
	Filters *BulkExperimentFilters `protobuf:"bytes,7,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *LaunchTensorboardRequest) Reset() {
	*x = LaunchTensorboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchTensorboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchTensorboardRequest) ProtoMessage() {}

func (x *LaunchTensorboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchTensorboardRequest.ProtoReflect.Descriptor instead.
func (*LaunchTensorboardRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{8}
}

func (x *LaunchTensorboardRequest) GetExperimentIds() []int32 {
	if x != nil {
		return x.ExperimentIds
	}
	return nil
}

func (x *LaunchTensorboardRequest) GetTrialIds() []int32 {
	if x != nil {
		return x.TrialIds
	}
	return nil
}

func (x *LaunchTensorboardRequest) GetConfig() *_struct.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LaunchTensorboardRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *LaunchTensorboardRequest) GetFiles() []*utilv1.File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *LaunchTensorboardRequest) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *LaunchTensorboardRequest) GetFilters() *BulkExperimentFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Response to LaunchTensorboardRequest.
type LaunchTensorboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested tensorboard.
	Tensorboard *tensorboardv1.Tensorboard `protobuf:"bytes,1,opt,name=tensorboard,proto3" json:"tensorboard,omitempty"`
	// The config;
	Config *_struct.Struct `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// List of any related warnings.
	Warnings []LaunchWarning `protobuf:"varint,3,rep,packed,name=warnings,proto3,enum=determined.api.v1.LaunchWarning" json:"warnings,omitempty"`
}

func (x *LaunchTensorboardResponse) Reset() {
	*x = LaunchTensorboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_tensorboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchTensorboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchTensorboardResponse) ProtoMessage() {}

func (x *LaunchTensorboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_tensorboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchTensorboardResponse.ProtoReflect.Descriptor instead.
func (*LaunchTensorboardResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_tensorboard_proto_rawDescGZIP(), []int{9}
}

func (x *LaunchTensorboardResponse) GetTensorboard() *tensorboardv1.Tensorboard {
	if x != nil {
		return x.Tensorboard
	}
	return nil
}

func (x *LaunchTensorboardResponse) GetConfig() *_struct.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LaunchTensorboardResponse) GetWarnings() []LaunchWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

var File_determined_api_v1_tensorboard_proto protoreflect.FileDescriptor

var file_determined_api_v1_tensorboard_proto_rawDesc = []byte{
	0x0a, 0x23, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x03, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12,
	0x35, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x22, 0xba, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x0c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x14, 0x92,
	0x41, 0x11, 0x0a, 0x0f, 0xd2, 0x01, 0x0c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x1c, 0x92, 0x41, 0x19, 0x0a, 0x17,
	0xd2, 0x01, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0xd2, 0x01,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3f, 0x0a, 0x16, 0x4b, 0x69, 0x6c, 0x6c, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x17, 0x4b, 0x69, 0x6c, 0x6c,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x62, 0x0a,
	0x1d, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0x6a, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0xcb, 0x02,
	0x0a, 0x18, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x2f,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c,
	0x6b, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xf2, 0x01, 0x0a, 0x19,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x3a, 0x1c, 0x92, 0x41, 0x19, 0x0a, 0x17, 0xd2, 0x01, 0x0b, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0xd2, 0x01, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_determined_api_v1_tensorboard_proto_rawDescOnce sync.Once
	file_determined_api_v1_tensorboard_proto_rawDescData = file_determined_api_v1_tensorboard_proto_rawDesc
)

func file_determined_api_v1_tensorboard_proto_rawDescGZIP() []byte {
	file_determined_api_v1_tensorboard_proto_rawDescOnce.Do(func() {
		file_determined_api_v1_tensorboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_determined_api_v1_tensorboard_proto_rawDescData)
	})
	return file_determined_api_v1_tensorboard_proto_rawDescData
}

var file_determined_api_v1_tensorboard_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_determined_api_v1_tensorboard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_determined_api_v1_tensorboard_proto_goTypes = []interface{}{
	(GetTensorboardsRequest_SortBy)(0),     // 0: determined.api.v1.GetTensorboardsRequest.SortBy
	(*GetTensorboardsRequest)(nil),         // 1: determined.api.v1.GetTensorboardsRequest
	(*GetTensorboardsResponse)(nil),        // 2: determined.api.v1.GetTensorboardsResponse
	(*GetTensorboardRequest)(nil),          // 3: determined.api.v1.GetTensorboardRequest
	(*GetTensorboardResponse)(nil),         // 4: determined.api.v1.GetTensorboardResponse
	(*KillTensorboardRequest)(nil),         // 5: determined.api.v1.KillTensorboardRequest
	(*KillTensorboardResponse)(nil),        // 6: determined.api.v1.KillTensorboardResponse
	(*SetTensorboardPriorityRequest)(nil),  // 7: determined.api.v1.SetTensorboardPriorityRequest
	(*SetTensorboardPriorityResponse)(nil), // 8: determined.api.v1.SetTensorboardPriorityResponse
	(*LaunchTensorboardRequest)(nil),       // 9: determined.api.v1.LaunchTensorboardRequest
	(*LaunchTensorboardResponse)(nil),      // 10: determined.api.v1.LaunchTensorboardResponse
	(OrderBy)(0),                           // 11: determined.api.v1.OrderBy
	(*tensorboardv1.Tensorboard)(nil),      // 12: determined.tensorboard.v1.Tensorboard
	(*Pagination)(nil),                     // 13: determined.api.v1.Pagination
	(*_struct.Struct)(nil),                 // 14: google.protobuf.Struct
	(*utilv1.File)(nil),                    // 15: determined.util.v1.File
	(*BulkExperimentFilters)(nil),          // 16: determined.api.v1.BulkExperimentFilters
	(LaunchWarning)(0),                     // 17: determined.api.v1.LaunchWarning
}
var file_determined_api_v1_tensorboard_proto_depIdxs = []int32{
	0,  // 0: determined.api.v1.GetTensorboardsRequest.sort_by:type_name -> determined.api.v1.GetTensorboardsRequest.SortBy
	11, // 1: determined.api.v1.GetTensorboardsRequest.order_by:type_name -> determined.api.v1.OrderBy
	12, // 2: determined.api.v1.GetTensorboardsResponse.tensorboards:type_name -> determined.tensorboard.v1.Tensorboard
	13, // 3: determined.api.v1.GetTensorboardsResponse.pagination:type_name -> determined.api.v1.Pagination
	12, // 4: determined.api.v1.GetTensorboardResponse.tensorboard:type_name -> determined.tensorboard.v1.Tensorboard
	14, // 5: determined.api.v1.GetTensorboardResponse.config:type_name -> google.protobuf.Struct
	12, // 6: determined.api.v1.KillTensorboardResponse.tensorboard:type_name -> determined.tensorboard.v1.Tensorboard
	12, // 7: determined.api.v1.SetTensorboardPriorityResponse.tensorboard:type_name -> determined.tensorboard.v1.Tensorboard
	14, // 8: determined.api.v1.LaunchTensorboardRequest.config:type_name -> google.protobuf.Struct
	15, // 9: determined.api.v1.LaunchTensorboardRequest.files:type_name -> determined.util.v1.File
	16, // 10: determined.api.v1.LaunchTensorboardRequest.filters:type_name -> determined.api.v1.BulkExperimentFilters
	12, // 11: determined.api.v1.LaunchTensorboardResponse.tensorboard:type_name -> determined.tensorboard.v1.Tensorboard
	14, // 12: determined.api.v1.LaunchTensorboardResponse.config:type_name -> google.protobuf.Struct
	17, // 13: determined.api.v1.LaunchTensorboardResponse.warnings:type_name -> determined.api.v1.LaunchWarning
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_determined_api_v1_tensorboard_proto_init() }
func file_determined_api_v1_tensorboard_proto_init() {
	if File_determined_api_v1_tensorboard_proto != nil {
		return
	}
	file_determined_api_v1_command_proto_init()
	file_determined_api_v1_experiment_proto_init()
	file_determined_api_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_determined_api_v1_tensorboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTensorboardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTensorboardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTensorboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTensorboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillTensorboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillTensorboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTensorboardPriorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTensorboardPriorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchTensorboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_tensorboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchTensorboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_determined_api_v1_tensorboard_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_determined_api_v1_tensorboard_proto_goTypes,
		DependencyIndexes: file_determined_api_v1_tensorboard_proto_depIdxs,
		EnumInfos:         file_determined_api_v1_tensorboard_proto_enumTypes,
		MessageInfos:      file_determined_api_v1_tensorboard_proto_msgTypes,
	}.Build()
	File_determined_api_v1_tensorboard_proto = out.File
	file_determined_api_v1_tensorboard_proto_rawDesc = nil
	file_determined_api_v1_tensorboard_proto_goTypes = nil
	file_determined_api_v1_tensorboard_proto_depIdxs = nil
}
