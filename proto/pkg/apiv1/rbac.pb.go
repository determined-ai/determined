// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// source: determined/api/v1/rbac.proto

package apiv1

import (
	groupv1 "github.com/determined-ai/determined/proto/pkg/groupv1"
	rbacv1 "github.com/determined-ai/determined/proto/pkg/rbacv1"
	userv1 "github.com/determined-ai/determined/proto/pkg/userv1"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List all permissions for the current user in all parts of the cluster.
type GetPermissionsSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPermissionsSummaryRequest) Reset() {
	*x = GetPermissionsSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsSummaryRequest) ProtoMessage() {}

func (x *GetPermissionsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{0}
}

// Response to GetPermissionsSummaryRequest.
type GetPermissionsSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A group of roles in cluster and other scopes.
	Roles []*rbacv1.Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// Lists of assignments for the cluster and other scopes.
	Assignments []*rbacv1.RoleAssignmentSummary `protobuf:"bytes,2,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *GetPermissionsSummaryResponse) Reset() {
	*x = GetPermissionsSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsSummaryResponse) ProtoMessage() {}

func (x *GetPermissionsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *GetPermissionsSummaryResponse) GetRoles() []*rbacv1.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetPermissionsSummaryResponse) GetAssignments() []*rbacv1.RoleAssignmentSummary {
	if x != nil {
		return x.Assignments
	}
	return nil
}

// Request object for GetGroupsAndUsersAssignedToWorkspace.
type GetGroupsAndUsersAssignedToWorkspaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of workspace getting groups and users.
	WorkspaceId int32 `protobuf:"varint,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Name of groups and users to search by. Name filters by group name for
	// groups. Name filters by display name then username if display name is null
	// for users.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetGroupsAndUsersAssignedToWorkspaceRequest) Reset() {
	*x = GetGroupsAndUsersAssignedToWorkspaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsAndUsersAssignedToWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsAndUsersAssignedToWorkspaceRequest) ProtoMessage() {}

func (x *GetGroupsAndUsersAssignedToWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsAndUsersAssignedToWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsAndUsersAssignedToWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupsAndUsersAssignedToWorkspaceRequest) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetGroupsAndUsersAssignedToWorkspaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response object for GetGroupsAndUsersAssignedToWorkspace.
type GetGroupsAndUsersAssignedToWorkspaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Groups with a role assigned to the given workspace scope.
	// Contains user membership of each group.
	Groups []*groupv1.GroupDetails `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	// Only contains users assigned directly to roles on the workspace scope.
	UsersAssignedDirectly []*userv1.User `protobuf:"bytes,2,rep,name=users_assigned_directly,json=usersAssignedDirectly,proto3" json:"users_assigned_directly,omitempty"`
	// Roles assigned to workspace with associations between
	// groups and users_assigned_directly with roles.
	Assignments []*rbacv1.RoleWithAssignments `protobuf:"bytes,3,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) Reset() {
	*x = GetGroupsAndUsersAssignedToWorkspaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsAndUsersAssignedToWorkspaceResponse) ProtoMessage() {}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsAndUsersAssignedToWorkspaceResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsAndUsersAssignedToWorkspaceResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) GetGroups() []*groupv1.GroupDetails {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) GetUsersAssignedDirectly() []*userv1.User {
	if x != nil {
		return x.UsersAssignedDirectly
	}
	return nil
}

func (x *GetGroupsAndUsersAssignedToWorkspaceResponse) GetAssignments() []*rbacv1.RoleWithAssignments {
	if x != nil {
		return x.Assignments
	}
	return nil
}

// Request object for GetRolesByID
type GetRolesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ids of the roles to be returned
	RoleIds []int32 `protobuf:"varint,1,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *GetRolesByIDRequest) Reset() {
	*x = GetRolesByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesByIDRequest) ProtoMessage() {}

func (x *GetRolesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetRolesByIDRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *GetRolesByIDRequest) GetRoleIds() []int32 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

// Response object for GetRolesByID
type GetRolesByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The roles requested
	Roles []*rbacv1.RoleWithAssignments `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetRolesByIDResponse) Reset() {
	*x = GetRolesByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesByIDResponse) ProtoMessage() {}

func (x *GetRolesByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesByIDResponse.ProtoReflect.Descriptor instead.
func (*GetRolesByIDResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *GetRolesByIDResponse) GetRoles() []*rbacv1.RoleWithAssignments {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Request object for GetRolesAssignedToUser
type GetRolesAssignedToUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the user to search for role assignments for
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetRolesAssignedToUserRequest) Reset() {
	*x = GetRolesAssignedToUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesAssignedToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesAssignedToUserRequest) ProtoMessage() {}

func (x *GetRolesAssignedToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesAssignedToUserRequest.ProtoReflect.Descriptor instead.
func (*GetRolesAssignedToUserRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *GetRolesAssignedToUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response object for GetRolesAssignedToUser
type GetRolesAssignedToUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The roles assigned to the requested user with assignment information.
	Roles []*rbacv1.RoleWithAssignments `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetRolesAssignedToUserResponse) Reset() {
	*x = GetRolesAssignedToUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesAssignedToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesAssignedToUserResponse) ProtoMessage() {}

func (x *GetRolesAssignedToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesAssignedToUserResponse.ProtoReflect.Descriptor instead.
func (*GetRolesAssignedToUserResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *GetRolesAssignedToUserResponse) GetRoles() []*rbacv1.RoleWithAssignments {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Request object for GetRolesAssignedToGroup
type GetRolesAssignedToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the group to search for role assignments for
	GroupId int32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetRolesAssignedToGroupRequest) Reset() {
	*x = GetRolesAssignedToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesAssignedToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesAssignedToGroupRequest) ProtoMessage() {}

func (x *GetRolesAssignedToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesAssignedToGroupRequest.ProtoReflect.Descriptor instead.
func (*GetRolesAssignedToGroupRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{8}
}

func (x *GetRolesAssignedToGroupRequest) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// Response object for GetRolesAssignedToGroup
type GetRolesAssignedToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The roles assigned to the requested groups.
	Roles []*rbacv1.Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// What scope each role is assigned to.
	Assignments []*rbacv1.RoleAssignmentSummary `protobuf:"bytes,2,rep,name=assignments,proto3" json:"assignments,omitempty"`
}

func (x *GetRolesAssignedToGroupResponse) Reset() {
	*x = GetRolesAssignedToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesAssignedToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesAssignedToGroupResponse) ProtoMessage() {}

func (x *GetRolesAssignedToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesAssignedToGroupResponse.ProtoReflect.Descriptor instead.
func (*GetRolesAssignedToGroupResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{9}
}

func (x *GetRolesAssignedToGroupResponse) GetRoles() []*rbacv1.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetRolesAssignedToGroupResponse) GetAssignments() []*rbacv1.RoleAssignmentSummary {
	if x != nil {
		return x.Assignments
	}
	return nil
}

// Request object for SearchRolesAssignableToScope
type SearchRolesAssignableToScopeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of results to return
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// The offset to use with pagination
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The id of the workspace to use if searching for a workspace-assignable role
	WorkspaceId *wrappers.Int32Value `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *SearchRolesAssignableToScopeRequest) Reset() {
	*x = SearchRolesAssignableToScopeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolesAssignableToScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolesAssignableToScopeRequest) ProtoMessage() {}

func (x *SearchRolesAssignableToScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolesAssignableToScopeRequest.ProtoReflect.Descriptor instead.
func (*SearchRolesAssignableToScopeRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{10}
}

func (x *SearchRolesAssignableToScopeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRolesAssignableToScopeRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchRolesAssignableToScopeRequest) GetWorkspaceId() *wrappers.Int32Value {
	if x != nil {
		return x.WorkspaceId
	}
	return nil
}

// Response object for SearchRolesAssignableToScope
type SearchRolesAssignableToScopeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination information.
	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// the set of roles and all assignments belonging to it.
	Roles []*rbacv1.Role `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *SearchRolesAssignableToScopeResponse) Reset() {
	*x = SearchRolesAssignableToScopeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRolesAssignableToScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRolesAssignableToScopeResponse) ProtoMessage() {}

func (x *SearchRolesAssignableToScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRolesAssignableToScopeResponse.ProtoReflect.Descriptor instead.
func (*SearchRolesAssignableToScopeResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{11}
}

func (x *SearchRolesAssignableToScopeResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchRolesAssignableToScopeResponse) GetRoles() []*rbacv1.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// ListRolesRequest is the body of the request for the call
// to search for a role.
type ListRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the offset for pagination.
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// the limit for pagination.
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListRolesRequest) Reset() {
	*x = ListRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesRequest) ProtoMessage() {}

func (x *ListRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesRequest.ProtoReflect.Descriptor instead.
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{12}
}

func (x *ListRolesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRolesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListRolesResponse is the body of the response for the call
// to search for a role.
type ListRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a set of roles and all assignments belonging to it.
	Roles []*rbacv1.Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// pagination information.
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListRolesResponse) Reset() {
	*x = ListRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesResponse) ProtoMessage() {}

func (x *ListRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesResponse.ProtoReflect.Descriptor instead.
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{13}
}

func (x *ListRolesResponse) GetRoles() []*rbacv1.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ListRolesResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// AssignRolesRequest is the body of the request for the call to
// grant a user or group a role. It requires group_id, role_id,
// and either scope_workspace_id or scope_project_id.
type AssignRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of groups being assigned to a role.
	GroupRoleAssignments []*rbacv1.GroupRoleAssignment `protobuf:"bytes,1,rep,name=group_role_assignments,json=groupRoleAssignments,proto3" json:"group_role_assignments,omitempty"`
	// the set of users being assigned to a role.
	UserRoleAssignments []*rbacv1.UserRoleAssignment `protobuf:"bytes,2,rep,name=user_role_assignments,json=userRoleAssignments,proto3" json:"user_role_assignments,omitempty"`
}

func (x *AssignRolesRequest) Reset() {
	*x = AssignRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRolesRequest) ProtoMessage() {}

func (x *AssignRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRolesRequest.ProtoReflect.Descriptor instead.
func (*AssignRolesRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{14}
}

func (x *AssignRolesRequest) GetGroupRoleAssignments() []*rbacv1.GroupRoleAssignment {
	if x != nil {
		return x.GroupRoleAssignments
	}
	return nil
}

func (x *AssignRolesRequest) GetUserRoleAssignments() []*rbacv1.UserRoleAssignment {
	if x != nil {
		return x.UserRoleAssignments
	}
	return nil
}

// AssignRolesResponse is the body of the request for the call
// to grant a user or group a role.
type AssignRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignRolesResponse) Reset() {
	*x = AssignRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRolesResponse) ProtoMessage() {}

func (x *AssignRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRolesResponse.ProtoReflect.Descriptor instead.
func (*AssignRolesResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{15}
}

// RemoveAssignmentsRequest is the body of the request for the call
// to remove a user or group from a role.
type RemoveAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of groups being removed from a role.
	GroupRoleAssignments []*rbacv1.GroupRoleAssignment `protobuf:"bytes,1,rep,name=group_role_assignments,json=groupRoleAssignments,proto3" json:"group_role_assignments,omitempty"`
	// the set of users being removed from a role.
	UserRoleAssignments []*rbacv1.UserRoleAssignment `protobuf:"bytes,2,rep,name=user_role_assignments,json=userRoleAssignments,proto3" json:"user_role_assignments,omitempty"`
}

func (x *RemoveAssignmentsRequest) Reset() {
	*x = RemoveAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssignmentsRequest) ProtoMessage() {}

func (x *RemoveAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*RemoveAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveAssignmentsRequest) GetGroupRoleAssignments() []*rbacv1.GroupRoleAssignment {
	if x != nil {
		return x.GroupRoleAssignments
	}
	return nil
}

func (x *RemoveAssignmentsRequest) GetUserRoleAssignments() []*rbacv1.UserRoleAssignment {
	if x != nil {
		return x.UserRoleAssignments
	}
	return nil
}

// RemoveAssignmentsResponse is the body of the response for teh call
// to remove a user or group from a role.
type RemoveAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveAssignmentsResponse) Reset() {
	*x = RemoveAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_api_v1_rbac_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAssignmentsResponse) ProtoMessage() {}

func (x *RemoveAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_determined_api_v1_rbac_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*RemoveAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_determined_api_v1_rbac_proto_rawDescGZIP(), []int{17}
}

var File_determined_api_v1_rbac_proto protoreflect.FileDescriptor

var file_determined_api_v1_rbac_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x22, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x3a, 0x1b, 0x92, 0x41, 0x18, 0x0a, 0x16, 0xd2, 0x01, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0xd2, 0x01, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x64,
	0x0a, 0x2b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x50, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x15, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6c, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x36, 0x92,
	0x41, 0x33, 0x0a, 0x31, 0xd2, 0x01, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0xd2, 0x01, 0x17,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6c, 0x79, 0xd2, 0x01, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x38,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x3a, 0x0d, 0x92, 0x41, 0x0a, 0x0a, 0x08,
	0xd2, 0x01, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x1b, 0x92, 0x41, 0x18, 0x0a, 0x16, 0xd2, 0x01, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0xd2, 0x01, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x23, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x3a, 0x0d, 0x92, 0x41, 0x0a, 0x0a, 0x08,
	0xd2, 0x01, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x6f, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x22, 0x4f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x3a, 0x0d, 0x92, 0x41, 0x0a, 0x0a, 0x08, 0xd2, 0x01, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x1a, 0x92, 0x41, 0x17, 0x0a, 0x15, 0xd2, 0x01, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0xd2, 0x01, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x16, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x18,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x16, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_determined_api_v1_rbac_proto_rawDescOnce sync.Once
	file_determined_api_v1_rbac_proto_rawDescData = file_determined_api_v1_rbac_proto_rawDesc
)

func file_determined_api_v1_rbac_proto_rawDescGZIP() []byte {
	file_determined_api_v1_rbac_proto_rawDescOnce.Do(func() {
		file_determined_api_v1_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_determined_api_v1_rbac_proto_rawDescData)
	})
	return file_determined_api_v1_rbac_proto_rawDescData
}

var file_determined_api_v1_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_determined_api_v1_rbac_proto_goTypes = []interface{}{
	(*GetPermissionsSummaryRequest)(nil),                 // 0: determined.api.v1.GetPermissionsSummaryRequest
	(*GetPermissionsSummaryResponse)(nil),                // 1: determined.api.v1.GetPermissionsSummaryResponse
	(*GetGroupsAndUsersAssignedToWorkspaceRequest)(nil),  // 2: determined.api.v1.GetGroupsAndUsersAssignedToWorkspaceRequest
	(*GetGroupsAndUsersAssignedToWorkspaceResponse)(nil), // 3: determined.api.v1.GetGroupsAndUsersAssignedToWorkspaceResponse
	(*GetRolesByIDRequest)(nil),                          // 4: determined.api.v1.GetRolesByIDRequest
	(*GetRolesByIDResponse)(nil),                         // 5: determined.api.v1.GetRolesByIDResponse
	(*GetRolesAssignedToUserRequest)(nil),                // 6: determined.api.v1.GetRolesAssignedToUserRequest
	(*GetRolesAssignedToUserResponse)(nil),               // 7: determined.api.v1.GetRolesAssignedToUserResponse
	(*GetRolesAssignedToGroupRequest)(nil),               // 8: determined.api.v1.GetRolesAssignedToGroupRequest
	(*GetRolesAssignedToGroupResponse)(nil),              // 9: determined.api.v1.GetRolesAssignedToGroupResponse
	(*SearchRolesAssignableToScopeRequest)(nil),          // 10: determined.api.v1.SearchRolesAssignableToScopeRequest
	(*SearchRolesAssignableToScopeResponse)(nil),         // 11: determined.api.v1.SearchRolesAssignableToScopeResponse
	(*ListRolesRequest)(nil),                             // 12: determined.api.v1.ListRolesRequest
	(*ListRolesResponse)(nil),                            // 13: determined.api.v1.ListRolesResponse
	(*AssignRolesRequest)(nil),                           // 14: determined.api.v1.AssignRolesRequest
	(*AssignRolesResponse)(nil),                          // 15: determined.api.v1.AssignRolesResponse
	(*RemoveAssignmentsRequest)(nil),                     // 16: determined.api.v1.RemoveAssignmentsRequest
	(*RemoveAssignmentsResponse)(nil),                    // 17: determined.api.v1.RemoveAssignmentsResponse
	(*rbacv1.Role)(nil),                                  // 18: determined.rbac.v1.Role
	(*rbacv1.RoleAssignmentSummary)(nil),                 // 19: determined.rbac.v1.RoleAssignmentSummary
	(*groupv1.GroupDetails)(nil),                         // 20: determined.group.v1.GroupDetails
	(*userv1.User)(nil),                                  // 21: determined.user.v1.User
	(*rbacv1.RoleWithAssignments)(nil),                   // 22: determined.rbac.v1.RoleWithAssignments
	(*wrappers.Int32Value)(nil),                          // 23: google.protobuf.Int32Value
	(*Pagination)(nil),                                   // 24: determined.api.v1.Pagination
	(*rbacv1.GroupRoleAssignment)(nil),                   // 25: determined.rbac.v1.GroupRoleAssignment
	(*rbacv1.UserRoleAssignment)(nil),                    // 26: determined.rbac.v1.UserRoleAssignment
}
var file_determined_api_v1_rbac_proto_depIdxs = []int32{
	18, // 0: determined.api.v1.GetPermissionsSummaryResponse.roles:type_name -> determined.rbac.v1.Role
	19, // 1: determined.api.v1.GetPermissionsSummaryResponse.assignments:type_name -> determined.rbac.v1.RoleAssignmentSummary
	20, // 2: determined.api.v1.GetGroupsAndUsersAssignedToWorkspaceResponse.groups:type_name -> determined.group.v1.GroupDetails
	21, // 3: determined.api.v1.GetGroupsAndUsersAssignedToWorkspaceResponse.users_assigned_directly:type_name -> determined.user.v1.User
	22, // 4: determined.api.v1.GetGroupsAndUsersAssignedToWorkspaceResponse.assignments:type_name -> determined.rbac.v1.RoleWithAssignments
	22, // 5: determined.api.v1.GetRolesByIDResponse.roles:type_name -> determined.rbac.v1.RoleWithAssignments
	22, // 6: determined.api.v1.GetRolesAssignedToUserResponse.roles:type_name -> determined.rbac.v1.RoleWithAssignments
	18, // 7: determined.api.v1.GetRolesAssignedToGroupResponse.roles:type_name -> determined.rbac.v1.Role
	19, // 8: determined.api.v1.GetRolesAssignedToGroupResponse.assignments:type_name -> determined.rbac.v1.RoleAssignmentSummary
	23, // 9: determined.api.v1.SearchRolesAssignableToScopeRequest.workspace_id:type_name -> google.protobuf.Int32Value
	24, // 10: determined.api.v1.SearchRolesAssignableToScopeResponse.pagination:type_name -> determined.api.v1.Pagination
	18, // 11: determined.api.v1.SearchRolesAssignableToScopeResponse.roles:type_name -> determined.rbac.v1.Role
	18, // 12: determined.api.v1.ListRolesResponse.roles:type_name -> determined.rbac.v1.Role
	24, // 13: determined.api.v1.ListRolesResponse.pagination:type_name -> determined.api.v1.Pagination
	25, // 14: determined.api.v1.AssignRolesRequest.group_role_assignments:type_name -> determined.rbac.v1.GroupRoleAssignment
	26, // 15: determined.api.v1.AssignRolesRequest.user_role_assignments:type_name -> determined.rbac.v1.UserRoleAssignment
	25, // 16: determined.api.v1.RemoveAssignmentsRequest.group_role_assignments:type_name -> determined.rbac.v1.GroupRoleAssignment
	26, // 17: determined.api.v1.RemoveAssignmentsRequest.user_role_assignments:type_name -> determined.rbac.v1.UserRoleAssignment
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_determined_api_v1_rbac_proto_init() }
func file_determined_api_v1_rbac_proto_init() {
	if File_determined_api_v1_rbac_proto != nil {
		return
	}
	file_determined_api_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_determined_api_v1_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermissionsSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsAndUsersAssignedToWorkspaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsAndUsersAssignedToWorkspaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesAssignedToUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesAssignedToUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesAssignedToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesAssignedToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRolesAssignableToScopeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRolesAssignableToScopeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_api_v1_rbac_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_determined_api_v1_rbac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_determined_api_v1_rbac_proto_goTypes,
		DependencyIndexes: file_determined_api_v1_rbac_proto_depIdxs,
		MessageInfos:      file_determined_api_v1_rbac_proto_msgTypes,
	}.Build()
	File_determined_api_v1_rbac_proto = out.File
	file_determined_api_v1_rbac_proto_rawDesc = nil
	file_determined_api_v1_rbac_proto_goTypes = nil
	file_determined_api_v1_rbac_proto_depIdxs = nil
}
