// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// source: determined/search/v2/searcher.proto

package searchv2

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RunnableType defines the type of operation that should be executed by run
// runners.
type RunnableType int32

const (
	// Denotes an unknown runnable type.
	RunnableType_RUNNABLE_TYPE_UNSPECIFIED RunnableType = 0
	// Signals to a run runner that it should run a train.
	RunnableType_RUNNABLE_TYPE_TRAIN RunnableType = 1
	// Signals to a run runner it should compute validation metrics.
	RunnableType_RUNNABLE_TYPE_VALIDATE RunnableType = 2
)

// Enum value maps for RunnableType.
var (
	RunnableType_name = map[int32]string{
		0: "RUNNABLE_TYPE_UNSPECIFIED",
		1: "RUNNABLE_TYPE_TRAIN",
		2: "RUNNABLE_TYPE_VALIDATE",
	}
	RunnableType_value = map[string]int32{
		"RUNNABLE_TYPE_UNSPECIFIED": 0,
		"RUNNABLE_TYPE_TRAIN":       1,
		"RUNNABLE_TYPE_VALIDATE":    2,
	}
)

func (x RunnableType) Enum() *RunnableType {
	p := new(RunnableType)
	*p = x
	return p
}

func (x RunnableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnableType) Descriptor() protoreflect.EnumDescriptor {
	return file_determined_search_v2_searcher_proto_enumTypes[0].Descriptor()
}

func (RunnableType) Type() protoreflect.EnumType {
	return &file_determined_search_v2_searcher_proto_enumTypes[0]
}

func (x RunnableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnableType.Descriptor instead.
func (RunnableType) EnumDescriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{0}
}

// The reason for an early exit.
type RunExitedEarly_ExitedReason int32

const (
	// Zero-value (not allowed).
	RunExitedEarly_EXITED_REASON_UNSPECIFIED RunExitedEarly_ExitedReason = 0
	// Indicates the run exited due to an invalid hyperparameter.
	RunExitedEarly_EXITED_REASON_INVALID_HP RunExitedEarly_ExitedReason = 1
	// Indicates the run exited due to a user requested stop, from code.
	RunExitedEarly_EXITED_REASON_USER_REQUESTED_STOP RunExitedEarly_ExitedReason = 2
	// Indicates the run exited due to a user requested stop, from the CLI or
	// UI.
	RunExitedEarly_EXITED_REASON_USER_CANCELED RunExitedEarly_ExitedReason = 3
)

// Enum value maps for RunExitedEarly_ExitedReason.
var (
	RunExitedEarly_ExitedReason_name = map[int32]string{
		0: "EXITED_REASON_UNSPECIFIED",
		1: "EXITED_REASON_INVALID_HP",
		2: "EXITED_REASON_USER_REQUESTED_STOP",
		3: "EXITED_REASON_USER_CANCELED",
	}
	RunExitedEarly_ExitedReason_value = map[string]int32{
		"EXITED_REASON_UNSPECIFIED":         0,
		"EXITED_REASON_INVALID_HP":          1,
		"EXITED_REASON_USER_REQUESTED_STOP": 2,
		"EXITED_REASON_USER_CANCELED":       3,
	}
)

func (x RunExitedEarly_ExitedReason) Enum() *RunExitedEarly_ExitedReason {
	p := new(RunExitedEarly_ExitedReason)
	*p = x
	return p
}

func (x RunExitedEarly_ExitedReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunExitedEarly_ExitedReason) Descriptor() protoreflect.EnumDescriptor {
	return file_determined_search_v2_searcher_proto_enumTypes[1].Descriptor()
}

func (RunExitedEarly_ExitedReason) Type() protoreflect.EnumType {
	return &file_determined_search_v2_searcher_proto_enumTypes[1]
}

func (x RunExitedEarly_ExitedReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunExitedEarly_ExitedReason.Descriptor instead.
func (RunExitedEarly_ExitedReason) EnumDescriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{5, 0}
}

// InitialOperations is a searcher event signaling the creation of an
// search.
type InitialOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cannot have an empty message type.
	Placeholder int32 `protobuf:"varint,1,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
}

func (x *InitialOperations) Reset() {
	*x = InitialOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialOperations) ProtoMessage() {}

func (x *InitialOperations) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialOperations.ProtoReflect.Descriptor instead.
func (*InitialOperations) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{0}
}

func (x *InitialOperations) GetPlaceholder() int32 {
	if x != nil {
		return x.Placeholder
	}
	return 0
}

// RunCreated is a searcher event signaling the creation of a run.
type RunCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID identifying the run to the searcher.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *RunCreated) Reset() {
	*x = RunCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCreated) ProtoMessage() {}

func (x *RunCreated) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCreated.ProtoReflect.Descriptor instead.
func (*RunCreated) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{1}
}

func (x *RunCreated) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// RunProgress is a searcher event that tells you the number of batches
// completed in the run.
type RunProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID identifying the run to the searcher.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// partial_units represent partial epochs, batches or records where the Unit
	// is implied.
	PartialUnits float64 `protobuf:"fixed64,2,opt,name=partial_units,json=partialUnits,proto3" json:"partial_units,omitempty"`
}

func (x *RunProgress) Reset() {
	*x = RunProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunProgress) ProtoMessage() {}

func (x *RunProgress) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunProgress.ProtoReflect.Descriptor instead.
func (*RunProgress) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{2}
}

func (x *RunProgress) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RunProgress) GetPartialUnits() float64 {
	if x != nil {
		return x.PartialUnits
	}
	return 0
}

// ValidationCompleted is a searcher event triggered when a validation has been
// completed.
type ValidationCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID identifying the run to the searcher.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Value of the validation metric used to direct the search.
	Metric *_struct.Value `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	// Length from ValidateAfterOperation.
	ValidateAfterLength uint64 `protobuf:"varint,3,opt,name=validate_after_length,json=validateAfterLength,proto3" json:"validate_after_length,omitempty"`
}

func (x *ValidationCompleted) Reset() {
	*x = ValidationCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationCompleted) ProtoMessage() {}

func (x *ValidationCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationCompleted.ProtoReflect.Descriptor instead.
func (*ValidationCompleted) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{3}
}

func (x *ValidationCompleted) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ValidationCompleted) GetMetric() *_struct.Value {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *ValidationCompleted) GetValidateAfterLength() uint64 {
	if x != nil {
		return x.ValidateAfterLength
	}
	return 0
}

// RunClosed is a searcher event triggered when a run has successfully
// finished.
type RunClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID identifying the run to the searcher.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *RunClosed) Reset() {
	*x = RunClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunClosed) ProtoMessage() {}

func (x *RunClosed) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunClosed.ProtoReflect.Descriptor instead.
func (*RunClosed) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{4}
}

func (x *RunClosed) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// RunExitedEarly is a searcher event triggered when a run exited
// prematurely.
type RunExitedEarly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID identifying the run to the searcher.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The reason for the exit.
	ExitedReason RunExitedEarly_ExitedReason `protobuf:"varint,2,opt,name=exited_reason,json=exitedReason,proto3,enum=determined.search.v2.RunExitedEarly_ExitedReason" json:"exited_reason,omitempty"`
}

func (x *RunExitedEarly) Reset() {
	*x = RunExitedEarly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunExitedEarly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExitedEarly) ProtoMessage() {}

func (x *RunExitedEarly) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExitedEarly.ProtoReflect.Descriptor instead.
func (*RunExitedEarly) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{5}
}

func (x *RunExitedEarly) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RunExitedEarly) GetExitedReason() RunExitedEarly_ExitedReason {
	if x != nil {
		return x.ExitedReason
	}
	return RunExitedEarly_EXITED_REASON_UNSPECIFIED
}

// SearchInactive is a searcher event triggered when a search
// is no longer active.
type SearchInactive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current state of the search.
	SearchState State `protobuf:"varint,1,opt,name=search_state,json=searchState,proto3,enum=determined.search.v2.State" json:"search_state,omitempty"`
}

func (x *SearchInactive) Reset() {
	*x = SearchInactive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInactive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInactive) ProtoMessage() {}

func (x *SearchInactive) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInactive.ProtoReflect.Descriptor instead.
func (*SearchInactive) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{6}
}

func (x *SearchInactive) GetSearchState() State {
	if x != nil {
		return x.SearchState
	}
	return State_STATE_UNSPECIFIED
}

// SearcherEvent is a message from master to a client-driven custom searcher
// informing it of relevant changes in the state of a search.
type SearcherEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Incremental ID of the event.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The concrete event.
	//
	// Types that are assignable to Event:
	//
	//	*SearcherEvent_InitialOperations
	//	*SearcherEvent_RunCreated
	//	*SearcherEvent_ValidationCompleted
	//	*SearcherEvent_RunClosed
	//	*SearcherEvent_RunExitedEarly
	//	*SearcherEvent_RunProgress
	//	*SearcherEvent_SearchInactive
	Event isSearcherEvent_Event `protobuf_oneof:"event"`
}

func (x *SearcherEvent) Reset() {
	*x = SearcherEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearcherEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearcherEvent) ProtoMessage() {}

func (x *SearcherEvent) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearcherEvent.ProtoReflect.Descriptor instead.
func (*SearcherEvent) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{7}
}

func (x *SearcherEvent) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *SearcherEvent) GetEvent() isSearcherEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SearcherEvent) GetInitialOperations() *InitialOperations {
	if x, ok := x.GetEvent().(*SearcherEvent_InitialOperations); ok {
		return x.InitialOperations
	}
	return nil
}

func (x *SearcherEvent) GetRunCreated() *RunCreated {
	if x, ok := x.GetEvent().(*SearcherEvent_RunCreated); ok {
		return x.RunCreated
	}
	return nil
}

func (x *SearcherEvent) GetValidationCompleted() *ValidationCompleted {
	if x, ok := x.GetEvent().(*SearcherEvent_ValidationCompleted); ok {
		return x.ValidationCompleted
	}
	return nil
}

func (x *SearcherEvent) GetRunClosed() *RunClosed {
	if x, ok := x.GetEvent().(*SearcherEvent_RunClosed); ok {
		return x.RunClosed
	}
	return nil
}

func (x *SearcherEvent) GetRunExitedEarly() *RunExitedEarly {
	if x, ok := x.GetEvent().(*SearcherEvent_RunExitedEarly); ok {
		return x.RunExitedEarly
	}
	return nil
}

func (x *SearcherEvent) GetRunProgress() *RunProgress {
	if x, ok := x.GetEvent().(*SearcherEvent_RunProgress); ok {
		return x.RunProgress
	}
	return nil
}

func (x *SearcherEvent) GetSearchInactive() *SearchInactive {
	if x, ok := x.GetEvent().(*SearcherEvent_SearchInactive); ok {
		return x.SearchInactive
	}
	return nil
}

type isSearcherEvent_Event interface {
	isSearcherEvent_Event()
}

type SearcherEvent_InitialOperations struct {
	// A search has just been created.
	InitialOperations *InitialOperations `protobuf:"bytes,3,opt,name=initial_operations,json=initialOperations,proto3,oneof"`
}

type SearcherEvent_RunCreated struct {
	// A run has been created.
	RunCreated *RunCreated `protobuf:"bytes,4,opt,name=run_created,json=runCreated,proto3,oneof"`
}

type SearcherEvent_ValidationCompleted struct {
	// Validation has completed.
	ValidationCompleted *ValidationCompleted `protobuf:"bytes,5,opt,name=validation_completed,json=validationCompleted,proto3,oneof"`
}

type SearcherEvent_RunClosed struct {
	// Run has finished.
	RunClosed *RunClosed `protobuf:"bytes,6,opt,name=run_closed,json=runClosed,proto3,oneof"`
}

type SearcherEvent_RunExitedEarly struct {
	// Run exited early.
	RunExitedEarly *RunExitedEarly `protobuf:"bytes,7,opt,name=run_exited_early,json=runExitedEarly,proto3,oneof"`
}

type SearcherEvent_RunProgress struct {
	// Run progress.
	RunProgress *RunProgress `protobuf:"bytes,8,opt,name=run_progress,json=runProgress,proto3,oneof"`
}

type SearcherEvent_SearchInactive struct {
	// Search is inactive.
	SearchInactive *SearchInactive `protobuf:"bytes,9,opt,name=search_inactive,json=searchInactive,proto3,oneof"`
}

func (*SearcherEvent_InitialOperations) isSearcherEvent_Event() {}

func (*SearcherEvent_RunCreated) isSearcherEvent_Event() {}

func (*SearcherEvent_ValidationCompleted) isSearcherEvent_Event() {}

func (*SearcherEvent_RunClosed) isSearcherEvent_Event() {}

func (*SearcherEvent_RunExitedEarly) isSearcherEvent_Event() {}

func (*SearcherEvent_RunProgress) isSearcherEvent_Event() {}

func (*SearcherEvent_SearchInactive) isSearcherEvent_Event() {}

// ValidateAfterOperation means the run should train and validate after
// training the given length.
type ValidateAfterOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the run that should train.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The length to train before reporting a validation.
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ValidateAfterOperation) Reset() {
	*x = ValidateAfterOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAfterOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAfterOperation) ProtoMessage() {}

func (x *ValidateAfterOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAfterOperation.ProtoReflect.Descriptor instead.
func (*ValidateAfterOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateAfterOperation) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ValidateAfterOperation) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

// SetSearcherProgressOperation informs the master of the progress of the custom
// searcher.
type SetSearcherProgressOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search progress as a float between 0.0 and 1.0.
	Progress float64 `protobuf:"fixed64,1,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *SetSearcherProgressOperation) Reset() {
	*x = SetSearcherProgressOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSearcherProgressOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSearcherProgressOperation) ProtoMessage() {}

func (x *SetSearcherProgressOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSearcherProgressOperation.ProtoReflect.Descriptor instead.
func (*SetSearcherProgressOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{9}
}

func (x *SetSearcherProgressOperation) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// Used to complete a ValidateAfterOperation.
type CompleteValidateAfterOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ValidateAfterOperation being completed.
	Op *ValidateAfterOperation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	// The value of searcher metric associated with this completed operation.
	// The metric provided should be the metric used to guide HP search.
	SearcherMetric *_struct.Value `protobuf:"bytes,2,opt,name=searcher_metric,json=searcherMetric,proto3" json:"searcher_metric,omitempty"`
}

func (x *CompleteValidateAfterOperation) Reset() {
	*x = CompleteValidateAfterOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteValidateAfterOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteValidateAfterOperation) ProtoMessage() {}

func (x *CompleteValidateAfterOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteValidateAfterOperation.ProtoReflect.Descriptor instead.
func (*CompleteValidateAfterOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{10}
}

func (x *CompleteValidateAfterOperation) GetOp() *ValidateAfterOperation {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *CompleteValidateAfterOperation) GetSearcherMetric() *_struct.Value {
	if x != nil {
		return x.SearcherMetric
	}
	return nil
}

// Create a run with given hyperparameters.
type CreateRunOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the run to create.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// A JSON object representing the hyperparameters.
	Hyperparams string `protobuf:"bytes,2,opt,name=hyperparams,proto3" json:"hyperparams,omitempty"`
}

func (x *CreateRunOperation) Reset() {
	*x = CreateRunOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRunOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunOperation) ProtoMessage() {}

func (x *CreateRunOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunOperation.ProtoReflect.Descriptor instead.
func (*CreateRunOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRunOperation) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateRunOperation) GetHyperparams() string {
	if x != nil {
		return x.Hyperparams
	}
	return ""
}

// Close a run with given ID.
type CloseRunOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the run to close.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CloseRunOperation) Reset() {
	*x = CloseRunOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRunOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRunOperation) ProtoMessage() {}

func (x *CloseRunOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRunOperation.ProtoReflect.Descriptor instead.
func (*CloseRunOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{12}
}

func (x *CloseRunOperation) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Shut down custom searcher method.
type ShutDownOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines whether the Searcher was cancelled
	Cancel bool `protobuf:"varint,1,opt,name=cancel,proto3" json:"cancel,omitempty"`
	// Defines whether the Searcher failed
	Failure bool `protobuf:"varint,2,opt,name=failure,proto3" json:"failure,omitempty"`
}

func (x *ShutDownOperation) Reset() {
	*x = ShutDownOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutDownOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutDownOperation) ProtoMessage() {}

func (x *ShutDownOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutDownOperation.ProtoReflect.Descriptor instead.
func (*ShutDownOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{13}
}

func (x *ShutDownOperation) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

func (x *ShutDownOperation) GetFailure() bool {
	if x != nil {
		return x.Failure
	}
	return false
}

// SearcherOperation is an operation issued by the custom searcher.
type SearcherOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A searcher operation is one of the following operations.
	//
	// Types that are assignable to Union:
	//
	//	*SearcherOperation_RunOperation
	//	*SearcherOperation_CreateRun
	//	*SearcherOperation_CloseRun
	//	*SearcherOperation_ShutDown
	//	*SearcherOperation_SetSearcherProgress
	Union isSearcherOperation_Union `protobuf_oneof:"union"`
}

func (x *SearcherOperation) Reset() {
	*x = SearcherOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearcherOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearcherOperation) ProtoMessage() {}

func (x *SearcherOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearcherOperation.ProtoReflect.Descriptor instead.
func (*SearcherOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{14}
}

func (m *SearcherOperation) GetUnion() isSearcherOperation_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *SearcherOperation) GetRunOperation() *RunOperation {
	if x, ok := x.GetUnion().(*SearcherOperation_RunOperation); ok {
		return x.RunOperation
	}
	return nil
}

func (x *SearcherOperation) GetCreateRun() *CreateRunOperation {
	if x, ok := x.GetUnion().(*SearcherOperation_CreateRun); ok {
		return x.CreateRun
	}
	return nil
}

func (x *SearcherOperation) GetCloseRun() *CloseRunOperation {
	if x, ok := x.GetUnion().(*SearcherOperation_CloseRun); ok {
		return x.CloseRun
	}
	return nil
}

func (x *SearcherOperation) GetShutDown() *ShutDownOperation {
	if x, ok := x.GetUnion().(*SearcherOperation_ShutDown); ok {
		return x.ShutDown
	}
	return nil
}

func (x *SearcherOperation) GetSetSearcherProgress() *SetSearcherProgressOperation {
	if x, ok := x.GetUnion().(*SearcherOperation_SetSearcherProgress); ok {
		return x.SetSearcherProgress
	}
	return nil
}

type isSearcherOperation_Union interface {
	isSearcherOperation_Union()
}

type SearcherOperation_RunOperation struct {
	// RunOperation is issued to tell an existing run to do something.
	RunOperation *RunOperation `protobuf:"bytes,1,opt,name=run_operation,json=runOperation,proto3,oneof"`
}

type SearcherOperation_CreateRun struct {
	// CreateRunOperation is issued to create a run.
	CreateRun *CreateRunOperation `protobuf:"bytes,2,opt,name=create_run,json=createRun,proto3,oneof"`
}

type SearcherOperation_CloseRun struct {
	// CloseRunOperation is issued to close a run.
	CloseRun *CloseRunOperation `protobuf:"bytes,3,opt,name=close_run,json=closeRun,proto3,oneof"`
}

type SearcherOperation_ShutDown struct {
	// ShutDownOperation is issued to shut down the custom search method.
	ShutDown *ShutDownOperation `protobuf:"bytes,4,opt,name=shut_down,json=shutDown,proto3,oneof"`
}

type SearcherOperation_SetSearcherProgress struct {
	// SetSearcherProgressOperation is issued to set the progress of the custom
	// search method.
	SetSearcherProgress *SetSearcherProgressOperation `protobuf:"bytes,5,opt,name=set_searcher_progress,json=setSearcherProgress,proto3,oneof"`
}

func (*SearcherOperation_RunOperation) isSearcherOperation_Union() {}

func (*SearcherOperation_CreateRun) isSearcherOperation_Union() {}

func (*SearcherOperation_CloseRun) isSearcherOperation_Union() {}

func (*SearcherOperation_ShutDown) isSearcherOperation_Union() {}

func (*SearcherOperation_SetSearcherProgress) isSearcherOperation_Union() {}

// RunOperation is any operation that a run can perform while it is active.
type RunOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A run operation is one of the following operations.
	//
	// Types that are assignable to Union:
	//
	//	*RunOperation_ValidateAfter
	Union isRunOperation_Union `protobuf_oneof:"union"`
}

func (x *RunOperation) Reset() {
	*x = RunOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunOperation) ProtoMessage() {}

func (x *RunOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunOperation.ProtoReflect.Descriptor instead.
func (*RunOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{15}
}

func (m *RunOperation) GetUnion() isRunOperation_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *RunOperation) GetValidateAfter() *ValidateAfterOperation {
	if x, ok := x.GetUnion().(*RunOperation_ValidateAfter); ok {
		return x.ValidateAfter
	}
	return nil
}

type isRunOperation_Union interface {
	isRunOperation_Union()
}

type RunOperation_ValidateAfter struct {
	// ValidateAfter means a run is currently training and will later
	// validate.
	ValidateAfter *ValidateAfterOperation `protobuf:"bytes,1,opt,name=validate_after,json=validateAfter,proto3,oneof"`
}

func (*RunOperation_ValidateAfter) isRunOperation_Union() {}

// RunnableOperation represents a single runnable operation emitted by a
// searcher.
type RunnableOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the type of the operation.
	Type RunnableType `protobuf:"varint,1,opt,name=type,proto3,enum=determined.search.v2.RunnableType" json:"type,omitempty"`
	// If the type == WORKLOAD_KIND_TRAIN, this is the number of units
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *RunnableOperation) Reset() {
	*x = RunnableOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnableOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnableOperation) ProtoMessage() {}

func (x *RunnableOperation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnableOperation.ProtoReflect.Descriptor instead.
func (*RunnableOperation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{16}
}

func (x *RunnableOperation) GetType() RunnableType {
	if x != nil {
		return x.Type
	}
	return RunnableType_RUNNABLE_TYPE_UNSPECIFIED
}

func (x *RunnableOperation) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

// RunSimulation is a specific sequence of workloads that were run before the
// run was completed.
type RunSimulation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of operations that were run before the run was completed.
	Operations []*RunnableOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// The number of times that this run configuration has occurred during the
	// simulation.
	Occurrences int32 `protobuf:"varint,2,opt,name=occurrences,proto3" json:"occurrences,omitempty"`
}

func (x *RunSimulation) Reset() {
	*x = RunSimulation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSimulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSimulation) ProtoMessage() {}

func (x *RunSimulation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSimulation.ProtoReflect.Descriptor instead.
func (*RunSimulation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{17}
}

func (x *RunSimulation) GetOperations() []*RunnableOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *RunSimulation) GetOccurrences() int32 {
	if x != nil {
		return x.Occurrences
	}
	return 0
}

// SearchSimulation holds the configuration and results of simulated run of
// a searcher.
type SearchSimulation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The simulated search config.
	Config *_struct.Struct `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// The searcher simulation seed.
	Seed uint32 `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	// The list of runs in the simulation.
	Runs []*RunSimulation `protobuf:"bytes,3,rep,name=runs,proto3" json:"runs,omitempty"`
}

func (x *SearchSimulation) Reset() {
	*x = SearchSimulation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_determined_search_v2_searcher_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSimulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSimulation) ProtoMessage() {}

func (x *SearchSimulation) ProtoReflect() protoreflect.Message {
	mi := &file_determined_search_v2_searcher_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSimulation.ProtoReflect.Descriptor instead.
func (*SearchSimulation) Descriptor() ([]byte, []int) {
	return file_determined_search_v2_searcher_proto_rawDescGZIP(), []int{18}
}

func (x *SearchSimulation) GetConfig() *_struct.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SearchSimulation) GetSeed() uint32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *SearchSimulation) GetRuns() []*RunSimulation {
	if x != nil {
		return x.Runs
	}
	return nil
}

var File_determined_search_v2_searcher_proto protoreflect.FileDescriptor

var file_determined_search_v2_searcher_proto_rawDesc = []byte{
	0x0a, 0x23, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x11, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x22, 0x3f, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x3a, 0x12,
	0x92, 0x41, 0x0f, 0x0a, 0x0d, 0xd2, 0x01, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x22, 0x75, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x3a, 0x22, 0x92, 0x41, 0x1f, 0x0a, 0x1d, 0xd2, 0x01, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x32, 0x0a, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x3a, 0x33, 0x92, 0x41, 0x30, 0x0a, 0x2e, 0xd2, 0x01, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0xd2, 0x01, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x3e, 0x0a, 0x09, 0x52, 0x75, 0x6e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x3a, 0x12, 0x92, 0x41, 0x0f, 0x0a, 0x0d, 0xd2, 0x01, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x22, 0xc1, 0x02, 0x0a, 0x0e, 0x52, 0x75,
	0x6e, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x0d, 0x65,
	0x78, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x69,
	0x74, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x48, 0x50, 0x10,
	0x01, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x58, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45,
	0x44, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x58, 0x49, 0x54,
	0x45, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x3a, 0x22, 0x92, 0x41, 0x1f, 0x0a, 0x1d,
	0xd2, 0x01, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x0d,
	0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x66, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x3e, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a,
	0x14, 0x92, 0x41, 0x11, 0x0a, 0x0f, 0xd2, 0x01, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xe0, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x43, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x14, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x72,
	0x75, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x10, 0x72, 0x75, 0x6e, 0x5f,
	0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x69,
	0x74, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x45,
	0x78, 0x69, 0x74, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x72, 0x75,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x3a, 0x0a, 0x92, 0x41, 0x07, 0x0a, 0x05, 0xd2, 0x01, 0x02, 0x69, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x3a, 0x0a, 0x1c, 0x53, 0x65, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x55, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x75, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x32,
	0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x75, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x53, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x49, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x75,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x46, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72,
	0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x75, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x46, 0x0a,
	0x09, 0x73, 0x68, 0x75, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x73, 0x68, 0x75,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x68, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x7a, 0x0a,
	0x0d, 0x52, 0x75, 0x6e, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x2a, 0x62, 0x0a, 0x0c,
	0x52, 0x75, 0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19,
	0x52, 0x55, 0x4e, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x55, 0x4e, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x55, 0x4e, 0x4e, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_determined_search_v2_searcher_proto_rawDescOnce sync.Once
	file_determined_search_v2_searcher_proto_rawDescData = file_determined_search_v2_searcher_proto_rawDesc
)

func file_determined_search_v2_searcher_proto_rawDescGZIP() []byte {
	file_determined_search_v2_searcher_proto_rawDescOnce.Do(func() {
		file_determined_search_v2_searcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_determined_search_v2_searcher_proto_rawDescData)
	})
	return file_determined_search_v2_searcher_proto_rawDescData
}

var file_determined_search_v2_searcher_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_determined_search_v2_searcher_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_determined_search_v2_searcher_proto_goTypes = []interface{}{
	(RunnableType)(0),                      // 0: determined.search.v2.RunnableType
	(RunExitedEarly_ExitedReason)(0),       // 1: determined.search.v2.RunExitedEarly.ExitedReason
	(*InitialOperations)(nil),              // 2: determined.search.v2.InitialOperations
	(*RunCreated)(nil),                     // 3: determined.search.v2.RunCreated
	(*RunProgress)(nil),                    // 4: determined.search.v2.RunProgress
	(*ValidationCompleted)(nil),            // 5: determined.search.v2.ValidationCompleted
	(*RunClosed)(nil),                      // 6: determined.search.v2.RunClosed
	(*RunExitedEarly)(nil),                 // 7: determined.search.v2.RunExitedEarly
	(*SearchInactive)(nil),                 // 8: determined.search.v2.SearchInactive
	(*SearcherEvent)(nil),                  // 9: determined.search.v2.SearcherEvent
	(*ValidateAfterOperation)(nil),         // 10: determined.search.v2.ValidateAfterOperation
	(*SetSearcherProgressOperation)(nil),   // 11: determined.search.v2.SetSearcherProgressOperation
	(*CompleteValidateAfterOperation)(nil), // 12: determined.search.v2.CompleteValidateAfterOperation
	(*CreateRunOperation)(nil),             // 13: determined.search.v2.CreateRunOperation
	(*CloseRunOperation)(nil),              // 14: determined.search.v2.CloseRunOperation
	(*ShutDownOperation)(nil),              // 15: determined.search.v2.ShutDownOperation
	(*SearcherOperation)(nil),              // 16: determined.search.v2.SearcherOperation
	(*RunOperation)(nil),                   // 17: determined.search.v2.RunOperation
	(*RunnableOperation)(nil),              // 18: determined.search.v2.RunnableOperation
	(*RunSimulation)(nil),                  // 19: determined.search.v2.RunSimulation
	(*SearchSimulation)(nil),               // 20: determined.search.v2.SearchSimulation
	(*_struct.Value)(nil),                  // 21: google.protobuf.Value
	(State)(0),                             // 22: determined.search.v2.State
	(*_struct.Struct)(nil),                 // 23: google.protobuf.Struct
}
var file_determined_search_v2_searcher_proto_depIdxs = []int32{
	21, // 0: determined.search.v2.ValidationCompleted.metric:type_name -> google.protobuf.Value
	1,  // 1: determined.search.v2.RunExitedEarly.exited_reason:type_name -> determined.search.v2.RunExitedEarly.ExitedReason
	22, // 2: determined.search.v2.SearchInactive.search_state:type_name -> determined.search.v2.State
	2,  // 3: determined.search.v2.SearcherEvent.initial_operations:type_name -> determined.search.v2.InitialOperations
	3,  // 4: determined.search.v2.SearcherEvent.run_created:type_name -> determined.search.v2.RunCreated
	5,  // 5: determined.search.v2.SearcherEvent.validation_completed:type_name -> determined.search.v2.ValidationCompleted
	6,  // 6: determined.search.v2.SearcherEvent.run_closed:type_name -> determined.search.v2.RunClosed
	7,  // 7: determined.search.v2.SearcherEvent.run_exited_early:type_name -> determined.search.v2.RunExitedEarly
	4,  // 8: determined.search.v2.SearcherEvent.run_progress:type_name -> determined.search.v2.RunProgress
	8,  // 9: determined.search.v2.SearcherEvent.search_inactive:type_name -> determined.search.v2.SearchInactive
	10, // 10: determined.search.v2.CompleteValidateAfterOperation.op:type_name -> determined.search.v2.ValidateAfterOperation
	21, // 11: determined.search.v2.CompleteValidateAfterOperation.searcher_metric:type_name -> google.protobuf.Value
	17, // 12: determined.search.v2.SearcherOperation.run_operation:type_name -> determined.search.v2.RunOperation
	13, // 13: determined.search.v2.SearcherOperation.create_run:type_name -> determined.search.v2.CreateRunOperation
	14, // 14: determined.search.v2.SearcherOperation.close_run:type_name -> determined.search.v2.CloseRunOperation
	15, // 15: determined.search.v2.SearcherOperation.shut_down:type_name -> determined.search.v2.ShutDownOperation
	11, // 16: determined.search.v2.SearcherOperation.set_searcher_progress:type_name -> determined.search.v2.SetSearcherProgressOperation
	10, // 17: determined.search.v2.RunOperation.validate_after:type_name -> determined.search.v2.ValidateAfterOperation
	0,  // 18: determined.search.v2.RunnableOperation.type:type_name -> determined.search.v2.RunnableType
	18, // 19: determined.search.v2.RunSimulation.operations:type_name -> determined.search.v2.RunnableOperation
	23, // 20: determined.search.v2.SearchSimulation.config:type_name -> google.protobuf.Struct
	19, // 21: determined.search.v2.SearchSimulation.runs:type_name -> determined.search.v2.RunSimulation
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_determined_search_v2_searcher_proto_init() }
func file_determined_search_v2_searcher_proto_init() {
	if File_determined_search_v2_searcher_proto != nil {
		return
	}
	file_determined_search_v2_search_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_determined_search_v2_searcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunExitedEarly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInactive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearcherEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAfterOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSearcherProgressOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteValidateAfterOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRunOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRunOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutDownOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearcherOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnableOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSimulation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_determined_search_v2_searcher_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSimulation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_determined_search_v2_searcher_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SearcherEvent_InitialOperations)(nil),
		(*SearcherEvent_RunCreated)(nil),
		(*SearcherEvent_ValidationCompleted)(nil),
		(*SearcherEvent_RunClosed)(nil),
		(*SearcherEvent_RunExitedEarly)(nil),
		(*SearcherEvent_RunProgress)(nil),
		(*SearcherEvent_SearchInactive)(nil),
	}
	file_determined_search_v2_searcher_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*SearcherOperation_RunOperation)(nil),
		(*SearcherOperation_CreateRun)(nil),
		(*SearcherOperation_CloseRun)(nil),
		(*SearcherOperation_ShutDown)(nil),
		(*SearcherOperation_SetSearcherProgress)(nil),
	}
	file_determined_search_v2_searcher_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*RunOperation_ValidateAfter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_determined_search_v2_searcher_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_determined_search_v2_searcher_proto_goTypes,
		DependencyIndexes: file_determined_search_v2_searcher_proto_depIdxs,
		EnumInfos:         file_determined_search_v2_searcher_proto_enumTypes,
		MessageInfos:      file_determined_search_v2_searcher_proto_msgTypes,
	}.Build()
	File_determined_search_v2_searcher_proto = out.File
	file_determined_search_v2_searcher_proto_rawDesc = nil
	file_determined_search_v2_searcher_proto_goTypes = nil
	file_determined_search_v2_searcher_proto_depIdxs = nil
}
