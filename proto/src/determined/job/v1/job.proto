syntax = "proto3";

package determined.job.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/jobv1";

import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Job type.
enum Type {
  // Unspecified state.
  TYPE_UNSPECIFIED = 0;
  // Experiement Job.
  TYPE_EXPERIMENT = 1;
  // Jupyter Notebook Job.
  TYPE_NOTEBOOK = 2;
  // TensorBoard Job.
  TYPE_TENSORBOARD = 3;
  // Shell Job.
  TYPE_SHELL = 4;
  // Command Job.
  TYPE_COMMAND = 5;
}

// Job state.
enum State {
  // Unspecified state.
  STATE_UNSPECIFIED = 0;
  // Job is queued and waiting to be schedlued.
  STATE_QUEUED = 1;
  // Job is scheduled.
  STATE_SCHEDULED = 2;
  // Job is scheduled as a backfill.
  STATE_SCHEDULED_BACKFILLED = 3;
}

// Job summary.
message JobSummary {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "job_id", "state" ] }
  };
  // Job id.
  string job_id = 1;
  // The scheduling state of the job.
  State state = 2;
  // The relative position of the job in its queue.
  // Only applicable if state != STATE_QUEUED.
  // int32 queue_position = 3;
}

// Job represents a user submitted work that is not in a terminal
// state.
message Job {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "summary",
        "type",
        "submission_time",
        "user",
        "resource_pool",
        "is_preemptible",
        "entity_id"
      ]
    }
  };
  // Job summary.
  JobSummary summary = 1;
  // Job type.
  Type type = 2;
  // The time when the job was submitted by the user.
  google.protobuf.Timestamp submission_time = 3;
  // The username of the user who submitted the job.
  string user = 4;
  // Associated resource pool.
  string resource_pool = 5;
  // Whether the job is preemptible.
  bool is_preemptible = 6;
  // The job priority in priority scheduler.
  int32 priority = 7;
  // The job weight in fairshare scheduler.
  double weight = 8;
  // Entity ID.
  string entity_id = 9;
}

// Describes a message to control jobs in a queue.
message QueueControl {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "job_id", "action" ] }
  };
  // Job id.
  string job_id = 1;
  // The resource pool to perform an action on.
  string resource_pool_source = 2;
  // The action to perform.
  oneof action {
    // Name of the target resource_pool to move the job to.
    string resource_pool = 3;
    // The desired job position in the queue.
    float queue_position = 4;
    // The desired job priority in priority scheduler.
    int32 priority = 5;
    // The desired job weight in fairshare scheduler.
    float weight = 6;
  }
}

// Statistics for (part of) a queue.
message QueueStats {
  // Number of queued jobs in the queue.
  int32 queued_count = 1;
  // Number of scheduled jobs in the queue.
  int32 scheduled_count = 2;
  // Number of preemptible jobs in the queue.
  int32 preemptible_count = 3;
}
