syntax = "proto3";

package determined.resourcepool.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/resourcepoolv1";
import "protoc-gen-swagger/options/annotations.proto";
import "determined/device/v1/device.proto";
import "determined/job/v1/job.proto";

// The type of the ResourcePool.
enum ResourcePoolType {
  // Unspecified. This value will never actually be returned by the API, it is
  // just an artifact of using protobuf.
  RESOURCE_POOL_TYPE_UNSPECIFIED = 0;
  // An AWS resource pool.
  RESOURCE_POOL_TYPE_AWS = 1;
  // A GCP resource pool.
  RESOURCE_POOL_TYPE_GCP = 2;
  // A static resource pool.
  RESOURCE_POOL_TYPE_STATIC = 3;
  // The kubernetes resource pool.
  RESOURCE_POOL_TYPE_K8S = 4;
}

// The type of the Scheduler.
enum SchedulerType {
  // Unspecified. This value will never actually be returned by the API, it is
  // just an artifact of using protobuf.
  SCHEDULER_TYPE_UNSPECIFIED = 0;
  // The priority scheduler.
  SCHEDULER_TYPE_PRIORITY = 1;
  // The fair share scheduler.
  SCHEDULER_TYPE_FAIR_SHARE = 2;
  // The round robin scheduler
  SCHEDULER_TYPE_ROUND_ROBIN = 3;
  // The kubernetes scheduler.
  SCHEDULER_TYPE_KUBERNETES = 4;
  // A slurm placeholder. When running on slurm, all scheduling behavior is
  // delegated.
  SCHEDULER_TYPE_SLURM = 5;
  // A PBS placeholder. When running on PBS, all scheduling behavior is
  // delegated.
  SCHEDULER_TYPE_PBS = 6;
}

// The fitting policy of the scheduler.
enum FittingPolicy {
  // Unspecified. This value will never actually be returned by the API, it is
  // just an artifact of using protobuf.
  FITTING_POLICY_UNSPECIFIED = 0;
  // Best fit. Tasks are preferentially “packed” together on the smallest number
  // of agents
  FITTING_POLICY_BEST = 1;
  // Worst fit. Tasks are placed on under-utilized agents, spreading out the
  // tasks.
  FITTING_POLICY_WORST = 2;
  // A kubernetes placeholder. In k8s, the task placement is delegated to the
  // k8s scheduler so the fitting policy is not relevant.
  FITTING_POLICY_KUBERNETES = 3;
  // A slurm placeholder. When running on slurm, task placement is delegated.
  FITTING_POLICY_SLURM = 4;
  // A PBS placeholder. When running on PBS, task placement is delegated.
  FITTING_POLICY_PBS = 5;
}

// A Resource Pool is a pool of resources where containers are run.
message ResourcePool {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "name",
        "description",
        "type",
        "num_agents",
        "slots_available",
        "slots_used",
        "slot_type",
        "aux_container_capacity",
        "aux_containers_running",
        "default_compute_pool",
        "default_aux_pool",
        "preemptible",
        "min_agents",
        "max_agents",
        "aux_container_capacity_per_agent",
        "scheduler_type",
        "scheduler_fitting_policy",
        "location",
        "image_id",
        "instance_type",
        "master_url",
        "master_cert_name",
        "startup_script",
        "container_startup_script",
        "agent_docker_network",
        "agent_docker_runtime",
        "agent_docker_image",
        "agent_fluent_image",
        "max_idle_agent_period",
        "max_agent_starting_period",
        "details"
      ]
    }
  };
  // The unique name of the resource pool.
  string name = 1;
  // The description of the resource pool
  string description = 2;
  // The type of the resource pool (AWS/GCP/STATIC)
  ResourcePoolType type = 3;
  // The number of agents running in the resource pool
  int32 num_agents = 4;
  // The total number of slots that exist in the resource pool
  int32 slots_available = 5;
  // The number of slots that are actively running workloads
  int32 slots_used = 6;
  // Slot device type: cpu, gpu, ...
  determined.device.v1.Type slot_type = 32;
  // The max number of aux containers that can run in this resource pool
  int32 aux_container_capacity = 7;
  // The current number of aux containers running in this resource pool
  int32 aux_containers_running = 8;
  // Is this resource pool the default compute pool?
  bool default_compute_pool = 9;
  // Is this resource pool the default auxiliary pool?
  bool default_aux_pool = 10;
  // Is this resource pool using preemptible/spot instances? Only meaningful in
  // an AWS or GCP resource pool.
  bool preemptible = 11;
  // When using dynamic agents, the minimum number of agents that can exist in
  // the resource pool.
  int32 min_agents = 12;
  // When using dynamic agents, the maximum number of agents that can exist in
  // the resource pool.
  int32 max_agents = 13;
  // The number of slots that exists on an dynamic agent.
  int32 slots_per_agent = 14;
  // The maximum number of auxiliary containers that can run on an individual
  // agent
  int32 aux_container_capacity_per_agent = 15;
  // The type of the scheduler. Either 'FAIR_SHARE', 'PRIORITY', or
  // 'ROUND_ROBIN'
  SchedulerType scheduler_type = 16;
  // The fitting policy of the scheduler.
  FittingPolicy scheduler_fitting_policy = 17;
  // The location of the resource pool. For AWS this returns the region and for
  // GCP this return the zone.
  string location = 18;
  // The VM image used for the agents when using dynamic agents.
  string image_id = 19;
  // The instance type of the agents when using dynamic agents. For AWS this is
  // the Instance Type. For GCP this is the machine type combined with the
  // number and types of GPUs. To work with this data programattically, we
  // recommend working with the ResourcePool.details.aws.instanceType and
  // ResourcePool.details.gcp.machineType/gpuType/gpuNum.
  string instance_type = 20;

  // The url of the Determined master
  string master_url = 21;
  // A hostname for which the master’s TLS certificate is valid, if the host
  // specified by the master_url option is an IP address or is not contained in
  // the certificate
  string master_cert_name = 22;
  // The startup script for the agent. This runs on the node the agent runs on.
  string startup_script = 23;
  // The startup script for the agent's container. This runs in the container
  // determined-agent runs in.
  string container_startup_script = 24;
  // The Docker network to use for the agent when using dynamic agents.
  string agent_docker_network = 25;
  // The docker runtime to use for the agent when using dynamic agents
  string agent_docker_runtime = 26;
  // The docker image to use for the agent when using dynamic agents
  string agent_docker_image = 27;
  // The Fluent docker image to use
  string agent_fluent_image = 28;
  // The maximum idle period of agents in seconds. The master waits for this
  // period of time before shutting down idle agents.
  float max_idle_agent_period = 29;
  // The maximum starting period of agents in seconds. The master waits for this
  // period of time for starting agents before retrying.
  float max_agent_starting_period = 30;

  // GCP, AWS and Priority Scheduler details
  determined.resourcepool.v1.ResourcePoolDetail details = 31;
  // GCP, AWS accelerator information
  string accelerator = 33;

  // Job queue stats
  determined.job.v1.QueueStats stats = 34;
}

// Detailed information about the resource pool
message ResourcePoolDetail {
  // AWS-specific details
  determined.resourcepool.v1.ResourcePoolAwsDetail aws = 1;
  // GCP-specific details
  determined.resourcepool.v1.ResourcePoolGcpDetail gcp = 2;
  // Priority scheduler-specific details
  determined.resourcepool.v1.ResourcePoolPrioritySchedulerDetail
      priority_scheduler = 3;
}

// List of arbitrary user-defined tags that are added to the Determined agent
// instances
message AwsCustomTag {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "key", "value" ] }
  };
  // The key of the custom tag
  string key = 1;
  // The value of the custom tag
  string value = 2;
}

// AWS-specific details about the resource pool
message ResourcePoolAwsDetail {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "region",
        "root_volume_size",
        "image_id",
        "tag_key",
        "tag_value",
        "instance_name",
        "ssh_key_name",
        "public_ip",
        "security_group_id",
        "iam_instance_profile_arn",
        "spot_enabled"
      ]
    }
  };
  // The region the resource pool exists in
  string region = 1;
  //  Size of the root volume of the Determined agent in GB
  int32 root_volume_size = 2;
  // The AMI ID of the Determined agent
  string image_id = 3;
  // Key for tagging the Determined agent instances
  string tag_key = 4;
  // Value for tagging the Determined agent instances
  string tag_value = 5;
  // Name to set for the Determined agent instances
  string instance_name = 6;
  // The name of the SSH key registered with AWS for SSH key access to the agent
  // instances
  string ssh_key_name = 7;
  // Whether to use public IP addresses for the Determined agent
  bool public_ip = 8;
  // The ID of the subnet to run the Determined agents in
  string subnet_id = 9;
  // The ID of the security group to run the Determined agents as
  string security_group_id = 10;
  // The Amazon Resource Name (ARN) of the IAM instance profile to attach to the
  // agent instances.
  string iam_instance_profile_arn = 11;
  // AWS instance type to use for dynamic agents
  string instance_type = 12;
  // The log group
  string log_group = 13;
  // The log stream
  string log_stream = 14;
  // Whether to use spot instances
  bool spot_enabled = 15;
  //  The maximum price per hour to pay for a spot instance
  string spot_max_price = 16;
  // List of arbitrary user-defined tags that are added to the Determined agent
  // instances
  repeated determined.resourcepool.v1.AwsCustomTag custom_tags = 17;
}

// GCP-specific details about the resource pool
message ResourcePoolGcpDetail {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "project",
        "zone",
        "boot_disk_size",
        "boot_disk_source_image",
        "label_key",
        "label_value",
        "name_prefix",
        "network",
        "external_ip",
        "service_account_email",
        "service_account_scopes",
        "machine_type",
        "gpu_type",
        "gpu_num",
        "preemptible",
        "operation_timeout_period"
      ]
    }
  };
  // The project ID of the GCP resources used by Determined
  string project = 1;
  // The zone of the GCP resources used by Determined
  string zone = 2;
  // Size of the root volume of the Determined agent in GB
  int32 boot_disk_size = 3;
  // The boot disk source image of the Determined agent
  string boot_disk_source_image = 4;
  // Key for labeling the Determined agent instances.
  string label_key = 5;
  //  Value for labeling the Determined agent instances
  string label_value = 6;
  //  Name prefix to set for the Determined agent instances
  string name_prefix = 7;
  // Network resource for the Determined agent instances
  string network = 8;
  // Subnetwork resource for the Determined agent instances
  string subnetwork = 9;
  // Whether to use external IP addresses for the Determined agent instances
  bool external_ip = 10;
  // The network tags to set firewalls for the Determined agent instances
  repeated string network_tags = 11;
  //  Email of the service account for the Determined agent instances.
  string service_account_email = 12;
  //  List of scopes authorized for the Determined agent instances
  repeated string service_account_scopes = 13;
  // Type of machine for the Determined agents
  string machine_type = 14;
  // Type of GPU for the Determined agents
  string gpu_type = 15;
  // Number of GPUs for the Determined agents
  int32 gpu_num = 16;
  // Whether to use preemptible instances
  bool preemptible = 17;
  // The timeout period for tracking a GCP operation in seconds
  float operation_timeout_period = 18;
}

// A kubernetes priority class
message K8PriorityClass {
  // Priority class name.
  string priority_class = 1;
  // Priority class value.
  int32 priority_value = 2;
}

// Details related to the priority scheduler. This will only be present if the
// schedulerType=priority
message ResourcePoolPrioritySchedulerDetail {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "preemption", "default_priority" ] }
  };
  // Whether lower priority tasks should be preempted to schedule higher
  // priority tasks
  bool preemption = 1;
  // The priority that is assigned to tasks that do not explicitly specify a
  // priority.
  int32 default_priority = 2;

  // List of available priorities for K8 (if applicable).
  repeated K8PriorityClass k8_priorities = 3;
}
