syntax = "proto3";

package determined.checkpoint.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/checkpointv1";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "determined/common/v1/common.proto";
import "protoc-gen-swagger/options/annotations.proto";

// The current state of the checkpoint.
enum State {
  // The state of the checkpoint is unknown.
  STATE_UNSPECIFIED = 0;
  // The checkpoint is in an active state.
  STATE_ACTIVE = 1;
  // The checkpoint is persisted to checkpoint storage.
  STATE_COMPLETED = 2;
  // The checkpoint errored.
  STATE_ERROR = 3;
  // The checkpoint has been deleted.
  STATE_DELETED = 4;
  // The checkpoint has been partially deleted.
  STATE_PARTIALLY_DELETED = 5;
}

// CheckpointTrainingMetadata is specifically metadata about training.
message CheckpointTrainingMetadata {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [] }
  };
  // The ID of the trial that created this checkpoint.
  google.protobuf.Int32Value trial_id = 1;
  // The ID of the experiment that created this checkpoint.
  google.protobuf.Int32Value experiment_id = 2;
  // The configuration of the experiment that created this checkpoint.
  google.protobuf.Struct experiment_config = 3;
  // Hyperparameter values for the trial that created this checkpoint.
  google.protobuf.Struct hparams = 4;
  // Training metrics reported at the same steps_completed as the checkpoint.
  determined.common.v1.Metrics training_metrics = 5;
  // Validation metrics reported at the same steps_completed as the checkpoint.
  determined.common.v1.Metrics validation_metrics = 6;
  // Searcher metric (as specified by the expconf) at the same steps_completed
  // of the checkpoint.
  google.protobuf.DoubleValue searcher_metric = 17;
}

// Checkpoint a collection of files saved by a task.
message Checkpoint {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [ "uuid", "resources", "metadata", "training", "state" ]
    }
  };
  // ID of the task which generated this checkpoint.
  string task_id = 1;
  // ID of the allocation which generated this checkpoint.
  optional string allocation_id = 2;
  // UUID of the checkpoint.
  string uuid = 3;
  // Timestamp when the checkpoint was reported.
  google.protobuf.Timestamp report_time = 4;
  // Dictionary of file paths to file sizes in bytes of all files in the
  // checkpoint.
  map<string, int64> resources = 5;
  // User defined metadata associated with the checkpoint.
  google.protobuf.Struct metadata = 6;
  // The state of the underlying checkpoint.
  State state = 7;
  // Training-related data for this checkpoint.
  CheckpointTrainingMetadata training = 8;
}

// Request to change checkpoint database information.
message PatchCheckpoint {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "uuid" ] }
  };

  // Gets around not being able to do "Optional map<string, int64>".
  // Not ideal but this API is marked internal for now.
  message OptionalResources {
    // Resources.
    map<string, int64> resources = 1;
  }

  // The uuid of the checkpoint.
  string uuid = 1;

  // Dictionary of file paths to file sizes in bytes of all files in the
  // checkpoint. This won't update actual checkpoint files.
  // If len(resources) == 0 => the checkpoint is considered deleted
  // Otherwise if resources are updated the checkpoint is considered partially
  // deleted.
  optional OptionalResources resources = 2;
}
