syntax = "proto3";

package determined.common.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/commonv1";

import "google/protobuf/struct.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/timestamp.proto";

// Aggregate and batch metrics
message Metrics {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "avg_metrics" ] }
  };
  // Aggregate user-generated metrics
  google.protobuf.Struct avg_metrics = 1;
  // User-generated metrics for each batch
  repeated google.protobuf.Struct batch_metrics = 2;
}

// Double filters.
message DoubleFieldFilter {
  // Less than.
  optional double lt = 2;
  // Less than or equal.
  optional double lte = 3;
  // Greater than.
  optional double gt = 4;
  // Greater than or equal.
  optional double gte = 5;
}

// Int32 filters.
message Int32FieldFilter {
  // TODO(ilia): add `exact`.

  // Less than.
  optional int32 lt = 2;
  // Less than or equal.
  optional int32 lte = 3;
  // Greater than.
  optional int32 gt = 4;
  // Greater than or equal.
  optional int32 gte = 5;
  // In a set. `in` is a reserved word in python.
  repeated int32 incl = 6;
  // Not in a set.
  repeated int32 not_in = 7;
}

// Timestamp filters.
message TimestampFieldFilter {
  // Less than.
  optional google.protobuf.Timestamp lt = 2;
  // Less than or equal.
  optional google.protobuf.Timestamp lte = 3;
  // Greater than.
  optional google.protobuf.Timestamp gt = 4;
  // Greater than or equal.
  optional google.protobuf.Timestamp gte = 5;
}

// Range filter for various value types
message PolymorphicFilter {
  // metric or column name for the filter
  optional string name = 1;
  // double value range for the query
  optional DoubleFieldFilter double_range = 2;
  // integer value range for the query
  optional Int32FieldFilter integer_range = 3;
  // time value range for the query
  optional TimestampFieldFilter time_range = 4;
}