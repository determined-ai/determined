syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "google/protobuf/struct.proto";

import "determined/api/v1/command.proto";
import "determined/api/v1/pagination.proto";
import "determined/shell/v1/shell.proto";
import "determined/util/v1/util.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get a list of shells.
message GetShellsRequest {
  // Sorts shells by the given field.
  enum SortBy {
    // Returns shells in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns shells sorted by id.
    SORT_BY_ID = 1;
    // Returns shells sorted by description.
    SORT_BY_DESCRIPTION = 2;
    // Return shells sorted by start time.
    SORT_BY_START_TIME = 4;
    // Return shells sorted by workspace_id.
    SORT_BY_WORKSPACE_ID = 5;
  }
  // Sort shells by the given field.
  SortBy sort_by = 1;
  // Order shells in either ascending or descending order.
  OrderBy order_by = 2;
  // Skip the number of shells before returning results. Negative values
  // denote number of shells to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of shells. A value of 0 denotes no limit.
  int32 limit = 4;
  // Limit shells to those that are owned by users with the specified usernames.
  repeated string users = 5;
  // Limit shells to those that are owned by users with the specified userIds.
  repeated int32 user_ids = 6;
  // Limit to those within a specified workspace, or 0 for all
  // accessible workspaces.
  int32 workspace_id = 7;
}
// Response to GetShellsRequest.
message GetShellsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "shells" ] }
  };
  // The list of returned shells.
  repeated determined.shell.v1.Shell shells = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Get the requested shell.
message GetShellRequest {
  // The id of the shell.
  string shell_id = 1;
}
// Response to GetShellRequest.
message GetShellResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "shell", "config" ] }
  };
  // The requested shell.
  determined.shell.v1.Shell shell = 1;
  // The shell config.
  google.protobuf.Struct config = 2;
}

// Kill the requested shell.
message KillShellRequest {
  // The id of the shell.
  string shell_id = 1;
}
// Response to KillShellRequest.
message KillShellResponse {
  // The requested shell.
  determined.shell.v1.Shell shell = 1;
}

// Set the priority of the requested shell.
message SetShellPriorityRequest {
  // The id of the shell.
  string shell_id = 1;
  // The new priority.
  int32 priority = 2;
}
// Response to SetShellPriorityRequest.
message SetShellPriorityResponse {
  // The requested shell.
  determined.shell.v1.Shell shell = 1;
}

// Request to launch a shell.
message LaunchShellRequest {
  // Shell config (JSON).
  google.protobuf.Struct config = 1;
  // Template name.
  string template_name = 2;
  // The files to run with the command.
  repeated determined.util.v1.File files = 3;
  // Additional data.
  bytes data = 4;
  // Workspace ID. Defaults to 'Uncategorized' workspace if not specified.
  int32 workspace_id = 5;
}
// Response to LaunchShellRequest.
message LaunchShellResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "shell", "config" ] }
  };
  // The requested shell.
  determined.shell.v1.Shell shell = 1;
  // The config;
  google.protobuf.Struct config = 2;

  // List of any related warnings.
  repeated LaunchWarning warnings = 3;
}
