syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "determined/api/v1/pagination.proto";
import "determined/model/v1/model.proto";
import "determined/trial/v1/trial.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get the requested model.
message GetModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name" ] }
  };

  // The name of the model.
  string model_name = 2;
}

// Response to GetModelRequest.
message GetModelResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model" ] }
  };

  // The model requested.
  determined.model.v1.Model model = 1;
}

// Get a list of models.
message GetModelsRequest {
  // Sort models by the given field.
  enum SortBy {
    // Returns models in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns models sorted by name.
    SORT_BY_NAME = 1;
    // Returns models sorted by description.
    SORT_BY_DESCRIPTION = 2;
    // Returns models sorted by creation time.
    SORT_BY_CREATION_TIME = 4;
    // Returns models sorted by last updated time.
    SORT_BY_LAST_UPDATED_TIME = 5;
    // Returns models sorted by number of version.
    SORT_BY_NUM_VERSIONS = 6;
    // Returns models sorted by workspace name.
    SORT_BY_WORKSPACE = 7;
  }

  // Sort the models by the given field.
  SortBy sort_by = 1;
  // Order models in either ascending or descending order.
  OrderBy order_by = 2;

  // Skip the number of models before returning results. Negative values
  // denote number of models to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of models. A value of 0 denotes no limit.
  int32 limit = 4;

  // Limit the models to those matching or partially-matching the name.
  string name = 5;
  // Limit the models to those matching or partially-matching the description.
  string description = 6;

  // Limit the models to those with the following labels.
  repeated string labels = 7;

  // Limit to unarchived models only.
  google.protobuf.BoolValue archived = 8;

  // Limit the models to those made by the users with the following usernames.
  repeated string users = 9;

  // Limit models to those that belong to the following workspace names.
  repeated string workspace_names = 12;

  // Limit the models to those made by the users with the following userIds.
  repeated int32 user_ids = 11;

  // Limit the models to this model id.
  int32 id = 10;

  // Limit models to those that belong to the following workspace ids.
  repeated int32 workspace_ids = 13;
}

// Response to GetModelsRequest.
message GetModelsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "models", "pagination" ] }
  };
  // The list of returned models.
  repeated determined.model.v1.Model models = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Get a list of model labels.
message GetModelLabelsRequest {
  // Optional workspace ID to limit query for model tags.
  optional int32 workspace_id = 1;
}

// Response to GetModelLabelsRequest.
message GetModelLabelsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "labels" ] }
  };

  // List of labels used across all models.
  repeated string labels = 1;
}

// Request for creating a model in the registry.
message PostModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "name" ] }
  };
  // The name of the model.
  string name = 1;
  // The description of the model.
  string description = 2;
  // The user-defined metadata of the model.
  google.protobuf.Struct metadata = 3;
  // Labels associated with this model.
  repeated string labels = 4;
  // The name of the workspace associated with this model.
  optional string workspace_name = 5;
  // The id of the workspace associated with this model.
  optional int32 workspace_id = 7;
  // Notes associated with this model.
  string notes = 6;
}

// Response to PostModelRequest.
message PostModelResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model" ] }
  };

  // The model created.
  determined.model.v1.Model model = 1;
}

// Request for updating a model in the registry.
message PatchModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model", "model_name" ] }
  };

  // The model desired model fields and values.
  determined.model.v1.PatchModel model = 1;
  // The name of the model being updated.
  string model_name = 3;
}

// Response to PatchModelRequest.
message PatchModelResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model" ] }
  };

  // The model created.
  determined.model.v1.Model model = 1;
}

// Request for archiving a model in the registry.
message ArchiveModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name" ] }
  };

  // The name of the model to archive.
  string model_name = 2;
}

// Response to ArchiveModelRequest
message ArchiveModelResponse {}

// Request for un-archiving a model in the registry.
message UnarchiveModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name" ] }
  };

  // The name of the model to un-archive.
  string model_name = 2;
}

// Response to UnarchiveModelRequest
message UnarchiveModelResponse {}

// Request to move a model to a workspace.
message MoveModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name", "destination_workspace_id" ] }
  };

  // The target model name.
  string model_name = 1;
  // The workspace id that the model will be stored.
  int32 destination_workspace_id = 2;
}

// Response to MoveModelRequest
message MoveModelResponse {}

// Request for deleting a model in the registry.
message DeleteModelRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name" ] }
  };

  // The name of the model to delete.
  string model_name = 2;
}

// Response to DeleteModelRequest
message DeleteModelResponse {}

// Request for a version of a model in the registry.
message GetModelVersionRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name", "model_version_num" ] }
  };

  // The name of the model.
  string model_name = 3;
  // Sequential model version number.
  int32 model_version_num = 2;
}

// Response for GetModelVersionRequest.
message GetModelVersionResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_version" ] }
  };

  // The model version requested.
  determined.model.v1.ModelVersion model_version = 1;
}

// Get a list of versions of the requested model.
message GetModelVersionsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name" ] }
  };

  // Sort models by the given field.
  enum SortBy {
    // Returns model versions in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns model versions sorted by version number.
    SORT_BY_VERSION = 3;
    // Returns model versions sorted by creation_time.
    SORT_BY_CREATION_TIME = 4;
  }

  // Sort the model versions by the given field.
  SortBy sort_by = 1;
  // Order model versions in either ascending or descending order.
  OrderBy order_by = 2;
  // Skip the number of model versions before returning results. Negative values
  // denote number of models to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of model versions. A value of 0 denotes no limit.
  int32 limit = 4;
  // The name of the model.
  string model_name = 6;
}

// Response for GetModelVersionRequest.
message GetModelVersionsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model", "model_versions", "pagination" ] }
  };

  // The model requested.
  determined.model.v1.Model model = 1;
  // The list of returned model versions.
  repeated determined.model.v1.ModelVersion model_versions = 2;
  // Pagination information of the full dataset.
  Pagination pagination = 3;
}

// Request for creating a model version.
message PostModelVersionRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name", "checkpoint_uuid" ] }
  };
  // The name of the model to add this version to.
  string model_name = 8;
  // UUID of the checkpoint.
  string checkpoint_uuid = 2;
  // User-friendly name for the model version.
  string name = 3;
  // User-written comment for the model version.
  string comment = 4;
  // The user-defined metadata of the model version.
  google.protobuf.Struct metadata = 5;
  // Labels associated with this model version.
  repeated string labels = 6;
  // Notes associated with this model version.
  string notes = 7;
}

// Response for PostModelVersionRequest.
message PostModelVersionResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_version" ] }
  };

  // The model version requested.
  determined.model.v1.ModelVersion model_version = 1;
}

// Request for updating a model version in the registry.
message PatchModelVersionRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [ "model_name", "model_version", "model_version_id" ]
    }
  };

  // The name of the model being updated.
  string model_name = 4;
  // Patch payload.
  determined.model.v1.PatchModelVersion model_version = 2;
  // The model version number being updated.
  int32 model_version_num = 3;
}

// Response to PatchModelVersionRequest.
message PatchModelVersionResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_version" ] }
  };

  // The model version created.
  determined.model.v1.ModelVersion model_version = 1;
}

// Request for deleting a model version in the registry.
message DeleteModelVersionRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name", "model_version_num" ] }
  };

  // The name of the model associated with the model version.
  string model_name = 3;
  // Sequential model version number.
  int32 model_version_num = 2;
}

// Response to DeleteModelVersionRequest
message DeleteModelVersionResponse {}

// Request for all metrics related to a given model version
message GetTrialSourceInfoMetricsByModelVersionRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "model_name", "model_version_num" ] }
  };
  // The name of the model associated with the model version.
  string model_name = 1;
  // Sequential model version number.
  int32 model_version_num = 2;
  // Type of the TrialSourceInfo
  optional determined.trial.v1.TrialSourceInfoType trial_source_info_type = 3;
}

// Response for all metrics related to a given checkpoint
message GetTrialSourceInfoMetricsByModelVersionResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "data" ] }
  };
  // All the related trials and their metrics
  repeated determined.trial.v1.TrialSourceInfoMetric data = 1;
}
