syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "google/protobuf/struct.proto";

import "determined/api/v1/command.proto";
import "determined/api/v1/pagination.proto";
import "determined/notebook/v1/notebook.proto";
import "determined/util/v1/util.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get a list of notebooks.
message GetNotebooksRequest {
  // Sorts notebooks by the given field.
  enum SortBy {
    // Returns notebooks in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns notebooks sorted by id.
    SORT_BY_ID = 1;
    // Returns notebooks sorted by description.
    SORT_BY_DESCRIPTION = 2;
    // Return notebooks sorted by start time.
    SORT_BY_START_TIME = 4;
    // Return notebooks sorted by workspace_id
    SORT_BY_WORKSPACE_ID = 5;
  }
  // Sort notebooks by the given field.
  SortBy sort_by = 1;
  // Order notebooks in either ascending or descending order.
  OrderBy order_by = 2;
  // Skip the number of notebooks before returning results. Negative values
  // denote number of notebooks to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of notebooks. A value of 0 denotes no limit.
  int32 limit = 4;
  // Limit notebooks to those that are owned by users with the specified
  // usernames.
  repeated string users = 5;
  // Limit notebooks to those that are owned by users with the specified
  // userIds.
  repeated int32 user_ids = 6;
  // Limit to those within a specified workspace, or 0 for all
  // accessible workspaces.
  int32 workspace_id = 12;
}
// Response to GetNotebooksRequest.
message GetNotebooksResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notebooks" ] }
  };
  // The list of returned notebooks.
  repeated determined.notebook.v1.Notebook notebooks = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Get the requested notebook.
message GetNotebookRequest {
  // The id of the notebook.
  string notebook_id = 1;
}
// Response to GetNotebookRequest.
message GetNotebookResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notebook", "config" ] }
  };
  // The requested notebook.
  determined.notebook.v1.Notebook notebook = 1;
  // The notebook config.
  google.protobuf.Struct config = 2;
}

// Kill the requested notebook if idle.
message IdleNotebookRequest {
  // The id of the notebook.
  string notebook_id = 1;
  // The value of idle timeout
  bool idle = 2;
}
// Response to IdleNotebookRequest.
message IdleNotebookResponse {}

// Kill the requested notebook.
message KillNotebookRequest {
  // The id of the notebook.
  string notebook_id = 1;
}
// Response to KillNotebookRequest.
message KillNotebookResponse {
  // The requested notebook.
  determined.notebook.v1.Notebook notebook = 1;
}

// Set the priority of the requested notebook.
message SetNotebookPriorityRequest {
  // The id of the notebook.
  string notebook_id = 1;
  // The new priority.
  int32 priority = 2;
}
// Response to SetNotebookPriorityRequest.
message SetNotebookPriorityResponse {
  // The requested notebook.
  determined.notebook.v1.Notebook notebook = 1;
}

// Request to launch a notebook.
message LaunchNotebookRequest {
  // Notebook config (JSON).
  google.protobuf.Struct config = 1;
  // Template name.
  string template_name = 2;
  // The files to run with the command.
  repeated determined.util.v1.File files = 3;
  // Preview a launching request without actually creating a Notebook.
  bool preview = 4;
  // Workspace ID. Defaults to 'Uncategorized' workspace if not specified.
  int32 workspace_id = 5;
}
// Response to LaunchNotebookRequest.
message LaunchNotebookResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notebook", "config" ] }
  };
  // The requested notebook.
  determined.notebook.v1.Notebook notebook = 1;
  // The config;
  google.protobuf.Struct config = 2;
  // List of any related warnings.
  repeated LaunchWarning warnings = 3;
}
