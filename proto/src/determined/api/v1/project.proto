syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "determined/project/v1/project.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get the requested project.
message GetProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response to GetProjectRequest.
message GetProjectResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project" ] }
  };

  // The project requested.
  determined.project.v1.Project project = 1;
}

// Request for experiment list columns
message GetProjectColumnsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response for experiment list columns
message GetProjectColumnsResponse {
  reserved 1 to 3;  // deprecated previous columns
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "columns" ] }
  };
  // List of columns.
  repeated determined.project.v1.ProjectColumn columns = 4;
}

// Request for experiment list metrics ranges
message GetProjectNumericMetricsRangeRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response for experiment list metrics ranges
message GetProjectNumericMetricsRangeResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "range" ] }
  };
  // List of ranges.
  repeated determined.project.v1.MetricsRange ranges = 1;
}

// Request for creating a project.
message PostProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "name", "workspace_id" ] }
  };

  // The name of the project.
  string name = 1;
  // Description of the project.
  string description = 3;
  // Id of the associated workspace.
  int32 workspace_id = 4;
}

// Response to PostProjectRequest.
message PostProjectResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project" ] }
  };

  // The project created.
  determined.project.v1.Project project = 1;
}

// Request for adding a note to a project.
message AddProjectNoteRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "note", "project_id" ] }
  };
  // The note to add.
  determined.project.v1.Note note = 1;
  // The id of the project.
  int32 project_id = 2;
}

// Response to AddProjectNoteRequest.
message AddProjectNoteResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notes" ] }
  };

  // The complete list of notes on a project.
  repeated determined.project.v1.Note notes = 1;
}

// Request for setting project notes.
message PutProjectNotesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notes", "project_id" ] }
  };
  // The complete list of notes.
  repeated determined.project.v1.Note notes = 1;
  // The id of the project.
  int32 project_id = 2;
}

// Response to PutProjectNotesRequest.
message PutProjectNotesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "notes" ] }
  };

  // The complete list of notes on a project.
  repeated determined.project.v1.Note notes = 1;
}

// Request for updating a project.
message PatchProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id", "project" ] }
  };

  // The id of the project.
  int32 id = 1;
  // The desired project fields and values to update.
  determined.project.v1.PatchProject project = 2;
}

// Response to PatchProjectRequest.
message PatchProjectResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project" ] }
  };

  // The updated project.
  determined.project.v1.Project project = 1;
}

// Request for deleting a project.
message DeleteProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response to DeleteProjectRequest.
message DeleteProjectResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "completed" ] }
  };

  // Status of deletion.
  bool completed = 1;
}

// Request to move a project into a workspace.
message MoveProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "destination_workspace_id", "project_id" ] }
  };

  // The id of the project being moved.
  int32 project_id = 1;
  // The id of the new parent workspace.
  int32 destination_workspace_id = 2;
}

// Response to MoveProjectRequest.
message MoveProjectResponse {}

// Request for archiving a project.
message ArchiveProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response to ArchiveProjectRequest.
message ArchiveProjectResponse {}

// Request for un-archiving a project.
message UnarchiveProjectRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the project.
  int32 id = 1;
}

// Response to UnarchiveProjectRequest.
message UnarchiveProjectResponse {}

// Get projects based on user activity.
message GetProjectsByUserActivityRequest {
  // Limit number of project entries
  int32 limit = 1;
}

// Response to GetProjectsByUserActivityRequest.
message GetProjectsByUserActivityResponse {
  // A list of projects
  repeated determined.project.v1.Project projects = 1;
}
