syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "determined/api/v1/pagination.proto";
import "determined/rbac/v1/rbac.proto";
import "protoc-gen-swagger/options/annotations.proto";

message GetRolesByIDRequest {
  repeated int32 role_ids = 1;
}

message GetRolesByIDResponse {
  repeated determined.rbac.v1.RoleWithAssignments roles = 1;
}

message GetRolesAssignedToUserRequest {
  int32 user_id = 1;
}

message GetRolesAssignedToUserResponse {
  repeated determined.rbac.v1.Role roles = 1;
}

message GetRolesAssignedToGroupRequest {
  int32 group_id = 1;
}

message GetRolesAssignedToGroupResponse {
  repeated determined.rbac.v1.Role roles = 1;
}

message SearchRolesAssignableToScopeRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "limit" ] }
  };

  int32 limit                 = 1;
  int32 offset                = 2;
  optional int32 workspace_id = 3;
}

message SearchRolesAssignableToScopeResponse {
  Pagination pagination                  = 1;
  repeated determined.rbac.v1.Role roles = 2;
}

// ListRolesRequest is the body of the request for the call
// to search for a role.
message ListRolesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "limit" ] }
  };

  int32 offset = 3;
  // the limit for pagination.
  int32 limit = 4;
}

// ListRolesResponse is the body of the response for the call
// to search for a role.
message ListRolesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "roles", "pagination" ] }
  };
  // a set of roles and all assignments belonging to it.
  repeated determined.rbac.v1.Role roles = 1;
  // pagination information.
  Pagination pagination = 2;
}

// AssignRolesRequest is the body of the request for the call to
// grant a user or group a role. It requires group_id, role_id,
// and either scope_workspace_id or scope_project_id.
message AssignRolesRequest {
  // the set of groups being assigned to a role.
  repeated determined.rbac.v1.GroupRoleAssignment group_role_assignments = 1;
  // the set of users being assigned to a role.
  repeated determined.rbac.v1.UserRoleAssignment user_role_assignments = 2;
}

// AssignRolesResponse is the body of the request for the call
// to grant a user or group a role.
message AssignRolesResponse {}

// RemoveAssignmentsRequest is the body of the request for the call
// to remove a user or group from a role.
message RemoveAssignmentsRequest {
  // the set of groups being removed from a role.
  repeated determined.rbac.v1.GroupRoleAssignment group_role_assignments = 1;
  // the set of users being removed from a role.
  repeated determined.rbac.v1.UserRoleAssignment user_role_assignments = 2;
}

// RemoveAssignmentsResponse is the body of the response for teh call
// to remove a user or group from a role.
message RemoveAssignmentsResponse {}
