syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "determined/api/v1/pagination.proto";
import "determined/project/v1/project.proto";
import "determined/workspace/v1/workspace.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "determined/user/v1/user.proto";

// Get the requested workspace.
message GetWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to GetWorkspaceRequest.
message GetWorkspaceResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "workspace" ] }
  };

  // The workspace requested.
  determined.workspace.v1.Workspace workspace = 1;
}

// Get a list of projects associated with a workspace.
message GetWorkspaceProjectsRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // Sort associated projects by the given field.
  enum SortBy {
    // Returns projects in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns projects sorted by time that they were created.
    SORT_BY_CREATION_TIME = 1;
    // Returns projects sorted by most recent start of an experiment.
    SORT_BY_LAST_EXPERIMENT_START_TIME = 2;
    // Returns projects sorted by name.
    SORT_BY_NAME = 3;
    // Returns projects sorted by description.
    SORT_BY_DESCRIPTION = 4;
    // Returns projects sorted by ID.
    SORT_BY_ID = 5;
  }

  // Sort the projects by the given field.
  SortBy sort_by = 1;
  // Order projects in either ascending or descending order.
  OrderBy order_by = 2;

  // Skip the number of projects before returning results. Negative values
  // denote number of projects to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of projects. A value of 0 denotes no limit.
  int32 limit = 4;

  // The id of the workspace.
  // When id is set to 0, return all projects across the all workspaces.
  int32 id = 5;

  // Limit the projects to those matching the name.
  string name = 6;
  // Limit the projects to those with an archived status.
  google.protobuf.BoolValue archived = 7;
  // Limit the projects to those from particular users, by usernames.
  repeated string users = 8;
  // Limit the projects to those from particular users, by userIds.
  repeated int32 user_ids = 9;
}

// Response to GetWorkspaceProjectsRequest.
message GetWorkspaceProjectsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "pagination", "projects" ] }
  };

  // The projects associated with the workspace.
  repeated determined.project.v1.Project projects = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Get a list of workspaces.
message GetWorkspacesRequest {
  // Sort workspaces by the given field.
  enum SortBy {
    // Returns workspaces in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns workspaces sorted by id.
    SORT_BY_ID = 1;
    // Returns workspaces sorted by name.
    SORT_BY_NAME = 2;
  }

  // Sort the workspaces by the given field.
  SortBy sort_by = 1;
  // Order workspaces in either ascending or descending order.
  OrderBy order_by = 2;

  // Skip the number of workspaces before returning results. Negative values
  // denote number of workspaces to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of workspaces. A value of 0 denotes no limit.
  int32 limit = 4;

  // Limit the workspaces to those matching the name.
  string name = 5;
  // Limit the workspaces to those with an archived status.
  google.protobuf.BoolValue archived = 6;
  // Limit the workspaces to those from particular users, by usernames.
  repeated string users = 7;
  // Limit the workspaces to those from particular users, by userIds.
  repeated int32 user_ids = 9;
  // Limit the workspaces to those with pinned status by the current user.
  google.protobuf.BoolValue pinned = 8;
}

// Response to GetWorkspacesRequest.
message GetWorkspacesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "workspaces", "pagination" ] }
  };

  // The list of returned workspaces.
  repeated determined.workspace.v1.Workspace workspaces = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Request for creating a workspace.
message PostWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "name" ] }
  };

  // The name of the workspace.
  string name = 1;
  // Optional agent host uid and gid override.
  optional determined.user.v1.AgentUserGroup agent_user_group = 12;

  // Optional checkpoint storage config.
  optional google.protobuf.Struct checkpoint_storage_config = 13;
  // The name of the default compute pool.
  string default_compute_pool = 14;
  // The name of the default aux pool.
  string default_aux_pool = 15;
}

// Response to PostWorkspaceRequest.
message PostWorkspaceResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "workspace" ] }
  };

  // The workspace created.
  determined.workspace.v1.Workspace workspace = 1;
}

// Request for updating a workspace.
message PatchWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id", "workspace" ] }
  };

  // The id of the workspace.
  int32 id = 1;
  // The desired workspace fields and values to update.
  determined.workspace.v1.PatchWorkspace workspace = 2;
}

// Response to PatchWorkspaceRequest.
message PatchWorkspaceResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "workspace" ] }
  };

  // The updated workspace.
  determined.workspace.v1.Workspace workspace = 1;
}

// Request for deleting a workspace.
message DeleteWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to DeleteWorkspaceRequest.
message DeleteWorkspaceResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "completed" ] }
  };

  // Status of deletion.
  bool completed = 1;
}

// Request for archiving a workspace.
message ArchiveWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to ArchiveWorkspaceRequest.
message ArchiveWorkspaceResponse {}

// Request for un-archiving a workspace.
message UnarchiveWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to UnarchiveWorkspaceRequest.
message UnarchiveWorkspaceResponse {}

// Request for pinning a workspace.
message PinWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to PinWorkspaceRequest.
message PinWorkspaceResponse {}

// Request for un-pinning a workspace.
message UnpinWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "id" ] }
  };

  // The id of the workspace.
  int32 id = 1;
}

// Response to UnpinWorkspaceRequest.
message UnpinWorkspaceResponse {}

// List the resource pools bound to a workspace.
message ListRPsBoundToWorkspaceRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "workspace_id", "limit" ] }
  };

  // Workspace ID.
  int32 workspace_id = 1;
  // The offset to use with pagination
  int32 offset = 2;
  // The maximum number of results to return
  int32 limit = 3;
}

// Response to ListWorkspaceRPsRequest.
message ListRPsBoundToWorkspaceResponse {
  // List of resource pools bound to the workspace.
  repeated string resource_pools = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}
