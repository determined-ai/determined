syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "google/protobuf/struct.proto";

import "determined/api/v1/pagination.proto";
import "determined/command/v1/command.proto";
import "determined/util/v1/util.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Get a list of commands.
message GetCommandsRequest {
  // Sorts commands by the given field.
  enum SortBy {
    // Returns commands in an unsorted list.
    SORT_BY_UNSPECIFIED = 0;
    // Returns commands sorted by id.
    SORT_BY_ID = 1;
    // Returns commands sorted by description.
    SORT_BY_DESCRIPTION = 2;
    // Return commands sorted by start time.
    SORT_BY_START_TIME = 4;
    // Return commands sorted by workspace_id.
    SORT_BY_WORKSPACE_ID = 5;
  }
  // Sort commands by the given field.
  SortBy sort_by = 1;
  // Order commands in either ascending or descending order.
  OrderBy order_by = 2;
  // Skip the number of commands before returning results. Negative values
  // denote number of commands to skip from the end before returning results.
  int32 offset = 3;
  // Limit the number of commands. A value of 0 denotes no limit.
  int32 limit = 4;
  // Limit commands to those that are owned by users with the specified
  // usernames.
  repeated string users = 5;
  // Limit commands to those that are owned by users with the specified userIds.
  repeated int32 user_ids = 6;
  // Limit commands to those within a specific workspace, or 0 for all
  // accessible workspaces.
  int32 workspace_id = 7;
}
// Response to GetCommandsRequest.
message GetCommandsResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "commands" ] }
  };
  // The list of returned commands.
  repeated determined.command.v1.Command commands = 1;
  // Pagination information of the full dataset.
  Pagination pagination = 2;
}

// Get the requested command.
message GetCommandRequest {
  // The id of the command.
  string command_id = 1;
}
// Response to GetCommandRequest.
message GetCommandResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "command", "config" ] }
  };
  // The requested command.
  determined.command.v1.Command command = 1;
  // The command config.
  google.protobuf.Struct config = 2;
}

// Kill the requested command.
message KillCommandRequest {
  // The id of the command.
  string command_id = 1;
}
// Response to KillCommandRequest.
message KillCommandResponse {
  // The requested command.
  determined.command.v1.Command command = 1;
}

// Set the priority of the requested command.
message SetCommandPriorityRequest {
  // The id of the command.
  string command_id = 1;
  // The new priority.
  int32 priority = 2;
}
// Response to SetCommandPriorityRequest.
message SetCommandPriorityResponse {
  // The requested command.
  determined.command.v1.Command command = 1;
}

// Request to launch a command.
message LaunchCommandRequest {
  // Command config (JSON).
  google.protobuf.Struct config = 1;
  // Template name.
  string template_name = 2;
  // The files to run with the command.
  repeated determined.util.v1.File files = 3;
  // Additional data.
  bytes data = 4;
  // Workspace ID. Defaults to the 'Uncategorized' workspace if not specified.
  int32 workspace_id = 5;
}

// Enum values for warnings when launching commands.
enum LaunchWarning {
  // Default value
  LAUNCH_WARNING_UNSPECIFIED = 0;
  // For a default webhook
  LAUNCH_WARNING_CURRENT_SLOTS_EXCEEDED = 1;
}

// Response to LaunchCommandRequest.
message LaunchCommandResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "command", "config" ] }
  };
  // The requested command.
  determined.command.v1.Command command = 1;
  // The config;
  google.protobuf.Struct config = 2;
  // If the requested slots exceeded the current max available.
  repeated LaunchWarning warnings = 3;
}
