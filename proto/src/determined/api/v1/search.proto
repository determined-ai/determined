syntax = "proto3";

package determined.api.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/apiv1";

import "protoc-gen-swagger/options/annotations.proto";

// Message for results of individual searches in a multi-search action.
message SearchActionResult {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "error", "id" ] }
  };
  // Optional error message.
  string error = 1;
  // search ID.
  int32 id = 2;
}

// Request to move the search to a different project.
message MoveSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "source_project_id", "destination_project_id" ] }
  };

  // The ids of the searches being moved. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // The id of the current parent project.
  int32 source_project_id = 2;
  // The id of the new parent project.
  int32 destination_project_id = 3;
  // Filter expression
  optional string filter = 4;
}

// Response to MoveSearchesRequest.
message MoveSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };

  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Kill searches.
message KillSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };
  // The ids of the searches being killed. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // Project id of the searches being killed.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}
// Response to KillSearchesResponse.
message KillSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };
  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Delete searches.
message DeleteSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };
  // The ids of the searches being deleted. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // Project id of the searches being deleted.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}
// Response to DeleteSearchesResponse.
message DeleteSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };
  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Request to archive the search
message ArchiveSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };

  // The ids of the searches being archived. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // The id of the current parent project.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}

// Response to ArchiveSearchesRequest.
message ArchiveSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };

  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Request to unarchive the search
message UnarchiveSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };

  // The ids of the searches being unarchived. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // The id of the current parent project.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}

// Response to UnarchiveSearchesRequest.
message UnarchiveSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };

  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Request to pause the experiment associated witha search.
message PauseSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };

  // The ids of the searches being moved. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // The id of the project of the searches being paused.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}

// Response to PauseSearchesRequest.
message PauseSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };

  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}

// Request to unpause the experiment associated witha search.
message ResumeSearchesRequest {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "project_id" ] }
  };

  // The ids of the searches being moved. Leave empty if using filter.
  repeated int32 search_ids = 1;
  // The id of the project of the searches being unpaused.
  int32 project_id = 2;
  // Filter expression
  optional string filter = 3;
}

// Response to ResumeSearchesRequest.
message ResumeSearchesResponse {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "results" ] }
  };

  // Details on success or error for each search.
  repeated SearchActionResult results = 1;
}
