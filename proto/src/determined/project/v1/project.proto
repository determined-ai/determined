syntax = "proto3";

package determined.project.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/projectv1";

import "determined/checkpoint/v1/checkpoint.proto";
import "determined/workspace/v1/workspace.proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Note is a user comment connected to a project.
message Note {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "name", "contents" ] }
  };
  // The name or title of the note.
  string name = 1;
  // The text contents of the note.
  string contents = 2;
}

// Project is a named collection of experiments.
message Project {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "archived",
        "error_message",
        "id",
        "immutable",
        "name",
        "notes",
        "num_active_experiments",
        "num_experiments",
        "state",
        "user_id",
        "username",
        "workspace_id"
      ]
    }
  };
  // The unique id of the project.
  int32 id = 1;
  // The unique name of the project.
  string name = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
    min_length: 1
  }];
  // The id of the associated workspace.
  int32 workspace_id = 3;
  // The description of the project.
  string description = 4;
  // Time of most recently started experiment within this project.
  google.protobuf.Timestamp last_experiment_started_at = 5;
  // Notes associated with this project.
  repeated Note notes = 6;
  // Count of experiments associated with this project.
  int32 num_experiments = 7;
  // Count of active experiments associated with this project.
  int32 num_active_experiments = 8;
  // Whether this project is archived or not.
  bool archived = 9;
  // User who created this project.
  string username = 10;
  // Whether this project is immutable (default uncategorized project).
  bool immutable = 11;
  // ID of the user who created this project.
  int32 user_id = 12;
  // The name of the associated workspace.
  string workspace_name = 13;
  // State of project during deletion.
  determined.workspace.v1.WorkspaceState state = 14;
  // Message stored from errors on async-deleting a project.
  string error_message = 15;
}

// ProjectModel is a checkpoint associated with a project.
message ProjectModel {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: { required: [ "name", "checkpoint" ] }
  };
  // Name of the saved checkpoint.
  string name = 1;
  // Checkpoint associated with the project.
  determined.checkpoint.v1.Checkpoint checkpoint = 2;
}

// PatchProject is a partial update to a project with all optional fields.
message PatchProject {
  // The new name for the project.
  google.protobuf.StringValue name = 1;
  // The new description for the project.
  google.protobuf.StringValue description = 2;
}
