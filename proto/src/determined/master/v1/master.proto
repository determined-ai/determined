syntax = "proto3";

package determined.master.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/masterv1";

import "google/protobuf/timestamp.proto";

// The period over which to perform aggregation.
enum ResourceAllocationAggregationPeriod {
  // Unspecified. This value will never actually be returned by the API, it is
  // just an artifact of using protobuf.
  RESOURCE_ALLOCATION_AGGREGATION_PERIOD_UNSPECIFIED = 0;
  // Aggregation by day.
  RESOURCE_ALLOCATION_AGGREGATION_PERIOD_DAILY = 1;
  // Aggregation by month.
  RESOURCE_ALLOCATION_AGGREGATION_PERIOD_MONTHLY = 2;
}

// One instance of slots in the cluster being allocated to a task.
message ResourceAllocationRawEntry {
  // The kind of workload being run during this allocation (training,
  // checkpoint, or validation).
  string kind = 1;
  // The time at which the allocation began.
  google.protobuf.Timestamp start_time = 2;
  // The time at which the allocation ended.
  google.protobuf.Timestamp end_time = 3;
  // The ID of the experiment the allocation is a part of.
  int32 experiment_id = 4;
  // The username of the user who ran the experiment.
  string username = 5;
  // The labels assigned to the experiment.
  repeated string labels = 6;
  // The number of seconds for which the allocation was active during the
  // requested period.
  float seconds = 7;
  // The number of slots used by the allocation.
  int32 slots = 8;
}

// These values must be kept in sync with the SQL query that retrieves
// aggregated information. This comment has a blank line after it so it is not
// attached to the type.

// A type of aggregation performed on allocation values.
enum ResourceAllocationAggregationType {
  // Unspecified. This value will never actually be returned by the API, it is
  // just an artifact of using protobuf.
  RESOURCE_ALLOCATION_AGGREGATION_TYPE_UNSPECIFIED = 0;
  // Aggregation by days only.
  RESOURCE_ALLOCATION_AGGREGATION_TYPE_TOTAL = 1;
  // Aggregation by owner within each day.
  RESOURCE_ALLOCATION_AGGREGATION_TYPE_USER = 2;
  // Aggregation by experiment labels within each day.
  RESOURCE_ALLOCATION_AGGREGATION_TYPE_LABEL = 3;
}

// One instance of slots in the cluster being allocated to a task during a day
// (aggregated).
message ResourceAllocationAggregatedEntry {
  // The type of aggregation performed for this entry.
  ResourceAllocationAggregationType aggregation_type = 1;
  // The value on which the aggregation was grouped ("total" for TOTAL, the
  // username for USER, or the experiment label for LABEL).
  string aggregation_key = 2;
  // The date (YYYY-MM-DD) or month (YYYY-MM) of this entry.
  string date = 3;
  // The total number of seconds included in this allocation entry.
  float seconds = 4;
}
