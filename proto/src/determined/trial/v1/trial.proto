syntax = "proto3";

package determined.trial.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/trialv1";

import "google/protobuf/struct.proto";
import "determined/experiment/v1/experiment.proto";
import "determined/checkpoint/v1/checkpoint.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";


// TrialValidation represents a validation entry presenting the searcher_metric.
message TrialValidation {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
      required: ["batch_number", "start_time", "state"]
   }
  };
  // The batch number where validation was evaluated.
  int32 batch_number = 1;
  // The time validation was started.
  google.protobuf.Timestamp start_time = 2;
  // The time validaiton ended.
  google.protobuf.Timestamp end_time = 3;
  // The current validation state.
  determined.experiment.v1.State state = 4;
  // The value of the `searcher.metric`, indicated by the experiment config, for the validation.
  float searcher_metric = 5;
}

// CheckpointBase is an artifact created by a trial during training.
message TrialCheckpoint {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
          required: ["uuid", "batch_number", "start_time", "state"]
      }
  };
  // UUID of the checkpoint.
  string uuid = 1;
  // The batch number where checkpoint was evaluated.
  int32 batch_number = 2;
  // Timestamp when the checkpoint began being saved to persistent storage.
  google.protobuf.Timestamp start_time  = 3;
  // Timestamp when the checkpoint completed being saved to persistent storage.
  google.protobuf.Timestamp end_time  = 4;
  // Dictionary of file paths to file sizes in bytes of all files in the checkpoint.
  map<string, int64> resources = 5;
  // The state of the checkpoint.
  determined.checkpoint.v1.State state = 6;
}

// TODO ideally we can share more between these messages.
message CheckpointWorkload {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
      required: ["start_time", "state"]
   }
  };
  string uuid = 1;
  // The time the step was started.
  google.protobuf.Timestamp start_time = 2;
  // The time the step ended if the trial is stopped.
  google.protobuf.Timestamp end_time = 3;
  // The state of the checkpoint.
  determined.checkpoint.v1.State state = 4;
  // Dictionary of file paths to file sizes in bytes of all files in the checkpoint.
  map<string, int64> resources = 5;
}

message MetricsWorkload {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
      required: ["start_time", "state"]
   }
  };
  // The time the step was started.
  google.protobuf.Timestamp start_time = 1;
  // The time the step ended if the trial is stopped.
  google.protobuf.Timestamp end_time = 2;
  // The current validation state.
  determined.experiment.v1.State state = 3;
  // Metrics.
  map<string, float> metrics = 4; // FIXME string, string legacy metrics?
  // Number of inputs processed.
  int32 num_inputs = 5;
}


message Workload {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
      required: ["id", "num_batches", "prior_batches_processed", "training"]
   }
  };
  // Workload ID.
  int32 id = 1;
  // Number of batches in this workload.
  int32 num_batches = 2;
  // Number of batches processed prior to this workload.
  int32 prior_batches_processed = 3;
  // Associated checkpoint if any.
  CheckpointWorkload checkpoint = 4;
  // Associated validation if any.
  MetricsWorkload validation = 5;
  // Associated training.
  MetricsWorkload training = 6;
}


// Trial is a set of workloads and are exploring a determined set of hyperparameters.
message Trial {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
      json_schema: {
      required: ["id", "experiment_id", "start_time", "state", "hparams", "total_batches_processed"]
   }
  };
  // The id of the trial.
  int32 id = 1;
  // The id of the parent experiment.
  int32 experiment_id = 2;
  // The time the trial was started.
  google.protobuf.Timestamp start_time = 3;
  // The time the trial ended if the trial is stopped.
  google.protobuf.Timestamp end_time = 4;
  // The current state of the trial.
  determined.experiment.v1.State state = 5;
  // Trial hyperparameters.
  google.protobuf.Struct hparams = 6;
  // The current processed batches.
  int32 total_batches_processed = 7;
  // Best validation.
  TrialValidation best_validation = 8;
  // Latest validation.
  TrialValidation latest_validation = 9;
  // Best checkpoint.
  TrialCheckpoint best_checkpoint = 10;
}
