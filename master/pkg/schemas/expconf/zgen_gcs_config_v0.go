// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (g GCSConfigV0) GetSaveExperimentBest() int {
	if g.SaveExperimentBest == nil {
		panic("You must call WithDefaults on GCSConfigV0 before .GetSaveExperimentBest")
	}
	return *g.SaveExperimentBest
}

func (g GCSConfigV0) GetSaveTrialBest() int {
	if g.SaveTrialBest == nil {
		panic("You must call WithDefaults on GCSConfigV0 before .GetSaveTrialBest")
	}
	return *g.SaveTrialBest
}

func (g GCSConfigV0) GetSaveTrialLatest() int {
	if g.SaveTrialLatest == nil {
		panic("You must call WithDefaults on GCSConfigV0 before .GetSaveTrialLatest")
	}
	return *g.SaveTrialLatest
}

func (g GCSConfigV0) GetBucket() string {
	return g.Bucket
}

func (g GCSConfigV0) WithDefaults() GCSConfigV0 {
	return schemas.WithDefaults(g).(GCSConfigV0)
}

func (g GCSConfigV0) Merge(other GCSConfigV0) GCSConfigV0 {
	return schemas.Merge(g, other).(GCSConfigV0)
}

func (g GCSConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedGCSConfigV0()
}

func (g GCSConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/gcs.json")
}

func (g GCSConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/gcs.json")
}
