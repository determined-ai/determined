// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (e ExperimentConfigV0) BindMounts() BindMountsConfigV0 {
	return e.RawBindMounts
}

func (e *ExperimentConfigV0) SetBindMounts(val BindMountsConfigV0) {
	e.RawBindMounts = val
}

func (e ExperimentConfigV0) CheckpointPolicy() string {
	if e.RawCheckpointPolicy == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .CheckpointPolicy")
	}
	return *e.RawCheckpointPolicy
}

func (e *ExperimentConfigV0) SetCheckpointPolicy(val string) {
	e.RawCheckpointPolicy = &val
}

func (e ExperimentConfigV0) CheckpointStorage() CheckpointStorageConfigV0 {
	if e.RawCheckpointStorage == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .CheckpointStorage")
	}
	return *e.RawCheckpointStorage
}

func (e *ExperimentConfigV0) SetCheckpointStorage(val CheckpointStorageConfigV0) {
	e.RawCheckpointStorage = &val
}

func (e ExperimentConfigV0) Data() map[string]interface{} {
	return e.RawData
}

func (e *ExperimentConfigV0) SetData(val map[string]interface{}) {
	e.RawData = val
}

func (e ExperimentConfigV0) Debug() bool {
	if e.RawDebug == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Debug")
	}
	return *e.RawDebug
}

func (e *ExperimentConfigV0) SetDebug(val bool) {
	e.RawDebug = &val
}

func (e ExperimentConfigV0) Description() *string {
	return e.RawDescription
}

func (e *ExperimentConfigV0) SetDescription(val *string) {
	e.RawDescription = val
}

func (e ExperimentConfigV0) Entrypoint() *EntrypointV0 {
	return e.RawEntrypoint
}

func (e *ExperimentConfigV0) SetEntrypoint(val *EntrypointV0) {
	e.RawEntrypoint = val
}

func (e ExperimentConfigV0) Environment() EnvironmentConfigV0 {
	if e.RawEnvironment == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Environment")
	}
	return *e.RawEnvironment
}

func (e *ExperimentConfigV0) SetEnvironment(val EnvironmentConfigV0) {
	e.RawEnvironment = &val
}

func (e ExperimentConfigV0) Hyperparameters() HyperparametersV0 {
	return e.RawHyperparameters
}

func (e *ExperimentConfigV0) SetHyperparameters(val HyperparametersV0) {
	e.RawHyperparameters = val
}

func (e ExperimentConfigV0) Labels() LabelsV0 {
	return e.RawLabels
}

func (e *ExperimentConfigV0) SetLabels(val LabelsV0) {
	e.RawLabels = val
}

func (e ExperimentConfigV0) MaxRestarts() int {
	if e.RawMaxRestarts == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .MaxRestarts")
	}
	return *e.RawMaxRestarts
}

func (e *ExperimentConfigV0) SetMaxRestarts(val int) {
	e.RawMaxRestarts = &val
}

func (e ExperimentConfigV0) MinCheckpointPeriod() LengthV0 {
	if e.RawMinCheckpointPeriod == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .MinCheckpointPeriod")
	}
	return *e.RawMinCheckpointPeriod
}

func (e *ExperimentConfigV0) SetMinCheckpointPeriod(val LengthV0) {
	e.RawMinCheckpointPeriod = &val
}

func (e ExperimentConfigV0) MinValidationPeriod() LengthV0 {
	if e.RawMinValidationPeriod == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .MinValidationPeriod")
	}
	return *e.RawMinValidationPeriod
}

func (e *ExperimentConfigV0) SetMinValidationPeriod(val LengthV0) {
	e.RawMinValidationPeriod = &val
}

func (e ExperimentConfigV0) Name() Name {
	return e.RawName
}

func (e *ExperimentConfigV0) SetName(val Name) {
	e.RawName = val
}

func (e ExperimentConfigV0) Optimizations() OptimizationsConfigV0 {
	if e.RawOptimizations == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Optimizations")
	}
	return *e.RawOptimizations
}

func (e *ExperimentConfigV0) SetOptimizations(val OptimizationsConfigV0) {
	e.RawOptimizations = &val
}

func (e ExperimentConfigV0) PerformInitialValidation() bool {
	if e.RawPerformInitialValidation == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .PerformInitialValidation")
	}
	return *e.RawPerformInitialValidation
}

func (e *ExperimentConfigV0) SetPerformInitialValidation(val bool) {
	e.RawPerformInitialValidation = &val
}

func (e ExperimentConfigV0) Profiling() ProfilingConfigV0 {
	if e.RawProfiling == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Profiling")
	}
	return *e.RawProfiling
}

func (e *ExperimentConfigV0) SetProfiling(val ProfilingConfigV0) {
	e.RawProfiling = &val
}

func (e ExperimentConfigV0) Project() string {
	if e.RawProject == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Project")
	}
	return *e.RawProject
}

func (e *ExperimentConfigV0) SetProject(val string) {
	e.RawProject = &val
}

func (e ExperimentConfigV0) RecordsPerEpoch() int {
	if e.RawRecordsPerEpoch == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .RecordsPerEpoch")
	}
	return *e.RawRecordsPerEpoch
}

func (e *ExperimentConfigV0) SetRecordsPerEpoch(val int) {
	e.RawRecordsPerEpoch = &val
}

func (e ExperimentConfigV0) Reproducibility() ReproducibilityConfigV0 {
	if e.RawReproducibility == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Reproducibility")
	}
	return *e.RawReproducibility
}

func (e *ExperimentConfigV0) SetReproducibility(val ReproducibilityConfigV0) {
	e.RawReproducibility = &val
}

func (e ExperimentConfigV0) Resources() ResourcesConfigV0 {
	if e.RawResources == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Resources")
	}
	return *e.RawResources
}

func (e *ExperimentConfigV0) SetResources(val ResourcesConfigV0) {
	e.RawResources = &val
}

func (e ExperimentConfigV0) SchedulingUnit() int {
	if e.RawSchedulingUnit == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .SchedulingUnit")
	}
	return *e.RawSchedulingUnit
}

func (e *ExperimentConfigV0) SetSchedulingUnit(val int) {
	e.RawSchedulingUnit = &val
}

func (e ExperimentConfigV0) Searcher() SearcherConfigV0 {
	if e.RawSearcher == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Searcher")
	}
	return *e.RawSearcher
}

func (e *ExperimentConfigV0) SetSearcher(val SearcherConfigV0) {
	e.RawSearcher = &val
}

func (e ExperimentConfigV0) Security() *SecurityConfigV0 {
	return e.RawSecurity
}

func (e *ExperimentConfigV0) SetSecurity(val *SecurityConfigV0) {
	e.RawSecurity = val
}

func (e ExperimentConfigV0) TensorboardStorage() *TensorboardStorageConfigV0 {
	return e.RawTensorboardStorage
}

func (e *ExperimentConfigV0) SetTensorboardStorage(val *TensorboardStorageConfigV0) {
	e.RawTensorboardStorage = val
}

func (e ExperimentConfigV0) Workspace() string {
	if e.RawWorkspace == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .Workspace")
	}
	return *e.RawWorkspace
}

func (e *ExperimentConfigV0) SetWorkspace(val string) {
	e.RawWorkspace = &val
}

func (e ExperimentConfigV0) SlurmConfig() SlurmConfigV0 {
	if e.RawSlurmConfig == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .SlurmConfig")
	}
	return *e.RawSlurmConfig
}

func (e *ExperimentConfigV0) SetSlurmConfig(val SlurmConfigV0) {
	e.RawSlurmConfig = &val
}

func (e ExperimentConfigV0) PbsConfig() PbsConfigV0 {
	if e.RawPbsConfig == nil {
		panic("You must call WithDefaults on ExperimentConfigV0 before .PbsConfig")
	}
	return *e.RawPbsConfig
}

func (e *ExperimentConfigV0) SetPbsConfig(val PbsConfigV0) {
	e.RawPbsConfig = &val
}

func (e ExperimentConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedExperimentConfigV0()
}

func (e ExperimentConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/experiment.json")
}

func (e ExperimentConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/experiment.json")
}
