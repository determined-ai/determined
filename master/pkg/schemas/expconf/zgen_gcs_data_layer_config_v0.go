// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (g GCSDataLayerConfigV0) Bucket() string {
	if g.RawBucket == nil {
		panic("You must call WithDefaults on GCSDataLayerConfigV0 before .Bucket")
	}
	return *g.RawBucket
}

func (g *GCSDataLayerConfigV0) SetBucket(val string) {
	g.RawBucket = &val
}

func (g GCSDataLayerConfigV0) BucketDirectoryPath() string {
	if g.RawBucketDirectoryPath == nil {
		panic("You must call WithDefaults on GCSDataLayerConfigV0 before .BucketDirectoryPath")
	}
	return *g.RawBucketDirectoryPath
}

func (g *GCSDataLayerConfigV0) SetBucketDirectoryPath(val string) {
	g.RawBucketDirectoryPath = &val
}

func (g GCSDataLayerConfigV0) LocalCacheContainerPath() *string {
	return g.RawLocalCacheContainerPath
}

func (g *GCSDataLayerConfigV0) SetLocalCacheContainerPath(val *string) {
	g.RawLocalCacheContainerPath = val
}

func (g GCSDataLayerConfigV0) LocalCacheHostPath() *string {
	return g.RawLocalCacheHostPath
}

func (g *GCSDataLayerConfigV0) SetLocalCacheHostPath(val *string) {
	g.RawLocalCacheHostPath = val
}

func (g GCSDataLayerConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedGCSDataLayerConfigV0()
}

func (g GCSDataLayerConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/data-layer-gcs.json")
}

func (g GCSDataLayerConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/data-layer-gcs.json")
}
