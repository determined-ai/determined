// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (s SearcherConfigV0) GetUnionMember() interface{} {
	if s.RawSingleConfig != nil {
		return nil
	}
	if s.RawRandomConfig != nil {
		return nil
	}
	if s.RawGridConfig != nil {
		return nil
	}
	if s.RawAsyncHalvingConfig != nil {
		return nil
	}
	if s.RawAdaptiveASHAConfig != nil {
		return nil
	}
	if s.RawPBTConfig != nil {
		return nil
	}
	panic("no union member defined")
}

func (s SearcherConfigV0) Metric() string {
	if s.RawSingleConfig != nil {
		return s.RawSingleConfig.Metric()
	}
	if s.RawRandomConfig != nil {
		return s.RawRandomConfig.Metric()
	}
	if s.RawGridConfig != nil {
		return s.RawGridConfig.Metric()
	}
	if s.RawAsyncHalvingConfig != nil {
		return s.RawAsyncHalvingConfig.Metric()
	}
	if s.RawAdaptiveASHAConfig != nil {
		return s.RawAdaptiveASHAConfig.Metric()
	}
	if s.RawPBTConfig != nil {
		return s.RawPBTConfig.Metric()
	}
	panic("no union member defined")
}

func (s SearcherConfigV0) SmallerIsBetter() bool {
	if s.RawSingleConfig != nil {
		return s.RawSingleConfig.SmallerIsBetter()
	}
	if s.RawRandomConfig != nil {
		return s.RawRandomConfig.SmallerIsBetter()
	}
	if s.RawGridConfig != nil {
		return s.RawGridConfig.SmallerIsBetter()
	}
	if s.RawAsyncHalvingConfig != nil {
		return s.RawAsyncHalvingConfig.SmallerIsBetter()
	}
	if s.RawAdaptiveASHAConfig != nil {
		return s.RawAdaptiveASHAConfig.SmallerIsBetter()
	}
	if s.RawPBTConfig != nil {
		return s.RawPBTConfig.SmallerIsBetter()
	}
	panic("no union member defined")
}

func (s SearcherConfigV0) SourceCheckpointUUID() *string {
	if s.RawSingleConfig != nil {
		return s.RawSingleConfig.SourceCheckpointUUID()
	}
	if s.RawRandomConfig != nil {
		return s.RawRandomConfig.SourceCheckpointUUID()
	}
	if s.RawGridConfig != nil {
		return s.RawGridConfig.SourceCheckpointUUID()
	}
	if s.RawAsyncHalvingConfig != nil {
		return s.RawAsyncHalvingConfig.SourceCheckpointUUID()
	}
	if s.RawAdaptiveASHAConfig != nil {
		return s.RawAdaptiveASHAConfig.SourceCheckpointUUID()
	}
	if s.RawPBTConfig != nil {
		return s.RawPBTConfig.SourceCheckpointUUID()
	}
	panic("no union member defined")
}

func (s SearcherConfigV0) SourceTrialID() *int {
	if s.RawSingleConfig != nil {
		return s.RawSingleConfig.SourceTrialID()
	}
	if s.RawRandomConfig != nil {
		return s.RawRandomConfig.SourceTrialID()
	}
	if s.RawGridConfig != nil {
		return s.RawGridConfig.SourceTrialID()
	}
	if s.RawAsyncHalvingConfig != nil {
		return s.RawAsyncHalvingConfig.SourceTrialID()
	}
	if s.RawAdaptiveASHAConfig != nil {
		return s.RawAdaptiveASHAConfig.SourceTrialID()
	}
	if s.RawPBTConfig != nil {
		return s.RawPBTConfig.SourceTrialID()
	}
	panic("no union member defined")
}

func (s SearcherConfigV0) WithDefaults() SearcherConfigV0 {
	return schemas.WithDefaults(s).(SearcherConfigV0)
}

func (s SearcherConfigV0) Merge(other SearcherConfigV0) SearcherConfigV0 {
	return schemas.Merge(s, other).(SearcherConfigV0)
}

func (s SearcherConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedSearcherConfigV0()
}

func (s SearcherConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/searcher.json")
}

func (s SearcherConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/searcher.json")
}
