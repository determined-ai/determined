// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (o OptimizationsConfigV0) GetAggregationFrequency() int {
	if o.AggregationFrequency == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetAggregationFrequency")
	}
	return *o.AggregationFrequency
}

func (o OptimizationsConfigV0) GetAverageAggregatedGradients() bool {
	if o.AverageAggregatedGradients == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetAverageAggregatedGradients")
	}
	return *o.AverageAggregatedGradients
}

func (o OptimizationsConfigV0) GetAverageTrainingMetrics() bool {
	if o.AverageTrainingMetrics == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetAverageTrainingMetrics")
	}
	return *o.AverageTrainingMetrics
}

func (o OptimizationsConfigV0) GetGradientCompression() bool {
	if o.GradientCompression == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetGradientCompression")
	}
	return *o.GradientCompression
}

func (o OptimizationsConfigV0) GetGradUpdateSizeFile() *string {
	return o.GradUpdateSizeFile
}

func (o OptimizationsConfigV0) GetMixedPrecision() string {
	if o.MixedPrecision == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetMixedPrecision")
	}
	return *o.MixedPrecision
}

func (o OptimizationsConfigV0) GetTensorFusionThreshold() int {
	if o.TensorFusionThreshold == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetTensorFusionThreshold")
	}
	return *o.TensorFusionThreshold
}

func (o OptimizationsConfigV0) GetTensorFusionCycleTime() int {
	if o.TensorFusionCycleTime == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetTensorFusionCycleTime")
	}
	return *o.TensorFusionCycleTime
}

func (o OptimizationsConfigV0) GetAutoTuneTensorFusion() bool {
	if o.AutoTuneTensorFusion == nil {
		panic("You must call WithDefaults on OptimizationsConfigV0 before .GetAutoTuneTensorFusion")
	}
	return *o.AutoTuneTensorFusion
}

func (o OptimizationsConfigV0) WithDefaults() OptimizationsConfigV0 {
	return schemas.WithDefaults(o).(OptimizationsConfigV0)
}

func (o OptimizationsConfigV0) Merge(other OptimizationsConfigV0) OptimizationsConfigV0 {
	return schemas.Merge(o, other).(OptimizationsConfigV0)
}

func (o OptimizationsConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedOptimizationsConfigV0()
}

func (o OptimizationsConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/optimizations.json")
}

func (o OptimizationsConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/optimizations.json")
}
