// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (a AdaptiveConfigV0) GetMetric() string {
	return a.Metric
}

func (a AdaptiveConfigV0) GetSmallerIsBetter() bool {
	if a.SmallerIsBetter == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetSmallerIsBetter")
	}
	return *a.SmallerIsBetter
}

func (a AdaptiveConfigV0) GetSourceTrialID() *int {
	return a.SourceTrialID
}

func (a AdaptiveConfigV0) GetSourceCheckpointUUID() *string {
	return a.SourceCheckpointUUID
}

func (a AdaptiveConfigV0) GetMaxLength() LengthV0 {
	return a.MaxLength
}

func (a AdaptiveConfigV0) GetBudget() LengthV0 {
	return a.Budget
}

func (a AdaptiveConfigV0) GetBracketRungs() []int {
	if a.BracketRungs == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetBracketRungs")
	}
	return *a.BracketRungs
}

func (a AdaptiveConfigV0) GetDivisor() float64 {
	if a.Divisor == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetDivisor")
	}
	return *a.Divisor
}

func (a AdaptiveConfigV0) GetTrainStragglers() bool {
	if a.TrainStragglers == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetTrainStragglers")
	}
	return *a.TrainStragglers
}

func (a AdaptiveConfigV0) GetMode() AdaptiveMode {
	if a.Mode == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetMode")
	}
	return *a.Mode
}

func (a AdaptiveConfigV0) GetMaxRungs() int {
	if a.MaxRungs == nil {
		panic("You must call WithDefaults on AdaptiveConfigV0 before .GetMaxRungs")
	}
	return *a.MaxRungs
}

func (a AdaptiveConfigV0) WithDefaults() AdaptiveConfigV0 {
	return schemas.WithDefaults(a).(AdaptiveConfigV0)
}

func (a AdaptiveConfigV0) Merge(other AdaptiveConfigV0) AdaptiveConfigV0 {
	return schemas.Merge(a, other).(AdaptiveConfigV0)
}

func (a AdaptiveConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedAdaptiveConfigV0()
}

func (a AdaptiveConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/searcher-adaptive.json")
}

func (a AdaptiveConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/searcher-adaptive.json")
}
