// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (p PBTConfigV0) Metric() string {
	return p.RawMetric
}

func (p *PBTConfigV0) SetMetric(val string) {
	p.RawMetric = val
}

func (p PBTConfigV0) SmallerIsBetter() bool {
	if p.RawSmallerIsBetter == nil {
		panic("You must call WithDefaults on PBTConfigV0 before .RawSmallerIsBetter")
	}
	return *p.RawSmallerIsBetter
}

func (p *PBTConfigV0) SetSmallerIsBetter(val bool) {
	p.RawSmallerIsBetter = &val
}

func (p PBTConfigV0) SourceTrialID() *int {
	return p.RawSourceTrialID
}

func (p *PBTConfigV0) SetSourceTrialID(val *int) {
	p.RawSourceTrialID = val
}

func (p PBTConfigV0) SourceCheckpointUUID() *string {
	return p.RawSourceCheckpointUUID
}

func (p *PBTConfigV0) SetSourceCheckpointUUID(val *string) {
	p.RawSourceCheckpointUUID = val
}

func (p PBTConfigV0) PopulationSize() int {
	return p.RawPopulationSize
}

func (p *PBTConfigV0) SetPopulationSize(val int) {
	p.RawPopulationSize = val
}

func (p PBTConfigV0) NumRounds() int {
	return p.RawNumRounds
}

func (p *PBTConfigV0) SetNumRounds(val int) {
	p.RawNumRounds = val
}

func (p PBTConfigV0) LengthPerRound() LengthV0 {
	return p.RawLengthPerRound
}

func (p *PBTConfigV0) SetLengthPerRound(val LengthV0) {
	p.RawLengthPerRound = val
}

func (p PBTConfigV0) ReplaceFunction() PBTReplaceConfig {
	return p.RawReplaceFunction
}

func (p *PBTConfigV0) SetReplaceFunction(val PBTReplaceConfig) {
	p.RawReplaceFunction = val
}

func (p PBTConfigV0) ExploreFunction() PBTExploreConfig {
	return p.RawExploreFunction
}

func (p *PBTConfigV0) SetExploreFunction(val PBTExploreConfig) {
	p.RawExploreFunction = val
}

func (p PBTConfigV0) WithDefaults() PBTConfigV0 {
	return schemas.WithDefaults(p).(PBTConfigV0)
}

func (p PBTConfigV0) Merge(other PBTConfigV0) PBTConfigV0 {
	return schemas.Merge(p, other).(PBTConfigV0)
}

func (p PBTConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedPBTConfigV0()
}

func (p PBTConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/searcher-pbt.json")
}

func (p PBTConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/searcher-pbt.json")
}
