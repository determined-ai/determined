// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (a AsyncHalvingConfigV0) NumRungs() int {
	if a.RawNumRungs == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .NumRungs")
	}
	return *a.RawNumRungs
}

func (a *AsyncHalvingConfigV0) SetNumRungs(val int) {
	a.RawNumRungs = &val
}

func (a AsyncHalvingConfigV0) MaxLength() LengthV0 {
	if a.RawMaxLength == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .MaxLength")
	}
	return *a.RawMaxLength
}

func (a *AsyncHalvingConfigV0) SetMaxLength(val LengthV0) {
	a.RawMaxLength = &val
}

func (a AsyncHalvingConfigV0) MaxTrials() int {
	if a.RawMaxTrials == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .MaxTrials")
	}
	return *a.RawMaxTrials
}

func (a *AsyncHalvingConfigV0) SetMaxTrials(val int) {
	a.RawMaxTrials = &val
}

func (a AsyncHalvingConfigV0) Divisor() float64 {
	if a.RawDivisor == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .Divisor")
	}
	return *a.RawDivisor
}

func (a *AsyncHalvingConfigV0) SetDivisor(val float64) {
	a.RawDivisor = &val
}

func (a AsyncHalvingConfigV0) MaxConcurrentTrials() int {
	if a.RawMaxConcurrentTrials == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .MaxConcurrentTrials")
	}
	return *a.RawMaxConcurrentTrials
}

func (a *AsyncHalvingConfigV0) SetMaxConcurrentTrials(val int) {
	a.RawMaxConcurrentTrials = &val
}

func (a AsyncHalvingConfigV0) StopOnce() bool {
	if a.RawStopOnce == nil {
		panic("You must call WithDefaults on AsyncHalvingConfigV0 before .StopOnce")
	}
	return *a.RawStopOnce
}

func (a *AsyncHalvingConfigV0) SetStopOnce(val bool) {
	a.RawStopOnce = &val
}

func (a AsyncHalvingConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedAsyncHalvingConfigV0()
}

func (a AsyncHalvingConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/searcher-async-halving.json")
}

func (a AsyncHalvingConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/searcher-async-halving.json")
}
