// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (g GridConfigV0) Metric() string {
	return g.RawMetric
}

func (g *GridConfigV0) SetMetric(val string) {
	g.RawMetric = val
}

func (g GridConfigV0) SmallerIsBetter() bool {
	if g.RawSmallerIsBetter == nil {
		panic("You must call WithDefaults on GridConfigV0 before .RawSmallerIsBetter")
	}
	return *g.RawSmallerIsBetter
}

func (g *GridConfigV0) SetSmallerIsBetter(val bool) {
	g.RawSmallerIsBetter = &val
}

func (g GridConfigV0) SourceTrialID() *int {
	return g.RawSourceTrialID
}

func (g *GridConfigV0) SetSourceTrialID(val *int) {
	g.RawSourceTrialID = val
}

func (g GridConfigV0) SourceCheckpointUUID() *string {
	return g.RawSourceCheckpointUUID
}

func (g *GridConfigV0) SetSourceCheckpointUUID(val *string) {
	g.RawSourceCheckpointUUID = val
}

func (g GridConfigV0) MaxLength() LengthV0 {
	return g.RawMaxLength
}

func (g *GridConfigV0) SetMaxLength(val LengthV0) {
	g.RawMaxLength = val
}

func (g GridConfigV0) MaxConcurrentTrials() int {
	if g.RawMaxConcurrentTrials == nil {
		panic("You must call WithDefaults on GridConfigV0 before .RawMaxConcurrentTrials")
	}
	return *g.RawMaxConcurrentTrials
}

func (g *GridConfigV0) SetMaxConcurrentTrials(val int) {
	g.RawMaxConcurrentTrials = &val
}

func (g GridConfigV0) WithDefaults() GridConfigV0 {
	return schemas.WithDefaults(g).(GridConfigV0)
}

func (g GridConfigV0) Merge(other GridConfigV0) GridConfigV0 {
	return schemas.Merge(g, other).(GridConfigV0)
}

func (g GridConfigV0) ParsedSchema() interface{} {
	return schemas.ParsedGridConfigV0()
}

func (g GridConfigV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/searcher-grid.json")
}

func (g GridConfigV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/searcher-grid.json")
}
