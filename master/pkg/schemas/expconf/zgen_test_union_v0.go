// Code generated by gen.py. DO NOT EDIT.

package expconf

import (
	"github.com/santhosh-tekuri/jsonschema/v2"

	"github.com/determined-ai/determined/master/pkg/schemas"
)

func (t TestUnionV0) GetUnionMember() interface{} {
	if t.RawA != nil {
		return nil
	}
	if t.RawB != nil {
		return nil
	}
	panic("no union member defined")
}

func (t TestUnionV0) CommonVal() string {
	if t.RawA != nil {
		return t.RawA.CommonVal()
	}
	if t.RawB != nil {
		return t.RawB.CommonVal()
	}
	panic("no union member defined")
}

func (t TestUnionV0) Type() string {
	if t.RawA != nil {
		return t.RawA.Type()
	}
	if t.RawB != nil {
		return t.RawB.Type()
	}
	panic("no union member defined")
}

func (t TestUnionV0) WithDefaults() TestUnionV0 {
	return schemas.WithDefaults(t).(TestUnionV0)
}

func (t TestUnionV0) Merge(other TestUnionV0) TestUnionV0 {
	return schemas.Merge(t, other).(TestUnionV0)
}

func (t TestUnionV0) ParsedSchema() interface{} {
	return schemas.ParsedTestUnionV0()
}

func (t TestUnionV0) SanityValidator() *jsonschema.Schema {
	return schemas.GetSanityValidator("http://determined.ai/schemas/expconf/v0/test-union.json")
}

func (t TestUnionV0) CompletenessValidator() *jsonschema.Schema {
	return schemas.GetCompletenessValidator("http://determined.ai/schemas/expconf/v0/test-union.json")
}
