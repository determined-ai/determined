{{- if .Values.genai }}
{{- if .Values.genai.version }}
{{- /* Helm Job to make sure that the shared filesystem sets up group permissions for */ -}}
{{- /* the all members of the group defined in .Values.genai.generatedPVC.agentGroupID */ -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: genai-initialize-shared-fs-permissions-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: genai-{{ .Release.Name }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: genai-initialize-shared-fs-permissions-{{ .Release.Name }}
      labels:
        app: genai-initialize-shared-fs-permissions-{{ .Release.Name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccount: determined-master-{{ .Release.Name }}
      restartPolicy: OnFailure
      {{ $gid := (required "A valid .Values.genai.generatedPVC.agentGroupID entry required!" .Values.genai.generatedPVC.agentGroupID) }}
      securityContext:
        runAsUser: 0
        runAsGroup: {{ $gid }}
        fsGroup: {{ $gid }}
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: initialize-shared-fs
        image: debian:bookworm-slim
        imagePullPolicy: "Always"
        volumeMounts:
          - name: genai-pvc-storage
            mountPath: /shared_fs
            readOnly: false
          - name: permissions-script
            mountPath: /scripts
            readOnly: true
        command: [ "sh", "-ex", "/scripts/enable_shared_fs.sh" ]
      volumes:
        - name: genai-pvc-storage
          persistentVolumeClaim:
            claimName: {{ include "genai.PVCName" . }}
        - name: permissions-script
          configMap:
            name: genai-shared-fs-permissions-script-{{ .Release.Name }}
{{- end }}
{{- end }}
