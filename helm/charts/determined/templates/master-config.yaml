apiVersion: v1
kind: ConfigMap
metadata:
   name: determined-master-config-{{ .Release.Name }}
   namespace: {{ .Release.Namespace }}
   labels:
     app: determined-master-{{ .Release.Name }}
     release: {{ .Release.Name }}
data:
  master.yaml: |
    checkpoint_storage:
      type: {{ required "A valid Values.checkpointStorage.type entry is required!" .Values.checkpointStorage.type | quote}}
      {{- if eq .Values.checkpointStorage.type "shared_fs" }}
      host_path: {{ required "A valid Values.checkpointStorage.hostPath entry is required!" .Values.checkpointStorage.hostPath | quote }}
      {{- else if eq .Values.checkpointStorage.type "gcs" }}
      bucket: {{ required "A valid Values.checkpointStorage.bucket entry is required!" .Values.checkpointStorage.bucket }}
      {{- else if eq .Values.checkpointStorage.type "s3" }}
      bucket: {{ required "A valid Values.checkpointStorage.bucket entry is required!" .Values.checkpointStorage.bucket }}
      access_key: {{ .Values.checkpointStorage.accessKey | quote }}
      secret_key: {{ .Values.checkpointStorage.secretKey | quote }}
      endpoint_url: {{ .Values.checkpointStorage.endpointUrl | quote }}
      {{- end }}
      save_experiment_best: {{ .Values.checkpointStorage.saveExperimentBest | default 0 }}
      save_trial_best: {{ .Values.checkpointStorage.saveTrialBest | default 1 }}
      save_trial_latest: {{ .Values.checkpointStorage.saveTrialLatest | default 1 }}

    db:
      user: {{ required "A valid Values.db.user entry required!" .Values.db.user | quote }}
      password: {{ required "A valid Values.db.password entry required!" .Values.db.password | quote }}
      {{- if .Values.db.hostAddress }}
      host: {{ .Values.db.hostAddress }}
      {{- else }}
      host: determined-db-service-{{ .Release.Name }}
      {{- end  }}
      port: {{ .Values.db.port }}
      name: {{ .Values.db.name | quote }}

    {{- if .Values.tlsSecret }}
    security:
      tls:
        cert: {{ include "determined.secretPath" . }}tls.crt
        key: {{ include "determined.secretPath" . }}tls.key
    {{ end }}
    port: {{ include "determined.masterPort" . }}

    resource_manager:
      type: "kubernetes"
      namespace: {{ .Release.Namespace }}
      max_slots_per_pod: {{ required "A valid Values.maxSlotsPerPod entry is required!" .Values.maxSlotsPerPod }}
      master_service_name: determined-master-service-{{ .Release.Name }}
      {{- if .Values.defaultScheduler}}
      {{- if eq (.Values.defaultScheduler | trim ) "coscheduler"}}
      default_scheduler: "coscheduler"
      {{- end }}
      {{- end }}

    {{ if .Values.taskContainerDefaults -}}
    task_container_defaults:
      {{- if .Values.taskContainerDefaults.networkMode }}
      network_mode: {{ .Values.taskContainerDefaults.networkMode }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.dtrainNetworkInterface }}
      dtrain_network_interface: {{ .Values.taskContainerDefaults.dtrainNetworkInterface }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.ncclPortRange }}
      nccl_port_range: {{ .Values.taskContainerDefaults.ncclPortRange }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.glooPortRange }}
      gloo_port_range: {{ .Values.taskContainerDefaults.glooPortRange }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.cpuPodSpec }}
      cpu_pod_spec: {{ .Values.taskContainerDefaults.cpuPodSpec | toJson }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.gpuPodSpec }}
      gpu_pod_spec: {{ .Values.taskContainerDefaults.gpuPodSpec | toJson }}
      {{- end }}
      {{- if and .Values.taskContainerDefaults.cpuImage .Values.taskContainerDefaults.gpuImage }}
      image:
         cpu: {{ .Values.taskContainerDefaults.cpuImage | quote }}
         gpu: {{ .Values.taskContainerDefaults.gpuImage | quote }}
      {{- else }}
      {{- if or .Values.taskContainerDefaults.cpuImage .Values.taskContainerDefaults.gpuImage }}
        {{ required "A valid .Values.taskContainerDefaults.cpuImage entry is required if setting .Values.taskContainerDefaults.gpuImage!" .Values.taskContainerDefaults.cpuImage }}
        {{ required "A valid .Values.taskContainerDefaults.gpuImage entry is required if setting .Values.taskContainerDefaults.cpuImage!" .Values.taskContainerDefaults.gpuImage }}
      {{- end }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.forcePullImage }}
      force_pull_image: {{ .Values.taskContainerDefaults.forcePullImage }}
      {{- end }}
    {{ end }}

    {{- if .Values.telemetry }}
    telemetry:
      enabled: {{ .Values.telemetry.enabled }}
    {{- end }}

    {{- if .Values.clusterName }}
    cluster_name: {{ .Values.clusterName }}
    {{- end }}

    {{- if .Values.logging }}
    logging:
      {{- if .Values.logging.type }}
      type: {{ .Values.logging.type }}
      {{- end }}

      {{- if (eq (default "" .Values.logging.type) "elastic") }}
      host: {{ required "A valid host must be provided if logging to Elasticsearch!" .Values.logging.host }}
      port: {{ required "A valid port must be provided if logging to Elasticsearch!" .Values.logging.port }}
      {{- if .Values.logging.security }}
      security:
        {{- if .Values.logging.security.username }}
        username: {{ .Values.logging.security.username }}
        {{- end }}
        {{- if .Values.logging.security.password }}
        password: {{ .Values.logging.security.password }}
        {{- end }}
        {{- if .Values.logging.security.tls }}
        tls:
          {{- if .Values.logging.security.tls.enabled }}
          enabled: {{ .Values.logging.security.tls.enabled }}
          {{- end }}
          {{- if .Values.logging.security.tls.skipVerify }}
          skip_verify: {{ .Values.logging.security.tls.skipVerify }}
          {{- end }}
          {{- if .Values.logging.security.tls.certificate }}
          certificate: /etc/determined/elastic.crt
          {{- end }}
          {{- if .Values.logging.security.tls.certificateName }}
          certificate_name: {{ .Values.logging.security.tls.certificateName }}
          {{- end }}
        {{- end}}
      {{- end }}
      {{- end }}
    {{- end}}
  {{- if .Values.logging }}
  {{- if .Values.logging.security }}
  {{- if .Values.logging.security.tls }}
  {{- if .Values.logging.security.tls.certificate }}
  elastic.crt: |{{ nindent 4 .Values.logging.security.tls.certificate }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
