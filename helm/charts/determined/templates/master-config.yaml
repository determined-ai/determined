apiVersion: v1
kind: ConfigMap
metadata:
   name: determined-master-config-{{ .Release.Name }}
   namespace: {{ .Release.Namespace }}
   labels:
     app: deteremined-master-{{ .Release.Name }}
     release: {{ .Release.Name }}
data:
  master.yaml: |
    checkpoint_storage:
      type: {{ required "A valid Values.checkpointStorage.type entry is required!" .Values.checkpointStorage.type | quote}}
      {{- if eq .Values.checkpointStorage.type "shared_fs" }}
      host_path: {{ required "A valid Values.checkpointStorage.hostPath entry is required!" .Values.checkpointStorage.hostPath | quote }}
      {{- else if eq .Values.checkpointStorage.type "gcs" }}
      bucket: {{ required "A valid Values.checkpointStorage.bucket entry is required!" .Values.checkpointStorage.bucket }} 
      {{- else if eq .Values.checkpointStorage.type "s3" }}
      bucket: {{ required "A valid Values.checkpointStorage.bucket entry is required!" .Values.checkpointStorage.bucket }} 
      access_key: {{ .Values.checkpointStorage.accessKey | quote }}
      secret_key: {{ .Values.checkpointStorage.secretKey | quote }}
      endpoint_url: {{ .Values.checkpointStorage.endpointUrl | quote }}
      {{- end }}
      save_experiment_best: {{ .Values.checkpointStorage.saveExperimentBest | default 0 }}
      save_trial_best: {{ .Values.checkpointStorage.saveTrialBest | default 1 }}
      save_trial_latest: {{ .Values.checkpointStorage.saveTrialLatest | default 1 }}

    db:
      user: {{ required "A valid Values.db.user entry required!" .Values.db.user | quote }}
      password: {{ required "A valid Values.db.password entry required!" .Values.db.password | quote }}
      {{- if .Values.db.hostAddress }}
      host: {{ .Values.db.hostAddress }}
      {{- else }}
      host: determined-db-service-{{ .Release.Name }}
      {{- end  }}
      port: {{ .Values.db.port }}
      name: {{ .Values.db.name | quote }}

    http_port: {{ .Values.httpPort }}

    scheduler:
      resource_provider:
        type: "kubernetes"
        namespace: {{ .Release.Namespace }}
        slots_per_node: {{ required "A valid Values.slotsPerNode entry is required!" .Values.slotsPerNode }}
        master_service_name: determined-master-service-{{ .Release.Name }}

    {{ if .Values.taskContainerDefaults -}}
    task_container_defaults:
      {{- if .Values.taskContainerDefaults.shmSizeBytes }}
      shm_size_bytes: {{ int $.Values.taskContainerDefaults.shmSizeBytes }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.networkMode }}
      network_mode: {{ .Values.taskContainerDefaults.networkMode }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.dtrainNetworkInterface }}
      dtrain_network_interface: {{ .Values.taskContainerDefaults.dtrainNetworkInterface }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.ncclPortRange }}
      nccl_port_range: {{ .Values.taskContainerDefaults.ncclPortRange }}
      {{- end }}
      {{- if .Values.taskContainerDefaults.glooPortRange }}
      gloo_port_range: {{ .Values.taskContainerDefaults.glooPortRange }}
      {{- end }}
    {{ end }}

    {{- if .Values.telemetry }}
    {{- if .Values.telemetry.enabled }}
    telemetry:
      enabled: {{ .Values.telemetry.enabled }}
    {{- end }}
    {{- end }}
